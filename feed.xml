<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>小白</title>
        <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
        <link>http://localhost:4000/</link>
        <description></description>
        <pubDate>Mon, 30 Apr 2018 14:07:14 +0800</pubDate>
        
        <item>
            <title>网络基础 - 传输控制协议(TCP)</title>
            <link>/2018/04/30/network-tcp.html</link>
            <guid isPermaLink="true">/2018/04/30/network-tcp.html</guid>
            <description>&lt;p&gt;传输控制协议（Transmission Control Protocol, TCP）的最终目的是为数据提供可靠的端到端传输。&lt;/p&gt;

&lt;h4 id=&quot;tcp-头&quot;&gt;TCP 头&lt;/h4&gt;

&lt;p&gt;数据结构如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-30-network-tcp/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;源端口（Source Port）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用来传输数据包的端口。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;目的端口（Destination Port）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;数据包将要被发送到的端口。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;序号（Sequence Number）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个数字用来表示一个TCP片段。这个域用来保证数据流的部分没有缺失。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;确认号（Acknowledgment Number）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个数字是通信中希望从另一设备得到的下一个数据包的序号。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;标记（Flags）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;URG、ACK、PSH、RST、SYN 和 FIN 标记都是用来表示所传输的TCP数据包的类型。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;窗口大小（Window Size）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TCP接收者缓冲的字节大小。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;校验和（Checksum）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用来保证TCP头和数据的内容在抵达目的地时的完整性。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;紧急指针（Urgent Pointer）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果设置了URG位，这个域将被检查作为额外的指令，告诉CPU从数据包的哪里开始读取数据。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;选项（Options）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各种可选的域，可以在TCP数据包中进行指定。&lt;/p&gt;

&lt;h4 id=&quot;tcp端口&quot;&gt;TCP端口&lt;/h4&gt;

&lt;p&gt;在使用TCP进行通信时，我们有65535个端口可以使用，并通常将这些端口分成两个部分。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1~1023 是标准端口组，特定服务会用到这些通常位于标准端口分组中的标准端口。&lt;/li&gt;
  &lt;li&gt;1024~65535 是临时端口组，当一个服务想在任意时间使用端口进行通信时，现代操作系统都会随机的选择一个源端口，让这个通信使用唯一源端口。这些源端口通常就位于临时端口组。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;三次握手&quot;&gt;三次握手&lt;/h4&gt;

&lt;p&gt;主要达到的目的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;保证源主机确定目标主机在线，并且可以进行通信。&lt;/li&gt;
  &lt;li&gt;让源主机检查它是否正在监听试图去连接的端口。&lt;/li&gt;
  &lt;li&gt;允许源主机向接收者发送它的起始序列号，是的两台主机可以将数据包流保持有序。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体步骤如下：&lt;/p&gt;

&lt;script src=&quot;https://cdn.rawgit.com/knsv/mermaid/6.0.0/dist/mermaid.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
sequenceDiagram
    participant A as 主机A
    participant B as 主机B
    A-&amp;gt;&amp;gt;B: SYN
    B-&amp;gt;&amp;gt;A: SYN/ACK
    A-&amp;gt;&amp;gt;B: ACK
&lt;/div&gt;

&lt;p&gt;具体说明：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;请求新的 TCP 连接时，客户端要向服务器发送⼀个⼩的 TCP 分组（通常是 40 ～ 60 个字节）。这个分组中设置了⼀个特殊的 SYN 标记，说明这是⼀个连接请求。（如上图a）。&lt;/li&gt;
  &lt;li&gt;如果服务器接受了连接，就会对⼀些连接参数进⾏计算，并向客户端回送⼀个 TCP 分组，这个分组中的 SYN 和 ACK 标记都被置位，说明连接请求已被接受（如上图b）。&lt;/li&gt;
  &lt;li&gt;最后，客户端向服务器回送⼀条确认信息，通知它连接已成功建⽴（如上图c）。现代的 TCP 栈都允许客户端在这个确认分组中发送数据。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;tcp终止&quot;&gt;TCP终止&lt;/h4&gt;

&lt;p&gt;具体步骤如下：&lt;/p&gt;

&lt;script src=&quot;https://cdn.rawgit.com/knsv/mermaid/6.0.0/dist/mermaid.js&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;mermaid&quot;&gt;
sequenceDiagram
    participant A as 主机A
    participant B as 主机B
    A-&amp;gt;&amp;gt;B: FIN/ACK
    B-&amp;gt;&amp;gt;A: ACK
    B-&amp;gt;&amp;gt;A: FIN/ACK
    A-&amp;gt;&amp;gt;B: ACK
&lt;/div&gt;

&lt;p&gt;具体说明：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;主机A通过发送一个设置了FIN和ACK标志的TCP数据包，告诉主机B通信的完成。&lt;/li&gt;
  &lt;li&gt;主机B以一个ACK数据包响应，并传输自己的FIN/ACK数据包。&lt;/li&gt;
  &lt;li&gt;主机A响应一个ACK数据包，然后结束通信过程。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;tcp重置&quot;&gt;TCP重置&lt;/h4&gt;

&lt;p&gt;在理想情况中，每一个连接都会以TCP终止来正常的结束。但在现实中，连接经常会突然断掉。举例来说，者可能由于一个潜在的攻击者正在进行端口扫描，或者仅仅是主机配置错误。在这种情况下，就需要使用设置了RST标志的TCP数据包。RST标志用来表示连接被异常中止或拒绝连接请求。&lt;/p&gt;
</description>
            <pubDate>Mon, 30 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>网络基础 - IP协议</title>
            <link>/2018/04/30/network-ip.html</link>
            <guid isPermaLink="true">/2018/04/30/network-ip.html</guid>
            <description>&lt;h4 id=&quot;ipv4&quot;&gt;IPv4&lt;/h4&gt;

&lt;p&gt;IP地址是一个32位的二进制数，通常被分割为4个“8位二进制数”（也就是4个字节）。IP地址通常用“点分十进制”表示成（a.b.c.d）的形式，其中，a,b,c,d都是0~255之间的十进制整数。例：点分十进IP地址（100.4.5.6），实际上是32位二进制数（01100100.00000100.00000101.00000110）。&lt;/p&gt;

&lt;p&gt;IP地址呗分成4个独立部分，是因为每个IP地址都包含有两个部分：网络地址和主机地址。网络地址用来标识设备所连接到的局域网，而主机地址则标识这个网络中的设备本身。而如何划分这四个部分，是由另一组名为&lt;strong&gt;网络掩码(netmask, network mask)&lt;/strong&gt;的地址信息决定的，有时也成为&lt;strong&gt;子网掩码(subnet mask)&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;网络掩码也是32位长，并且被设为1的每一位都标识者IP地址的对应部分是属于网络地址的，而剩下设为0的部分则标识者主机地址。&lt;/p&gt;

&lt;p&gt;IP地址和网络掩码为简便起见，通常会被写成&lt;strong&gt;无类型域间选路*(Classless Inter-Domain Routing, CIDR)&lt;/strong&gt;。在这种形式下，一个完整的IP地址后面会有一个左斜杠，以及一个用来标识IP地址中网络部分位数的数字。举例，IP地址10.10.1.22和网络掩码255.255.0.0，在CIDR表示下会写成10.10.1.22/16.&lt;/p&gt;

&lt;h4 id=&quot;报文结构&quot;&gt;报文结构&lt;/h4&gt;

&lt;p&gt;IPv4报文的首部包含14个字段，其中13个是必须的，第14个是可选的（红色标出），并命名为：“选项”字段。首部中的字段均以大端序包装，在以下的图表和讨论中，最高有效位（Most Significant bit）被标记为0。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-30-network-ip/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;版本（Version）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;版本字段占4bit，通信双方使用的版本必须一致。对于IPv4，字段的值是4。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;首部长度（Internet Header Length， IHL）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;占4bit，首部长度说明首部有多少32位字（4字节）。由于IPv4首部可能包含数目不定的选项，这个字段也用来确定数据的偏移量。这个字段的最小值是5（二进制0101），相当于5*4=20字节（RFC 791），最大十进制值是15。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;区分服务（Differentiated Services，DS）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;占8bit，最初被定义为服务类型字段，实际上并未使用，但1998年被IETF重定义为区分服务RFC 2474。只有在使用区分服务时，这个字段才起作用，在一般的情况  下都不使用这个字段。例如需要实时数据流的技术会应用这个字段，一个例子是VoIP。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;显式拥塞通告（ Explicit Congestion Notification，ECN）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在RFC 3168中定义，允许在不丢弃报文的同时通知对方网络拥塞的发生。ECN是一种可选的功能，仅当两端都支持并希望使用，且底层网络支持时才被使用。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;全长（Total Length）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个16位字段定义了报文总长，包含首部和数据，单位为字节。这个字段的最小值是20（20字节首部+0字节数据），最大值是216-1=65,535。IP规定所有主机都必须支持最小576字节的报文，这是假定上层数据长度512字节，加上最长IP首部60字节，加上4字节富裕量，得出576字节，但大多数现代主机支持更大的报文。当下层的数据链路协议的最大传输单元（MTU）字段的值小于IP报文长度时间，报文就必须被分片.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;标识符（Identification）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;占16位，这个字段主要被用来唯一地标识一个报文的所有分片，因为分片不一定按序到达，所以在重组时需要知道分片所属的报文。每产生一个数据报，计数器加1，并赋值给此字段。一些实验性的工作建议将此字段用于其它目的，例如增加报文跟踪信息以协助探测伪造的源地址。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;标志 （Flags）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个3位字段用于控制和识别分片，它们是：  &lt;br /&gt;
位0：保留，必须为0；  &lt;br /&gt;
位1：禁止分片（Don’t Fragment，DF），当DF=0时才允许分片；  &lt;br /&gt;
位2：更多分片（More Fragment，MF），MF=1代表后面还有分片，MF=0 代表已经是最后一个分片。  &lt;br /&gt;
如果DF标志被设置为1，但路由要求必须分片报文，此报文会被丢弃。这个标志可被用于发往没有能力组装分片的主机。  &lt;br /&gt;
当一个报文被分片，除了最后一片外的所有分片都设置MF为1。最后一个片段具有非零片段偏移字段，将其与未分片数据包区分开，未分片的偏移字段为0。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;分片偏移 （Fragment Offset）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个13位字段指明了每个分片相对于原始报文开头的偏移量，以8字节作单位。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;存活时间（Time To Live，TTL）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个8位字段避免报文在互联网中永远存在（例如陷入路由环路）。存活时间以秒为单位，但小于一秒的时间均向上取整到一秒。在现实中，这实际上成了一个跳数计数器：报文经过的每个路由器都将此字段减1，当此字段等于0时，报文不再向下一跳传送并被丢弃，最大值是255。常规地，一份ICMP报文被发回报文发送端说明其发送的报文已被丢弃。这也是traceroute的核心原理。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;协议 （Protocol）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;占8bit，这个字段定义了该报文数据区使用的协议。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;首部检验和 （Header Checksum）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个16位检验和字段只对首部查错，不包括数据部分。在每一跳，路由器都要重新计算出的首部检验和并与此字段进行比对，如果不一致，此报文将会被丢弃。重新计算的必要性是因为每一跳的一些首部字段（如TTL、Flag、Offset等）都有可能发生变化，不检查数据部分是为了减少工作量。数据区的错误留待上层协议处理——用户数据报协议（UDP）和传输控制协议（TCP）都有检验和字段。此处的检验计算方法不使用CRC。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;源地址&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个IPv4地址由四个字节共32位构成，此字段的值是将每个字节转为二进制并拼在一起所得到的32位值。  &lt;br /&gt;
例如，10.9.8.7是00001010000010010000100000000111。  &lt;br /&gt;
但请注意，因为NAT的存在，这个地址并不总是报文的真实发送端，因此发往此地址的报文会被送往NAT设备，并由它被翻译为真实的地址。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;目的地址&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;与源地址格式相同，但指出报文的接收端。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;选项&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;附加的首部字段可能跟在目的地址之后，但这并不被经常使用，从1到40个字节不等。请注意首部长度字段必须包括足够的32位字来放下所有的选项（包括任何必须的填充以使首部长度能够被32位整除）。当选项列表的结尾不是首部的结尾时，EOL（选项列表结束，0x00）选项被插入列表末尾。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用IP传递的实际数据。&lt;/p&gt;

&lt;h4 id=&quot;分片和组装&quot;&gt;分片和组装&lt;/h4&gt;

&lt;p&gt;一个数据包的分片主要是基于第2层数据链路协议所使用的最大传输单元（Maximum Transmission Unit, MTU）的大小，以及使用这些第2层协议设备的配置情况。多数情况下，第2层使用的数据链路协议是以太网。以太网的默认MTU是1500，也就是说，以太网的网络上所能传输的最大数据包大小是1500字节。&lt;/p&gt;

&lt;p&gt;当设备收到IP报文时，分析其目的地址并决定要在哪个链路上发送它。MTU决定了数据载荷的最大长度，如IP报文长度比MTU大，则IP数据包必须进行分片。每一片的长度都小于等于MTU减去IP首部长度。接下来每一片均被放到独立的IP报文中，并进行如下修改：&lt;/p&gt;

&lt;p&gt;总长字段被修改为此分片的长度；&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;更多分片（MF）标志被设置，除了最后一片；&lt;/li&gt;
  &lt;li&gt;分片偏移量字段被调整为合适的值；&lt;/li&gt;
  &lt;li&gt;首部检验和被重新计算。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如，对于一个长20字节的首部和一个MTU为1,500的以太网，分片偏移量将会是：0、(1480/8)=185、(2960/8)=370、(4440/8)=555、(5920/8)=740、等等。&lt;/p&gt;

&lt;p&gt;如果报文经过路径的MTU减小了，那么分片可能会被再次分片。&lt;/p&gt;

&lt;p&gt;比如，一个4,500字节的数据载荷被封装进了一个没有选项的IP报文（即总长为4,520字节），并在MTU为2,500字节的链路上传输，那么它会被破成如下两个分片：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-30-network-ip/2.png&quot; alt=&quot;2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现在，假设下一跳的MTU为1,500字节，那么每一个分片都会被再次分成两片(由于数据片段只有在目的主机才重新被组成数据报，因此再次分片是针对每个在网络中传输的数据帧)：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-30-network-ip/3.png&quot; alt=&quot;3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第3和4片是从原始第2片再次分片而来，所以除了分片后的最后一个分片外MF为都为1。&lt;/p&gt;

&lt;p&gt;当一个接收者发现IP报文的下列项目之一为真时：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DF标志为0；&lt;/li&gt;
  &lt;li&gt;分片偏移量字段不为0。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;它便知道这个报文已被分片，并随即将数据、标识符字段、分片偏移量和更多分片标志一起储存起来。&lt;/p&gt;

&lt;p&gt;当接受者收到了更多分片标志未被设置的分片时，它便知道原始数据载荷的总长。一旦它收齐了所有的分片，它便可以将所有片按照正确的顺序（通过分片偏移量）组装起来，并交给上层协议栈。&lt;/p&gt;
</description>
            <pubDate>Mon, 30 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>网络基础 - 地址解析协议(ARP)</title>
            <link>/2018/04/29/network-arp.html</link>
            <guid isPermaLink="true">/2018/04/29/network-arp.html</guid>
            <description>&lt;p&gt;在以太网协议中规定，同一局域网中的一台主机要和另一台主机进行直接通信，必须要知道目标主机的MAC地址。而在TCP/IP协议中，网络层和传输层只关心目标主机的IP地址。这就导致在以太网中使用IP协议时，数据链路层的以太网协议接到上层IP协议提供的数据中，只包含目的主机的IP地址。于是需要一种方法，根据目的主机的IP地址，获得其MAC地址。这就是ARP协议要做的事情。所谓&lt;strong&gt;地址解析（address resolution）&lt;/strong&gt;就是主机在发送帧前将目标IP地址转换成目标MAC地址的过程。&lt;/p&gt;

&lt;p&gt;另外，当发送主机和目的主机不在同一个局域网中时，即便知道目的主机的MAC地址，两者也不能直接通信，必须经过路由转发才可以。所以此时，发送主机通过ARP协议获得的将不是目的主机的真实MAC地址，而是一台可以通往局域网外的路由器的MAC地址。于是此后发送主机发往目的主机的所有帧，都将发往该路由器，通过它向外发送。这种情况称为&lt;strong&gt;委托ARP&lt;/strong&gt;或&lt;strong&gt;ARP代理（ARP Proxy）&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;在点对点链路中不使用ARP，实际上在点对点网络中也不使用MAC地址，因为在此类网络中分别已经获取了对端的IP地址。&lt;/p&gt;

&lt;h4 id=&quot;原理&quot;&gt;原理&lt;/h4&gt;

&lt;p&gt;在每台安装有TCP/IP协议的电脑或路由器里都有一个ARP缓存表，表里的IP地址与MAC地址是一对应的，如下表所示。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;主机名称&lt;/td&gt;
      &lt;td&gt;IP地址&lt;/td&gt;
      &lt;td&gt;MAC地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;192.168.38.10&lt;/td&gt;
      &lt;td&gt;00-AA-00-62-D2-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;192.168.38.11&lt;/td&gt;
      &lt;td&gt;00-BB-00-62-C2-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;192.168.38.12&lt;/td&gt;
      &lt;td&gt;00-CC-00-62-C2-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;D&lt;/td&gt;
      &lt;td&gt;192.168.38.13&lt;/td&gt;
      &lt;td&gt;00-DD-00-62-C2-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;192.168.38.14&lt;/td&gt;
      &lt;td&gt;00-EE-00-62-C2-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;以主机A（192.168.38.10）向主机B（192.168.38.11）发送数据为例。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;当发送数据时，主机A会在自己的ARP缓存表中寻找是否有目标IP地址。如果找到就知道目标MAC地址为（00-BB-00-62-C2-02），直接把目标MAC地址写入帧里面发送就可。&lt;/li&gt;
  &lt;li&gt;如果在ARP缓存表中没有找到相对应的IP地址，主机A就会在网络上发送一个广播（ARP request），目标MAC地址是“FF.FF.FF.FF.FF.FF”，这表示向同一网段内的所有主机发出这样的询问：“192.168.38.11的MAC地址是什么？”&lt;/li&gt;
  &lt;li&gt;网络上其他主机并不响应ARP询问，只有主机B接收到这个帧时，才向主机A做出这样的回应（ARP response）：“192.168.38.11的MAC地址是00-BB-00-62-C2-02”，此回应以单播方式。这样，主机A就知道主机B的MAC地址，它就可以向主机B发送信息。同时它还更新自己的ARP高速缓存（ARP cache），下次再向主机B发送信息时，直接从ARP缓存表里查找就可。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ARP缓存表采用老化机制，在一段时间内如果表中的某一行没有使用，就会被删除，这样可以大大减少ARP缓存表的长度，加快查询速度。&lt;/p&gt;

&lt;h4 id=&quot;数据结构&quot;&gt;数据结构&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-network-arp/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;报文数据：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;硬件类型：如以太网（0x0001）、分组无线网。&lt;/li&gt;
  &lt;li&gt;协议类型：如IP网际协议（0x0800）、IPv6（0x86DD）。&lt;/li&gt;
  &lt;li&gt;硬件地址长度：每种硬件地址的字节长度，一般为6（以太网）。&lt;/li&gt;
  &lt;li&gt;协议地址长度：每种协议地址的字节长度，一般为4（IPv4）。&lt;/li&gt;
  &lt;li&gt;操作码：1为ARP请求，2为ARP回显，3为RARP请求，4为RARP应答。&lt;/li&gt;
  &lt;li&gt;源硬件地址：n个字节，n由硬件地址长度得到，一般为发送方MAC地址。&lt;/li&gt;
  &lt;li&gt;源协议地址：m个字节，m由协议地址长度得到，一般为发送方IP地址。&lt;/li&gt;
  &lt;li&gt;目标硬件地址：n个字节，n由硬件地址长度得到，一般为目标MAC地址。&lt;/li&gt;
  &lt;li&gt;目标协议地址：m个字节，m由协议地址长度得到，一般为目标IP地址。&lt;/li&gt;
&lt;/ul&gt;
</description>
            <pubDate>Sun, 29 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>HTTP - 报文 - 首部</title>
            <link>/2018/04/29/http-headers.html</link>
            <guid isPermaLink="true">/2018/04/29/http-headers.html</guid>
            <description>&lt;p&gt;本文对HTTP报文中常见的首部做下说明。&lt;/p&gt;

&lt;h4 id=&quot;通用首部&quot;&gt;通用首部&lt;/h4&gt;

&lt;p&gt;有些⾸部提供了与报⽂相关的最基本的信息，它们被称为通⽤⾸部。它们像和事佬⼉⼀样，不论报⽂是何类型，都为其提供⼀些有⽤信息。&lt;/p&gt;

&lt;p&gt;通用信息性首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Connection&lt;/td&gt;
      &lt;td&gt;允许客户端和服务器指定与请求/响应连接有关的选项&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;提供⽇期和时间标志，说明报⽂是什么时间创建的，并列出了首部可接受的日期格式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIME-Version&lt;/td&gt;
      &lt;td&gt;给出了发送端使⽤的MIME版本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Trailer&lt;/td&gt;
      &lt;td&gt;如果报⽂采⽤了分块传输编码（chunked transfer encoding）⽅式，就可以⽤这个⾸部列出位于报⽂拖挂（trailer）部分的⾸部集合&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Transfer-Encoding&lt;/td&gt;
      &lt;td&gt;告知接收端为了保证报⽂的可靠传输，对报⽂采⽤了什么编码⽅式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Update&lt;/td&gt;
      &lt;td&gt;给出了发送端可能想要“升级”使⽤的新版本或协议&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Via&lt;/td&gt;
      &lt;td&gt;显⽰了报⽂经过的中间节点（代理、⽹关）&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;通用缓存性首部如下：&lt;/p&gt;

&lt;p&gt;HTTP/1.0 引⼊了第⼀个允许 HTTP 应⽤程序缓存对象本地副本的⾸部，这样就不需要总是直接从源端服务器获取了。最新的 HTTP 版本有⾮常丰富的缓存参数集。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cache-Control&lt;/td&gt;
      &lt;td&gt;⽤于随报⽂传送缓存指⽰&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pragma&lt;/td&gt;
      &lt;td&gt;另⼀种随报⽂传送指⽰的⽅式，但并不专⽤于缓存&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;请求首部&quot;&gt;请求首部&lt;/h4&gt;

&lt;p&gt;请求⾸部是只在请求报⽂中有意义的⾸部。⽤于说明是谁或什么在发送请求、请求源⾃何处，或者客户端的喜好及能⼒。服务器可以根据请求⾸部给出的客户端信息，试着为客户端提供更好的响应。&lt;/p&gt;

&lt;p&gt;请求信息性首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Client-IP&lt;/td&gt;
      &lt;td&gt;提供了运⾏客户端的机器的IP地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;From&lt;/td&gt;
      &lt;td&gt;提供了客户端⽤户的E-mail地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Host&lt;/td&gt;
      &lt;td&gt;给出了接收请求的服务器的主机名和端⼜号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Referer&lt;/td&gt;
      &lt;td&gt;提供了包含当前请求URI的⽂档的URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UA-Color&lt;/td&gt;
      &lt;td&gt;提供了与客户端显⽰器的显⽰颜⾊有关的信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UA-CPU&lt;/td&gt;
      &lt;td&gt;给出了客户端CPU的类型或制造商&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UA-Disp&lt;/td&gt;
      &lt;td&gt;提供了与客户端显⽰器（屏幕）能⼒有关的信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UA-OS&lt;/td&gt;
      &lt;td&gt;给出了运⾏在客户端机器上的操作系统名称及版本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UA-Pixels&lt;/td&gt;
      &lt;td&gt;提供了客户端显⽰器的像素信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;User-Agent&lt;/td&gt;
      &lt;td&gt;将发起请求的应⽤程序名称告知服务器&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Accept首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Accept ⾸部为客户端提供了⼀种将其喜好和能⼒告知服务器的⽅式，包括它们想要什么，可以使⽤什么，以及最重要的，它们不想要什么。这样，服务器就可以根据这些额外信息，对要发送的内容做出更明智的决定。Accept ⾸部会使连接的两端都受益。客户端会得到它们想要的内容，服务器则不会浪费其时间和带宽来发送客户端⽆法使⽤的东西。&lt;/p&gt;

&lt;p&gt;常用Accept首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accept&lt;/td&gt;
      &lt;td&gt;告诉服务器能够发送哪些媒体类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accept-Charset&lt;/td&gt;
      &lt;td&gt;告诉服务器能够发送哪些字符集&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accept-Encoding&lt;/td&gt;
      &lt;td&gt;告诉服务器能够发送哪些编码⽅式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accept-Language&lt;/td&gt;
      &lt;td&gt;告诉服务器能够发送哪些语⾔&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TE&lt;/td&gt;
      &lt;td&gt;告诉服务器可以使⽤哪些扩展传输编码&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;条件请求首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有时客户端希望为请求加上某些限制。&lt;/p&gt;

&lt;p&gt;常用条件请求首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Expect&lt;/td&gt;
      &lt;td&gt;允许客户端列出某请求所要求的服务器⾏为&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Match&lt;/td&gt;
      &lt;td&gt;如果实体标记与⽂档当前的实体标记相匹配，就获取这份⽂档&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Modified-Since&lt;/td&gt;
      &lt;td&gt;除⾮在某个指定的⽇期之后资源被修改过，否则就限制这个请求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-None-Match&lt;/td&gt;
      &lt;td&gt;如果提供的实体标记与当前⽂档的实体标记不相符，就获取⽂档&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Range&lt;/td&gt;
      &lt;td&gt;允许对⽂档的某个范围进⾏条件请求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;If-Unmodified-Since&lt;/td&gt;
      &lt;td&gt;除⾮在某个指定⽇期之后资源没有被修改过，否则就限制这个请求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Range&lt;/td&gt;
      &lt;td&gt;如果服务器⽀持范围请求，就请求资源的指定范围&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;安全请求首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP 本⾝就⽀持⼀种简单的机制，可以对请求进⾏质询 / 响应认证。这种机制要求客户端在获取特定的资源之前，先对⾃⾝进⾏认证，这样就可以使事务稍微安全⼀些。&lt;/p&gt;

&lt;p&gt;常用安全请求首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Authorization&lt;/td&gt;
      &lt;td&gt;包含了客户端提供给服务器，以便对其⾃⾝进⾏认证的数据&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cookie&lt;/td&gt;
      &lt;td&gt;客户端⽤它向服务器传送⼀个令牌——它并不是真正的安全⾸部，但确实隐含了安全功能&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;代理请求首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;随着因特⽹上代理的普遍应⽤，⼈们定义了⼏个⾸部来协助其更好地⼯作。&lt;/p&gt;

&lt;p&gt;常用代理请求首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Max-Forward&lt;/td&gt;
      &lt;td&gt;在通往源端服务器的路径上，将请求转发给其他代理或⽹关的最⼤次数——与TRACE⽅法⼀同使⽤&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxy-Authorization&lt;/td&gt;
      &lt;td&gt;与Authorization⾸部相同，但这个⾸部是在与代理进⾏认证时使⽤的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxy-Connection&lt;/td&gt;
      &lt;td&gt;与Connection⾸部相同，但这个⾸部是在与代理建⽴连接时使⽤的&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;响应首部&quot;&gt;响应首部&lt;/h4&gt;

&lt;p&gt;响应报⽂有⾃⼰的响应⾸部集。响应⾸部为客户端提供了⼀些额外信息，⽐如谁在发送响应、响应者的功能，甚⾄与响应相关的⼀些特殊指令。&lt;/p&gt;

&lt;p&gt;常用响应信息类首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描　　述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Age&lt;/td&gt;
      &lt;td&gt;（从最初创建开始）响应持续时间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Public&lt;/td&gt;
      &lt;td&gt;服务器为其资源⽀持的请求⽅法列表&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Retry-After&lt;/td&gt;
      &lt;td&gt;如果资源不可⽤的话，在此⽇期或时间重试&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Server&lt;/td&gt;
      &lt;td&gt;服务器应⽤程序软件的名称和版本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Title&lt;/td&gt;
      &lt;td&gt;对HTML⽂档来说，就是HTML⽂档的源端给出的标题&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Warning&lt;/td&gt;
      &lt;td&gt;⽐原因短语中更详细⼀些的警告报⽂&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;协商首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果资源有多种表⽰⽅法——⽐如，如果服务器上有某⽂档的法语和德语译稿，HTTP/1.1 可以为服务器和客户端提供对资源进⾏协商的能⼒。&lt;/p&gt;

&lt;p&gt;常用协商首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accept-Ranges&lt;/td&gt;
      &lt;td&gt;对此资源来说，服务器可接受的范围类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Vary&lt;/td&gt;
      &lt;td&gt;服务器查看的其他⾸部的列表，可能会使响应发⽣变化；也就是说，这是⼀个⾸部列表，服务器会根据这些⾸部的内容挑选出最适合的资源版本发送给客户端&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;安全响应首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP对应安全请求首部 的质询 / 响应认证机制的响应侧。&lt;/p&gt;

&lt;p&gt;常用安全响应首部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ProxyAuthenticate&lt;/td&gt;
      &lt;td&gt;来⾃代理的对客户端的质询列表&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Set-Cookie&lt;/td&gt;
      &lt;td&gt;不是真正的安全⾸部，但隐含有安全功能；可以在客户端设置⼀个令牌，以便服务器对客户端进⾏标识&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WWW-Authenticate&lt;/td&gt;
      &lt;td&gt;来⾃服务器的对客户端的质询列表&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;实体首部&quot;&gt;实体首部&lt;/h4&gt;

&lt;p&gt;有很多⾸部可以⽤来描述 HTTP 报⽂的负荷。由于请求和响应报⽂中都可能包含实体部分，所以在这两种类型的报⽂中都可能出现这些⾸部。&lt;/p&gt;

&lt;p&gt;实体的信息性⾸部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Allow&lt;/td&gt;
      &lt;td&gt;列出了可以对此实体执⾏的请求⽅法&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Location&lt;/td&gt;
      &lt;td&gt;告知客户端实体实际上位于何处；⽤于将接收端定向到资源的（可能是新的）位置（URL）上去&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;内容首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;内容⾸部提供了与实体内容有关的特定信息，说明了其类型、尺⼨以及处理它所需的其他有⽤信息。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Base&lt;/td&gt;
      &lt;td&gt;解析主体中的相对URL时使⽤的基础URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Encoding&lt;/td&gt;
      &lt;td&gt;对主体执⾏的任意编码⽅式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Language&lt;/td&gt;
      &lt;td&gt;理解主体时最适宜使⽤的⾃然语⾔&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Length&lt;/td&gt;
      &lt;td&gt;主体的长度或尺⼨&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Location&lt;/td&gt;
      &lt;td&gt;资源实际所处的位置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-MD5&lt;/td&gt;
      &lt;td&gt;主体的MD5校验和&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Range&lt;/td&gt;
      &lt;td&gt;在整个资源中此实体表⽰的字节范围&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Type&lt;/td&gt;
      &lt;td&gt;这个主体的对象类型&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;实体缓存首部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通⽤的缓存⾸部说明了如何或什么时候进⾏缓存。实体的缓存⾸部提供了与被缓存实体有关的信息。&lt;/p&gt;

&lt;p&gt;常用实体缓存⾸部如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⾸部&lt;/td&gt;
      &lt;td&gt;描　　述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ETag&lt;/td&gt;
      &lt;td&gt;与此实体相关的实体标记17&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Expires&lt;/td&gt;
      &lt;td&gt;实体不再有效，要从原始的源端再次获取此实体的⽇期和时间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Last-Modified&lt;/td&gt;
      &lt;td&gt;这个实体最后⼀次被修改的⽇期和时间&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
            <pubDate>Sun, 29 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>HTTP - 连接管理</title>
            <link>/2018/04/29/http-connect.html</link>
            <guid isPermaLink="true">/2018/04/29/http-connect.html</guid>
            <description>&lt;h3 id=&quot;tcp连接&quot;&gt;TCP连接&lt;/h3&gt;

&lt;p&gt;世界上⼏乎所有的 HTTP 通信都是由 TCP/IP 承载的，TCP/IP 是全球计算机及⽹络设备都在使⽤的⼀种常⽤的分组交换⽹络分层协议集。客户端应⽤程序可以打开⼀条 TCP/IP 连接，连接到可能运⾏在世界任何地⽅的服务器应⽤程序。⼀旦连接建⽴起来了，在客户端和服务器的计算机之间交换的报⽂就永远不会丢失、受损或失序。&lt;/p&gt;

&lt;p&gt;完整的连接执行流程如下图所示:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;tcp是分段由ip分组传送&quot;&gt;TCP是分段、由IP分组传送&lt;/h4&gt;

&lt;p&gt;TCP 的数据是通过名为 IP 分组（或 IP 数据报）的⼩数据块来发送的。这样的话，如图 a 所⽰，HTTP 就是“HTTP over TCP over IP”这个“协议栈”中的最顶层了。其安全版本 HTTPS 就是在 HTTP 和 TCP 之间插⼊了⼀个（称为 TLS 或 SSL 的）密码加密层（图 b）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/2.png&quot; alt=&quot;2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;HTTP 要传送⼀条报⽂时，会以流的形式将报⽂数据的内容通过⼀条打开的 TCP 连接按序传输。TCP 收到数据流之后，会将数据流砍成被称作段的⼩数据块，并将段封装在 IP 分组中，通过因特⽹进⾏传输（如下图）。所有这些⼯作都是由 TCP/IP 软件来处理的，HTTP 程序员什么都看不到。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/3.png&quot; alt=&quot;3.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;保持tcp连接的连续不间断性&quot;&gt;保持TCP连接的连续不间断性&lt;/h4&gt;

&lt;p&gt;TCP连接是通过 4 个值来识别的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;lt; 源IP 地址、源端⼝号、⽬的IP 地址、⽬的端⼝号&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这 4 个值⼀起唯⼀地定义了⼀条连接。两条不同的 TCP 连接不能拥有 4 个完全相同的地址组件值（但不同连接的部分组件可以拥有相同的值）。&lt;/p&gt;

&lt;h4 id=&quot;tcp套接字编程&quot;&gt;TCP套接字编程&lt;/h4&gt;

&lt;p&gt;参考 &lt;a href=&quot;http://127.0.0.1:4000/2017/06/11/php-websocket.html&quot;&gt;php实现webSocket&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;tcp性能&quot;&gt;TCP性能&lt;/h3&gt;

&lt;h4 id=&quot;http事务延迟&quot;&gt;HTTP事务延迟&lt;/h4&gt;

&lt;p&gt;HTTP 事务主要的连接、传输以及处理时延&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/4.png&quot; alt=&quot;4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;主要原因：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;客户端⾸先需要根据 URI 确定 Web 服务器的 IP 地址和端⼜号。如果最近没有对 URI 中的主机名进⾏访问，通过 DNS 解析系统将 URI 中的主机名转换成⼀个 IP 地址可能要花费数⼗秒的时间。(⼤多数 HTTP 客户端都有⼀个⼩的 DNS 缓存，⽤来保存近期所访问站点的 IP 地址。如果已经在本地“缓存”（记录）了 IP 地址，查询就可以⽴即完成。因为⼤多数 Web 浏览器浏览的都是少数常⽤站点，所以通常都可以很快地将主机名解析出来。)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;客户端会向服务器发送⼀条 TCP 连接请求，并等待服务器回送⼀个请求接受应答。每条新的 TCP 连接都会有连接建⽴时延。这个值通常最多只有⼀两秒钟，但如果有数百个 HTTP 事务的话，这个值会快速地叠加上去。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;⼀旦连接建⽴起来了，客户端就会通过新建⽴的 TCP 管道来发送HTTP 请求。数据到达时，Web 服务器会从 TCP 连接中读取请求报⽂，并对请求进⾏处理。因特⽹传输请求报⽂，以及服务器处理请求报⽂都需要时间。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;tcp连接的握时延&quot;&gt;TCP连接的握⼿时延&lt;/h4&gt;

&lt;p&gt;建⽴⼀条新的 TCP 连接时，甚⾄是在发送任意数据之前，TCP 软件之间会交换⼀系列的 IP 分组，对连接的有关参数进⾏沟通（如下图）。如果连接只⽤来传送少量数据，这些交换过程就会严重降低 HTTP 的性能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/5.png&quot; alt=&quot;5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;TCP三次握手如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;请求新的 TCP 连接时，客户端要向服务器发送⼀个⼩的 TCP 分组（通常是 40 ～ 60 个字节）。这个分组中设置了⼀个特殊的 SYN 标记，说明这是⼀个连接请求。（如上图a）。&lt;/li&gt;
  &lt;li&gt;如果服务器接受了连接，就会对⼀些连接参数进⾏计算，并向客户端回送⼀个 TCP 分组，这个分组中的 SYN 和 ACK 标记都被置位，说明连接请求已被接受（如上图b）。&lt;/li&gt;
  &lt;li&gt;最后，客户端向服务器回送⼀条确认信息，通知它连接已成功建⽴（如上图c）。现代的 TCP 栈都允许客户端在这个确认分组中发送数据。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;tcp慢启动&quot;&gt;TCP慢启动&lt;/h4&gt;

&lt;p&gt;TCP 数据传输的性能还取决于 TCP 连接的使⽤期（age）。TCP 连接会随着时间进⾏⾃我“调谐”，起初会限制连接的最⼤速度，如果数据成功传输，会随着时间的推移提⾼传输的速度。这种调谐被称为 TCP 慢启动（slow start），⽤于防⽌因特⽹的突然过载和拥塞。&lt;/p&gt;

&lt;p&gt;TCP 慢启动限制了⼀个 TCP 端点在任意时刻可以传输的分组数。简单来说，每成功接收⼀个分组，发送端就有了发送另外两个分组的权限。如果某个 HTTP 事务有⼤量数据要发送，是不能⼀次将所有分组都发送出去的。必须发送⼀个分组，等待确认；然后可以发送两个分组，每个分组都必须被确认，这样就可以发送四个分组了，以此类推。这种⽅式被称为“打开拥塞窗⼜”。&lt;/p&gt;

&lt;p&gt;由于存在这种拥塞控制特性，所以新连接的传输速度会⽐已经交换过⼀定量数据的、“已调谐”连接慢⼀些。由于已调谐连接要更快⼀些，所以HTTP 中有⼀些可以重⽤现存连接的⼯具。（HTTP持久连接）&lt;/p&gt;

&lt;h4 id=&quot;time_wait累积与端耗尽&quot;&gt;TIME_WAIT累积与端⼜耗尽&lt;/h4&gt;
&lt;p&gt;TIME_WAIT 端⼜耗尽是很严重的性能问题，会影响到性能基准，但在现实中相对较少出现。⼤多数遇到性能基准问题的⼈最终都会碰到这个问题，⽽且性能都会变得出乎意料地差，所以这个问题值得特别关注。&lt;/p&gt;

&lt;p&gt;当某个 TCP 端点关闭 TCP 连接时，会在内存中维护⼀个⼩的控制块，⽤来记录最近所关闭连接的 IP 地址和端⼜号。这类信息只会维持⼀⼩段时间，通常是所估计的最⼤分段使⽤期的两倍（称为 2MSL，通常为 2 分钟）左右，以确保在这段时间内不会创建具有相同地址和端⼜号的新连接。实际上，这个算法可以防⽌在两分钟内创建、关闭并重新创建两个具有相同 IP 地址和端⼜号的连接。&lt;/p&gt;

&lt;p&gt;现在⾼速路由器的使⽤，使得重复分组⼏乎不可能在连接关闭的⼏分钟后，出现在服务器上。有些操作系统会将 2MSL 设置为⼀个较⼩的值，但修改此值时要特别⼩⼼。分组确实会被复制，如果来⾃之前连接的复制分组插⼊了具有相同连接值的新 TCP 流，会破坏 TCP 数据。&lt;/p&gt;

&lt;p&gt;2MSL 的连接关闭延迟通常不是什么问题，但在性能基准环境下就可能会成为⼀个问题。进⾏性能基准测试时，通常只有⼀台或⼏台⽤来产⽣流量的计算机连接到某系统中去，这样就限制了连接到服务器的客户端 IP 地址数。⽽且，服务器通常会在 HTTP 的默认 TCP 端⼜ 80 上进⾏监听。⽤TIME_WAIT 防⽌端⼜号重⽤时，这些情况也限制了可⽤的连接值组合。&lt;/p&gt;

&lt;p&gt;在只有⼀个客户端和⼀台 Web 服务器的异常情况下，构建⼀条 TCP 连接
的 4 个值：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;lt;source-IP-address, source-port, destination-IP-address, destination-port&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其中的 3 个都是固定的——只有源端⼜号可以随意改变：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;lt;client-IP, source-port, server-IP, 80&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;客户端每次连接到服务器上去时，都会获得⼀个新的源端⼜，以实现连接的唯⼀性。但由于可⽤源端⼜的数量有限（⽐如，60 000 个），⽽且在2MSL 秒（⽐如，120 秒）内连接是⽆法重⽤的，连接率就被限制在了 60000/120=500 次 / 秒。如果再不断进⾏优化，并且服务器的连接率不⾼于500 次 / 秒，就可确保不会遇到 TIME_WAIT 端⼜耗尽问题。要修正这个问题，可以增加客户端负载⽣成机器的数量，或者确保客户端和服务器在循环使⽤⼏个虚拟 IP 地址以增加更多的连接组合。&lt;/p&gt;

&lt;p&gt;即使没有遇到端⼜耗尽问题，也要特别⼩⼼有⼤量连接处于打开状态的情况，或为处于等待状态的连接分配了⼤量控制块的情况。在有⼤量打开连接或控制块的情况下，有些操作系统的速度会严重减缓。&lt;/p&gt;

&lt;h3 id=&quot;http连接处理&quot;&gt;HTTP连接处理&lt;/h3&gt;

&lt;h4 id=&quot;串行事务处理延迟&quot;&gt;串行事务处理延迟&lt;/h4&gt;

&lt;p&gt;如果只对连接进⾏简单的管理，TCP 的性能时延可能会叠加起来。⽐如，假设有⼀个包含了 3 个嵌⼊图⽚的 Web 页⾯。浏览器需要发起 4 个 HTTP事务来显⽰此页⾯： 1 个⽤于顶层的 HTML 页⾯，3 个⽤于嵌⼊的图⽚。如果每个事务都需要（串⾏地建⽴）⼀条新的连接，那么连接时延和慢启动时延就会叠加起来（如下图)。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/6.png&quot; alt=&quot;6.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;并行连接&quot;&gt;并行连接&lt;/h4&gt;

&lt;p&gt;HTTP 允许客户端打开多条连接，并⾏地执⾏多个 HTTP事务。在这个例⼦中，并⾏加载了四幅嵌⼊式图⽚，每个事务都有⾃⼰的TCP 连接。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/7.png&quot; alt=&quot;7.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;并行连接时间如下图，⾸先装载的是封闭的 HTML 页⾯，然后并⾏处理其余的 3 个事务，每个事务都有⾃⼰的连接。图⽚的装载是并⾏的，连接的时延也是重叠的。(由于软件开销的存在，每个连接请求之间总是会有⼀些⼩的时延，但连接请求和传输时间基本上
都是重叠起来的。)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/8.png&quot; alt=&quot;8.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但并行不一定更快&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;客户端的⽹络带宽不足，并⾏加载多个对象，每个对象都会去竞争这有限的带宽，每个对象都会以较慢的速度按⽐例加载，这样带来的性能提升就很⼩，甚⾄没什么提升。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;打开⼤量连接会消耗很多内存资源，从⽽引发⾃⾝的性能问题。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;实际上，浏览器确实使⽤了并⾏连接，但它们会将并⾏连接的总数限制为⼀个较⼩的值（通常是 4 个）。服务器可以随意关闭来⾃特定客户端的超量连接。&lt;/p&gt;

&lt;h4 id=&quot;持久连接&quot;&gt;持久连接&lt;/h4&gt;

&lt;p&gt;HTTP/1.1（以及 HTTP/1.0 的各种增强版本）允许 HTTP 设备在事务处理结束之后将 TCP 连接保持在打开状态，以便为未来的 HTTP 请求重⽤现存的连接。在事务处理结束之后仍然保持在打开状态的 TCP 连接被称为持久连接。⾮持久连接会在每个事务结束之后关闭。持久连接会在不同事务之间保持打开状态，直到客户端或服务器决定将其关闭为⽌。&lt;/p&gt;

&lt;p&gt;重⽤已对⽬标服务器打开的空闲持久连接，就可以避开缓慢的连接建⽴阶段。⽽且，已经打开的连接还可以避免慢启动的拥塞适应阶段，以便更快速地进⾏数据的传输。&lt;/p&gt;

&lt;p&gt;持久连接与并⾏连接配合使⽤可能是最⾼效的⽅式。现在，很多 Web 应⽤程序都会打开少量的并⾏连接，其中的每⼀个都是持久连接。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP/1.0+ keep-alive连接&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;很多 HTTP/1.0 浏览器和服务器都进⾏了扩展，以⽀持⼀种被称为 keep-alive 连接的早期实验型持久连接。&lt;/p&gt;

&lt;p&gt;串行与并行的性能比较如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/9.png&quot; alt=&quot;9.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP/1.1持久连接&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP/1.1 逐渐停⽌了对 keep-alive 连接的⽀持，⽤⼀种名为持久连接（persistent connection）的改进型设计取代了它。持久连接的⽬的与 keepalive连接的⽬的相同，但⼯作机制更优⼀些。&lt;/p&gt;

&lt;p&gt;与 HTTP/1.0+ 的 keep-alive 连接不同，HTTP/1.1 持久连接在默认情况下是激活的。除⾮特别指明，否则 HTTP/1.1 假定所有连接都是持久的。要在事务处理结束之后将连接关闭，HTTP/1.1 应⽤程序必须向报⽂中显式地添加⼀个 Connection: close ⾸部。这是与以前的 HTTP 协议版本很重要的区别，在以前的版本中，keep-alive 连接要么是可选的，要么根本就不⽀持。&lt;/p&gt;

&lt;p&gt;HTTP/1.1 客户端假定在收到响应后，除⾮响应中包含了 Connection:close ⾸部，不然 HTTP/1.1 连接就仍维持在打开状态。但是，客户端和服务器仍然可以随时关闭空闲的连接。不发送 Connection: close 并不意味着服务器承诺永远将连接保持在打开状态。&lt;/p&gt;

&lt;p&gt;持久连接的限制和规则&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;发送了 Connection: close 请求⾸部之后，客户端就⽆法在那条连接上发送更多的请求了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果客户端不想在连接上发送其他请求了，就应该在最后⼀条请求中发送⼀个 Connection: close 请求⾸部。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;只有当连接上所有的报⽂都有正确的、⾃定义报⽂长度时——也就是说，实体主体部分的长度都和相应的 Content-Length ⼀致，或者是⽤分块传输编码⽅式编码的——连接才能持久保持。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP/1.1 的代理必须能够分别管理与客户端和服务器的持久连接——每个持久连接都只适⽤于⼀跳传输。（由于较⽼的代理会转发 Connection ⾸部，所以）HTTP/1.1 的代理服务器不应该与 HTTP/1.0 客户端建⽴持久连接，除⾮它们了解客户端的处理能⼒。实际上，这⼀点是很难做到的，很多⼚商都违背了这⼀原则。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尽管服务器不应该试图在传输报⽂的过程中关闭连接，⽽且在关闭连接之前⾄少应该响应⼀条请求，但不管 Connection ⾸部取了什么值，HTTP/1.1 设备都可以在任意时刻关闭连接。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP/1.1 应⽤程序必须能够从异步的关闭中恢复出来。只要不存在可能会累积起来的副作⽤，客户端都应该重试这条请求。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;除⾮重复发起请求会产⽣副作⽤，否则如果在客户端收到整条响应之前连接关闭了，客户端就必须要重新发起请求。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;⼀个⽤户客户端对任何服务器或代理最多只能维护两条持久连接，以防服务器过载。代理可能需要更多到服务器的连接来⽀持并发⽤户的通信，所以，如果有 N 个⽤户试图访问服务器的话，代理最多要维持2&lt;em&gt;N&lt;/em&gt; 条到任意服务器或⽗代理的连接。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;管道化连接&quot;&gt;管道化连接&lt;/h3&gt;

&lt;p&gt;HTTP/1.1 允许在持久连接上可选地使⽤请求管道。这是相对于 keep-alive连接的又⼀性能优化。在响应到达之前，可以将多条请求放⼊队列。当第⼀条请求通过⽹络流向地球另⼀端的服务器时，第⼆条和第三条请求也可以开始发送了。在⾼时延⽹络条件下，这样做可以降低⽹络的环回时间，提⾼性能。&lt;/p&gt;

&lt;p&gt;与串行、持久对比如下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/10.png&quot; alt=&quot;10.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;限制：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如果 HTTP 客户端⽆法确认连接是持久的，就不应该使⽤管道。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;必须按照与请求相同的顺序回送 HTTP 响应。HTTP 报⽂中没有序列号标签，因此如果收到的响应失序了，就没办法将其与请求匹配起来了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP 客户端必须做好连接会在任意时刻关闭的准备，还要准备好重发所有未完成的管道化请求。如果客户端打开了⼀条持久连接，并⽴即发出了 10 条请求，服务器可能在只处理了，⽐⽅说，5 条请求之后关闭连接。剩下的 5 条请求会失败，客户端必须能够应对这些过早关闭连接的情况，重新发出这些请求。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP 客户端不应该⽤管道化的⽅式发送会产⽣副作⽤的请求（⽐如POST）。总之，出错的时候，管道化⽅式会阻碍客户端了解服务器执⾏的是⼀系列管道化请求中的哪⼀些。由于⽆法安全地重试 POST 这样的⾮幂等请求，所以出错时，就存在某些⽅法永远不会被执⾏的风险。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;关闭连接&quot;&gt;关闭连接&lt;/h3&gt;

&lt;p&gt;TCP 连接是双向的。TCP 连接的每⼀端都有⼀个输⼊队列和⼀个输出队列，⽤于数据的读或写。放⼊⼀端输出队列中的数据最终会出现在另⼀端的输⼊队列中。如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/11.png&quot; alt=&quot;11.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;完全关闭与半关闭&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;应⽤程序可以关闭 TCP 输⼊和输出信道中的任意⼀个，或者将两者都关闭了。套接字调⽤ close() 会将 TCP 连接的输⼊和输出信道都关闭了。这被称作“完全关闭”，如图 4-20a 所⽰。还可以⽤套接字调⽤shutdown() 单独关闭输⼊或输出信道。这被称为“半关闭”，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/12.png&quot; alt=&quot;12.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TCP关闭及重置错误&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简单的 HTTP 应⽤程序可以只使⽤完全关闭。但当应⽤程序开始与很多其他类型的 HTTP 客户端、服务器和代理进⾏对话且开始使⽤管道化持久连接时，使⽤半关闭来防⽌对等实体收到⾮预期的写⼊错误就变得很重要了。&lt;/p&gt;

&lt;p&gt;总之，关闭连接的输出信道总是很安全的。连接另⼀端的对等实体会在从其缓冲区中读出所有数据之后收到⼀条通知，说明流结束了，这样它就知道你将连接关闭了。&lt;/p&gt;

&lt;p&gt;关闭连接的输⼊信道⽐较危险，除⾮你知道另⼀端不打算再发送其他数据了。如果另⼀端向你已关闭的输⼊信道发送数据，操作系统就会向另⼀端的机器回送⼀条 TCP“连接被对端重置”的报⽂，如下图所⽰。⼤部分操作系统都会将这种情况作为很严重的错误来处理，删除对端还未读取的所有缓存数据。对管道化连接来说，这是⾮常糟糕的事情。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-29-http-connect/13.png&quot; alt=&quot;13.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;正常关闭&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP 规范建议，当客户端或服务器突然要关闭⼀条连接时，应该“正常地关闭传输连接”，但它并没有说明应该如何去做。&lt;/p&gt;

&lt;p&gt;总之，实现正常关闭的应⽤程序⾸先应该关闭它们的输出信道，然后等待连接另⼀端的对等实体关闭它的输出信道。当两端都告诉对⽅它们不会再发送任何数据（⽐如关闭输出信道）之后，连接就会被完全关闭，⽽不会有重置的危险。&lt;/p&gt;

&lt;p&gt;但不幸的是，⽆法确保对等实体会实现半关闭，或对其进⾏检查。因此，想要正常关闭连接的应⽤程序应该先半关闭其输出信道，然后周期性地检查其输⼊信道的状态（查找数据，或流的末尾）。如果在⼀定的时间区间内对端没有关闭输⼊信道，应⽤程序可以强制关闭连接，以节省资源。&lt;/p&gt;
</description>
            <pubDate>Sun, 29 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>HTTP - 报文 - 状态码</title>
            <link>/2018/04/27/http-message-status.html</link>
            <guid isPermaLink="true">/2018/04/27/http-message-status.html</guid>
            <description>&lt;p&gt;本文对HTTP报文中常见的状态码做下说明。所有状态码参见&lt;a href=&quot;https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81&quot;&gt;HTTP状态码&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;100199-信息性状态码&quot;&gt;100~199 信息性状态码&lt;/h4&gt;

&lt;p&gt;HTTP/1.1 向协议中引⼊了信息性状态码。这些状态码相对较新，关于其复杂性和感知价值存在⼀些争议。&lt;/p&gt;

&lt;p&gt;已定义的信息性状态码如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;状态码&lt;/td&gt;
      &lt;td&gt;原因短语&lt;/td&gt;
      &lt;td&gt;含义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;Continue&lt;/td&gt;
      &lt;td&gt;说明收到了请求的初始部分，请客户端继续。发送了这个状态码之后，服务器在收到请求之后必须进⾏响应。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;Switching Protocols&lt;/td&gt;
      &lt;td&gt;说明服务器正在根据客户端的指定，将协议切换成Update⾸部所列的协议。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;由于目前应用场景有限，这里不做过多说明。&lt;/p&gt;

&lt;h4 id=&quot;200299-成功状态码&quot;&gt;200~299 成功状态码&lt;/h4&gt;

&lt;p&gt;客户端发起请求时，这些请求通常都是成功的。服务器有⼀组⽤来表⽰成功的状态码，分别对应于不同类型的请求。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;状态码&lt;/td&gt;
      &lt;td&gt;原因短语&lt;/td&gt;
      &lt;td&gt;含义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;200&lt;/td&gt;
      &lt;td&gt;OK&lt;/td&gt;
      &lt;td&gt;请求没问题，实体的主体部分包含了所请求的资源&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;201&lt;/td&gt;
      &lt;td&gt;Created&lt;/td&gt;
      &lt;td&gt;⽤于创建服务器对象的请求（⽐如，PUT）。响应的实体主体部分中应该包含各种引⽤了已创建的资源的URL，Location⾸部包含的则是最具体的引⽤。&lt;br /&gt;服务器必须在发送这个状态码之前创建好对象&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;202&lt;/td&gt;
      &lt;td&gt;Accepted&lt;/td&gt;
      &lt;td&gt;请求已被接受，但服务器还未对其执⾏任何动作。不能保证服器会完成这个请求；这只是意味着接受请求时，它看起来是有的。&lt;br /&gt;服务器应该在实体的主体部分包含对请求状态的描述，或许还应该有对请求完成时间的估计（或者包含⼀个指针，指向可以获取此信息的位置）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;203&lt;/td&gt;
      &lt;td&gt;Non-Authoritative Information&lt;/td&gt;
      &lt;td&gt;实体⾸部包含的信息不是来⾃于源端服务器，⽽是来⾃资源的⼀份副本。如果中间节点上有⼀份资源副本，但⽆法或者没有对它所发送的与资源有关的元信息（⾸部）进⾏验证，就会出现这种情况。&lt;br /&gt;这种响应码并不是⾮⽤不可的；如果实体⾸部来⾃源端服务器，响应为200状态的应⽤程序就可以将其作为⼀种可选项使⽤&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;204&lt;/td&gt;
      &lt;td&gt;No Content&lt;/td&gt;
      &lt;td&gt;响应报⽂中包含若⼲⾸部和⼀个状态⾏，但没有实体的主体部分。主要⽤于在浏览器不转为显⽰新⽂档的情况下，对其进⾏更新（⽐如刷新⼀个表单页⾯）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;205&lt;/td&gt;
      &lt;td&gt;Reset Content&lt;/td&gt;
      &lt;td&gt;另⼀个主要⽤于浏览器的代码。负责告知浏览器清除当前页⾯中的所有HTML 表单元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;206&lt;/td&gt;
      &lt;td&gt;Partial Content&lt;/td&gt;
      &lt;td&gt;成功执⾏了⼀个部分或Range（范围）请求。稍后我们会看到，客户端可以通过⼀些特殊的⾸部来获取部分或某个范围内的⽂档——这个状态码就说明范围请求成功了。&lt;br /&gt;206响应中必须包含Content-Range、Date以及ETag或Content-Location⾸部。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;300399-重定向状态码&quot;&gt;300~399 重定向状态码&lt;/h4&gt;

&lt;p&gt;重定向状态码要么告知客户端使⽤替代位置来访问他们所感兴趣的资源，要么就提供⼀个替代的响应⽽不是资源的内容。如果资源已被移动，可发送⼀个重定向状态码和⼀个可选的 Location ⾸部来告知客户端资源已被移⾛，以及现在可以在哪⾥找到它，这样，浏览器就可以在不打扰使⽤者的情况下，透明地转⼊新的位置了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-status/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以通过某些重定向状态码对资源的应⽤程序本地副本与源端服务器上资源进⾏验证。⽐如，HTTP 应⽤程序可以查看其资源的本地副本是否仍然是最新的，或者在源端服务器上资源是否被修改过。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-status/2.png&quot; alt=&quot;2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总之，在对那些包含了重定向状态码的⾮ HEAD 请求进⾏响应时，最好要包含⼀个实体，并在实体中包含描述信息和指向（多个）重定向 URL 的链接。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;状态码&lt;/td&gt;
      &lt;td&gt;原因短语&lt;/td&gt;
      &lt;td&gt;含义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;300&lt;/td&gt;
      &lt;td&gt;Multiple Choices&lt;/td&gt;
      &lt;td&gt;客户端请求⼀个实际指向多个资源的URL时会返回这个状态码，⽐如服务器上有某个HTML⽂档的英语和法语版本。返回这个代码时会带有⼀个选项列表；这样⽤户就可以选择他希望使⽤的那⼀项了。有多个版本可⽤时，客户端需要沟通解决，服务器可以在Location⾸部包含⾸选URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;Moved Permanently&lt;/td&gt;
      &lt;td&gt;在请求的URL已被移除时使⽤。响应的Location⾸部中应该包含资源现在所处的URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;302&lt;/td&gt;
      &lt;td&gt;Found&lt;/td&gt;
      &lt;td&gt;与301状态码类似；但是，客户端应该使⽤Location⾸部给出的URL来临时定位资源。将来的请求仍应使⽤⽼的URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;303&lt;/td&gt;
      &lt;td&gt;See Other&lt;/td&gt;
      &lt;td&gt;告知客户端应该⽤另⼀个URL来获取资源。新的URL位于响应报⽂的 Location ⾸部。其主要⽬的是允许POST请求的响应将客户端定向到某个资源上去&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;304&lt;/td&gt;
      &lt;td&gt;Not Modified&lt;/td&gt;
      &lt;td&gt;客户端可以通过所包含的请求⾸部，使其请求变成有条件的。如果客户端发起了⼀个条件GET请求，⽽最近资源未被修改的话， 就可以⽤这个状态码来说明资源未被修改。带有这个状态码的响应不应该包含实体的主体部分&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;305&lt;/td&gt;
      &lt;td&gt;Use Proxy&lt;/td&gt;
      &lt;td&gt;⽤来说明必须通过⼀个代理来访问资源；代理的位置由Location⾸部给出。很重要的⼀点是，客户端是相对某个特定资源来解析这条响应的，不能假定所有请求，甚⾄所有对持有所请求资源的服务器的请求都通过这个代理进⾏。如果客户端错误地让代理介⼊了某条请求，可能会引发破坏性的⾏为，⽽且会造成安全漏洞&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;306&lt;/td&gt;
      &lt;td&gt;（未使⽤）&lt;/td&gt;
      &lt;td&gt;当前未使⽤&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;307&lt;/td&gt;
      &lt;td&gt;Temporary Redirect&lt;/td&gt;
      &lt;td&gt;与301状态码类似；但客户端应该使⽤Location⾸部给出的URL来临时定位资源。将来的请求应该使⽤⽼的URL&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;302、303、307区别&lt;/p&gt;

&lt;p&gt;当 HTTP/1.0 客户端发起⼀个 POST 请求，并在响应中收到 302 重定向状态码时，它会接受 Location ⾸部的重定向 URL，并向那个 URL 发起⼀个
GET 请求（⽽不会像原始请求中那样发起 POST 请求）。  &lt;br /&gt;
HTTP/1.0 服务器希望 HTTP/1.0 客户端这么做——如果 HTTP/1.0 服务器收到来⾃ HTTP/1.0 客户端的 POST 请求之后发送了 302 状态码，服务器就期望客户端能够接受重定向 URL，并向重定向的 URL 发送⼀个 GET 请求。  &lt;br /&gt;
问题出在 HTTP/1.1。HTTP/1.1 规范使⽤ 303 状态码来实现同样的⾏为（服务器发送 303 状态码来重定向客户端的 POST 请求，在它后⾯跟上⼀
个 GET 请求）。  &lt;br /&gt;
为了避开这个问题，HTTP/1.1 规范指出，对于 HTTP/1.1 客户端，⽤ 307状态码取代 302 状态码来进⾏临时重定向。这样服务器就可以将 302 状态
码保留起来，为 HTTP/1.0 客户端使⽤了。&lt;/p&gt;

&lt;h4 id=&quot;400499-客户端错误状态码&quot;&gt;400～499 客户端错误状态码&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;状态码&lt;/td&gt;
      &lt;td&gt;原因短语&lt;/td&gt;
      &lt;td&gt;含义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;400&lt;/td&gt;
      &lt;td&gt;Bad Request&lt;/td&gt;
      &lt;td&gt;⽤于告知客户端它发送了⼀个错误的请求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;401&lt;/td&gt;
      &lt;td&gt;Unauthorized&lt;/td&gt;
      &lt;td&gt;与适当的⾸部⼀同返回，在这些⾸部中请求客户端在获取对资源的访问权之前，对⾃⼰进⾏认证。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;402&lt;/td&gt;
      &lt;td&gt;Payment Required&lt;/td&gt;
      &lt;td&gt;现在这个状态码还未使⽤，但已经被保留，以作未来之⽤&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;403&lt;/td&gt;
      &lt;td&gt;Forbidden&lt;/td&gt;
      &lt;td&gt;⽤于说明请求被服务器拒绝了。如果服务器想说明为什么拒绝请求，可以包含实体的主体部分来对原因进⾏描述。但这个状态码通常是在服务器不想说明拒绝原因的时候使⽤的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;404&lt;/td&gt;
      &lt;td&gt;Not Found&lt;/td&gt;
      &lt;td&gt;⽤于说明服务器⽆法找到所请求的URL。通常会包含⼀个实体，以便客户端应⽤程序显⽰给⽤户看&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;405&lt;/td&gt;
      &lt;td&gt;Method Not Allowed&lt;/td&gt;
      &lt;td&gt;发起的请求中带有所请求的URL不⽀持的⽅法时，使⽤此状态码。应该在响应中包含Allow⾸部，以告知客户端对所请求的资源可以使⽤哪些⽅法。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;406&lt;/td&gt;
      &lt;td&gt;Not Acceptable&lt;/td&gt;
      &lt;td&gt;客户端可以指定参数来说明它们愿意接收什么类型的实体。服务器没有与客户端可接受的URL相匹配的资源时，使⽤此代码。通常，服务器会包含⼀些⾸部，以便客户端弄清楚为什么请求⽆法满⾜。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;407&lt;/td&gt;
      &lt;td&gt;Proxy Authentication Required&lt;/td&gt;
      &lt;td&gt;与401状态码类似，但⽤于要求对资源进⾏认证的代理服务器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;408&lt;/td&gt;
      &lt;td&gt;Request Timeout&lt;/td&gt;
      &lt;td&gt;如果客户端完成请求所花的时间太长，服务器可以回送此状态码，并关闭连接。超时时长随服务器的不同有所不同，但通常对所有的合法请求来说，都是够长的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;409&lt;/td&gt;
      &lt;td&gt;Conflict&lt;/td&gt;
      &lt;td&gt;⽤于说明请求可能在资源上引发的⼀些冲突。服务器担⼼请求会引发冲突时，可以发送此状态码。响应中应该包含描述冲突的主体&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;Gone&lt;/td&gt;
      &lt;td&gt;与404类似，只是服务器曾经拥有过此资源。主要⽤于Web站点的维护，这样服务器的管理者就可以在资源被移除的情况下通知客户端了&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;411&lt;/td&gt;
      &lt;td&gt;Length Required&lt;/td&gt;
      &lt;td&gt;服务器要求在请求报⽂中包含Content-Length⾸部时使⽤。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;412&lt;/td&gt;
      &lt;td&gt;Precondition Failed&lt;/td&gt;
      &lt;td&gt;客户端发起了条件请求，且其中⼀个条件失败了的时候使⽤。客户端包含了Expect⾸部时发起的就是条件请求。更多有关Expect⾸部的内容请参见附录C中Expect部分&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;413&lt;/td&gt;
      &lt;td&gt;Request Entity Too Large&lt;/td&gt;
      &lt;td&gt;客户端发送的实体主体部分⽐服务器能够或者希望处理的要⼤时，使⽤此状态码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;414&lt;/td&gt;
      &lt;td&gt;Request URI Too Long&lt;/td&gt;
      &lt;td&gt;客户端所发请求中的请求URL⽐服务器能够或者希望处理的要长时，使⽤此状态码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;415&lt;/td&gt;
      &lt;td&gt;Unsupported Media Type&lt;/td&gt;
      &lt;td&gt;服务器⽆法理解或⽆法⽀持客户端所发实体的内容类型时，使⽤此状态码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;416&lt;/td&gt;
      &lt;td&gt;Requested Range Not Satisfiable&lt;/td&gt;
      &lt;td&gt;请求报⽂所请求的是指定资源的某个范围，⽽此范围⽆效或⽆法满⾜时，使⽤此状态码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;417&lt;/td&gt;
      &lt;td&gt;Expectation Failed&lt;/td&gt;
      &lt;td&gt;请求的Expect请求⾸部包含了⼀个期望，但服务器⽆法满⾜此期望时，使⽤此状态码。如果代理或其他中间应⽤程序有确切证据说明源端服务器会为某请求产⽣⼀个失败的期望，就可以发送这个响应状态码&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;500599-服务器错误状态码&quot;&gt;500～599 服务器错误状态码&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;状态码&lt;/td&gt;
      &lt;td&gt;原因短语&lt;/td&gt;
      &lt;td&gt;含义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;500&lt;/td&gt;
      &lt;td&gt;Internal Server Error&lt;/td&gt;
      &lt;td&gt;服务器遇到⼀个妨碍它为请求提供服务的错误时，使⽤此状态码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;501&lt;/td&gt;
      &lt;td&gt;Not Implemented&lt;/td&gt;
      &lt;td&gt;客户端发起的请求超出服务器的能⼒范围（⽐如，使⽤了服务器不⽀持的请求⽅法）时，使⽤此状态码作为代理或⽹关使⽤的服务器从请求响应链的下⼀条链路上&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;502&lt;/td&gt;
      &lt;td&gt;Bad Gateway&lt;/td&gt;
      &lt;td&gt;收到了⼀条伪响应（⽐如，它⽆法连接到其⽗⽹关）时，使⽤此状态码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;503&lt;/td&gt;
      &lt;td&gt;Service Unavailable&lt;/td&gt;
      &lt;td&gt;⽤来说明服务器现在⽆法为请求提供服务，但将来可以。如果服务器知道什么时候资源会变为可⽤的，可以在响应中包含⼀个Retry-After⾸部。更多有关Retry-After⾸部的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;504&lt;/td&gt;
      &lt;td&gt;Gateway Timeout&lt;/td&gt;
      &lt;td&gt;与状态码408类似，只是这⾥的响应来⾃⼀个⽹关或代理，它们在等待另⼀服务器对其请求进⾏响应时超时了&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;505&lt;/td&gt;
      &lt;td&gt;HTTP Version Not Supported&lt;/td&gt;
      &lt;td&gt;服务器收到的请求使⽤了它⽆法或不愿⽀持的协议版本时，使⽤此状态码。有些服务器应⽤程序会选择不⽀持协议&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
            <pubDate>Fri, 27 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>HTTP - 报文 - 方法</title>
            <link>/2018/04/27/http-message-method.html</link>
            <guid isPermaLink="true">/2018/04/27/http-message-method.html</guid>
            <description>&lt;p&gt;本文对HTTP报文中常见的方法做下说明。&lt;/p&gt;

&lt;h4 id=&quot;get&quot;&gt;GET&lt;/h4&gt;

&lt;p&gt;是最常⽤的⽅法。通常⽤于请求服务器发送某个资源。HTTP/1.1 要求服务器实现此⽅法。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-method/get.png&quot; alt=&quot;get.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;head&quot;&gt;HEAD&lt;/h4&gt;

&lt;p&gt;HEAD ⽅法与 GET ⽅法的⾏为很类似，但服务器在响应中只返回⾸部。不会返回实体的主体部分。这就允许客户端在未获取实际资源的情况下，对资源的⾸部进⾏检查。使⽤ HEAD，可以：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在不获取资源的情况下了解资源的情况（⽐如，判断其类型）；&lt;/li&gt;
  &lt;li&gt;通过查看响应中的状态码，看看某个对象是否存在；&lt;/li&gt;
  &lt;li&gt;通过查看⾸部，测试资源是否被修改了。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;服务器开发者必须确保返回的⾸部与GET请求所返回的⾸部完全相同。遵循 HTTP/1.1 规范，就必须实现 HEAD ⽅法。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-method/header.png&quot; alt=&quot;header.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;put&quot;&gt;PUT&lt;/h4&gt;

&lt;p&gt;与 GET 从服务器读取⽂档相反，PUT ⽅法会向服务器写⼊⽂档，是让服务器⽤请求的主体部分来创建⼀个由所请求的 URL 命名的新⽂档。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-method/put.png&quot; alt=&quot;put.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;post&quot;&gt;POST&lt;/h4&gt;

&lt;p&gt;⽤来向服务器输⼊数据的，而PUT ⽤于向服务器上的资源（例如⽂件）中存储数据。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-method/post.png&quot; alt=&quot;post.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;trace&quot;&gt;TRACE&lt;/h4&gt;

&lt;p&gt;请求会在⽬的服务器端发起⼀个“环回”诊断。⾏程最后⼀站的服务器会弹回⼀条 TRACE 响应，并在响应主体中携带它收到的原始请求报⽂。这样客户端就可以查看在所有中间 HTTP 应⽤程序组成的请求 / 响应链上，原始报⽂是否，以及如何被毁坏或修改过。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-method/trace.png&quot; alt=&quot;trace.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;TRACE ⽅法主要⽤于诊断；也就是说，⽤于验证请求是否如愿穿过了请求 / 响应链。它也是⼀种很好的⼯具，可以⽤来查看代理和其他应⽤程序对⽤户请求所产⽣效果。&lt;/p&gt;

&lt;p&gt;尽管 TRACE 可以很⽅便地⽤于诊断，但它确实也有缺点，它假定中间应⽤程序对各种不同类型请求（不同的⽅法——GET、HEAD、POST等）的处理是相同的。很多 HTTP 应⽤程序会根据⽅法的不同做出不同的事情——⽐如，代理可能会将 POST 请求直接发送给服务器，⽽将 GET 请求发送给另⼀个 HTTP 应⽤程序（⽐如 Web 缓存）。TRACE 并不提供区分这些⽅法的机制。通常，中间应⽤程序会⾃⾏决定对 TRACE 请求的处理⽅式。&lt;/p&gt;

&lt;p&gt;TRACE 请求中不能带有实体的主体部分。TRACE 响应的实体主体部分包含了响应服务器收到的请求的精确副本。&lt;/p&gt;

&lt;h4 id=&quot;options&quot;&gt;OPTIONS&lt;/h4&gt;

&lt;p&gt;OPTIONS ⽅法请求 Web 服务器告知其⽀持的各种功能。可以询问服务器通常⽀持哪些⽅法，或者对某些特殊资源⽀持哪些⽅法。这为客户端应⽤程序提供了⼀种⼿段，使其不⽤实际访问那些资源就能判定访问各种资源的最优⽅式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-method/option.png&quot; alt=&quot;option.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;delete&quot;&gt;DELETE&lt;/h4&gt;

&lt;p&gt;所做的事情就是请服务器删除请求 URL 所指定的资源。但是，客户端应⽤程序⽆法保证删除操作⼀定会被执⾏。因为HTTP 规范允许服务器在不通知客户端的情况下撤销请求。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-27-http-message-method/delete.png&quot; alt=&quot;delete.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;扩展方法&quot;&gt;扩展方法&lt;/h4&gt;

&lt;p&gt;由于HTTP设计得易于扩展，所以除了这些⽅法之外，其他服务器可能还会实现⼀些⾃⼰的请求⽅法。这些附加的⽅法是对 HTTP 规范的扩展，因此被称为扩展⽅法。&lt;/p&gt;

&lt;p&gt;常用扩展方法如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⽅法&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LOCK&lt;/td&gt;
      &lt;td&gt;允许⽤户“锁定”资源——⽐如，可以在编辑某个资源的时候将其锁定，以防别⼈同时对其进⾏修改&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MKCOL&lt;/td&gt;
      &lt;td&gt;允许⽤户创建资源&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COPY&lt;/td&gt;
      &lt;td&gt;便于在服务器上复制资源&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MOVE&lt;/td&gt;
      &lt;td&gt;在服务器上移动资源&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
            <pubDate>Fri, 27 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>HTTP - 报文</title>
            <link>/2018/04/23/http-message.html</link>
            <guid isPermaLink="true">/2018/04/23/http-message.html</guid>
            <description>&lt;p&gt;分为两类：&lt;strong&gt;请求报文&lt;/strong&gt;和&lt;strong&gt;响应报文&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;请求报文格式：&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//起始行
&lt;span class=&quot;nt&quot;&gt;&amp;lt;method&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;request-URL&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;
//首部
&lt;span class=&quot;nt&quot;&gt;&amp;lt;headers&amp;gt;&lt;/span&gt;
//实体主体
&lt;span class=&quot;nt&quot;&gt;&amp;lt;entity-body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;响应报文格式：&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//起始行
&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;status&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;reason-phrase&amp;gt;&lt;/span&gt;
//首部
&lt;span class=&quot;nt&quot;&gt;&amp;lt;headers&amp;gt;&lt;/span&gt;
//实体主体
&lt;span class=&quot;nt&quot;&gt;&amp;lt;entity-body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;起始行&quot;&gt;起始行&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;方法（method）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;请求的起始⾏以⽅法作为开始，⽅法⽤来告知服务器要做些什么。&lt;/p&gt;

&lt;p&gt;常用方法如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;⽅法&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
      &lt;td&gt;是否包含主体&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GET&lt;/td&gt;
      &lt;td&gt;从服务器获取⼀份⽂档&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HEAD&lt;/td&gt;
      &lt;td&gt;只从服务器获取⽂档的⾸部&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POST&lt;/td&gt;
      &lt;td&gt;向服务器发送需要处理的数据&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PUT&lt;/td&gt;
      &lt;td&gt;将请求的主体部分存储在服务器上&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TRACE&lt;/td&gt;
      &lt;td&gt;对可能经过代理服务器传送到服务器上去的报⽂进⾏追踪&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OPTIONS&lt;/td&gt;
      &lt;td&gt;决定可以在服务器上执⾏哪些⽅法&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DELETE&lt;/td&gt;
      &lt;td&gt;从服务器上删除⼀份⽂档&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;具体内容请参考 &lt;a href=&quot;/2018/04/27/http-message-method.html&quot;&gt;HTTP - 报文 - 方法&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;状态码（status）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;⽅法是⽤来告诉服务器做什么事情的，状态码则⽤来告诉客户端，发⽣了什么事情。状态码位于响应的起始⾏中。&lt;/p&gt;

&lt;p&gt;状态码分类：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;整体范围&lt;/td&gt;
      &lt;td&gt;已定义范围&lt;/td&gt;
      &lt;td&gt;分类&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;100～199&lt;/td&gt;
      &lt;td&gt;100～101&lt;/td&gt;
      &lt;td&gt;信息提⽰&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;200～299&lt;/td&gt;
      &lt;td&gt;200～206&lt;/td&gt;
      &lt;td&gt;成功&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;300～399&lt;/td&gt;
      &lt;td&gt;300～305&lt;/td&gt;
      &lt;td&gt;重定向&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;400～499&lt;/td&gt;
      &lt;td&gt;400～415&lt;/td&gt;
      &lt;td&gt;客户端错误&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;500～599&lt;/td&gt;
      &lt;td&gt;500～505&lt;/td&gt;
      &lt;td&gt;服务器错误&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;具体内容请参考 &lt;a href=&quot;/2018/04/27/http-message-status.html&quot;&gt;HTTP - 报文 - 状态码&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;版本号（version）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;版本号会以 HTTP/x.y 的形式出现在请求和响应报⽂的起始⾏中。为HTTP 应⽤程序提供了⼀种将⾃⼰所遵循的协议版本告知对⽅的⽅式。&lt;/p&gt;

&lt;p&gt;注意，版本号不会被当作⼩数来处理。版本中的每个数字（⽐如HTTP/1.0 中的 1 和 0）都会被当作⼀个单独的数字来处理。因此，在⽐较 HTTP 版本时，每个数字都必须单独进⾏⽐较，以便确定哪个版
本更⾼。⽐如，HTTP/2.22 就⽐ HTTP/2.3 的版本要⾼，因为 22 ⽐ 3⼤。&lt;/p&gt;

&lt;h3 id=&quot;首部&quot;&gt;首部&lt;/h3&gt;

&lt;p&gt;HTTP ⾸部字段向请求和响应报⽂中添加了⼀些附加信息。本质上来说，它们只是⼀些名 / 值对的列表。&lt;/p&gt;

&lt;p&gt;首部分类如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;分类&lt;/td&gt;
      &lt;td&gt;说明&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;通用首部&lt;/td&gt;
      &lt;td&gt;既可以出现在请求报⽂中，也可以出现在响应报⽂中。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;请求⾸部&lt;/td&gt;
      &lt;td&gt;提供更多有关请求的信息。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;响应⾸部&lt;/td&gt;
      &lt;td&gt;提供更多有关响应的信息。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;实体⾸部&lt;/td&gt;
      &lt;td&gt;描述主体的长度和内容，或者资源⾃⾝。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;扩展⾸部&lt;/td&gt;
      &lt;td&gt;规范中没有定义的新⾸部。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;每个 HTTP ⾸部都有⼀种简单的语法：名字后⾯跟着冒号（ ：），然后跟上可选的空格，再跟上字段值，最后是⼀个 CRLF。&lt;/p&gt;

&lt;p&gt;具体说明请查看 &lt;a href=&quot;/2018/04/29/http-message-headers.html&quot;&gt;HTTP - 报文 - 首部&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;实体的主体部分&quot;&gt;实体的主体部分&lt;/h3&gt;

&lt;p&gt;HTTP 报⽂的第三部分是可选的实体主体部分。实体的主体是 HTTP 报⽂的负荷。就是 HTTP 要传输的内容。&lt;/p&gt;

&lt;p&gt;HTTP 报⽂可以承载很多类型的数字数据：图⽚、视频、HTML ⽂档、软件应⽤程序、信⽤卡事务、电⼦邮件等。&lt;/p&gt;
</description>
            <pubDate>Mon, 23 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>以太坊发行代币(二)</title>
            <link>/2018/04/10/ethereum-crypto-currency-2.html</link>
            <guid isPermaLink="true">/2018/04/10/ethereum-crypto-currency-2.html</guid>
            <description>&lt;p&gt;在上一节中，已经讲了如何去发行一个简单的代币，如果没看过的同学，请先去阅读&lt;a href=&quot;/2018/04/07/ethereum-crypto-currency-1.html&quot;&gt;以太坊发行代币(一)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这一节，我们将对之前的代币做一次升级。&lt;/p&gt;

&lt;p&gt;如果你想把你的代币卖给一个交易所，只是发送到一个其他合约的以太坊地址是不够的，因为它不会意识到这个新代币或者谁发送给它的，因为这个合约没有发布一些事件或者接口。所以对于合约，你应该首先批准它们可以从你账号转出代币，然后让它们知道它们应该怎么去做。&lt;/p&gt;

&lt;p&gt;由于里面的一些函数是必须去做一些交易操作，这里很有必要把它们弄成集成为一个内部函数（只有这个合约本身能够调用）。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cm&quot;&gt;/* Internal transfer, can only be called by this contract */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// Prevent transfer to 0x0 address. Use burn() instead&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// Check if the sender has enough&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Check for overflows&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// Check if sender is frozen&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// Check if recipient is frozen&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// Subtract from the sender&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                           &lt;span class=&quot;c1&quot;&gt;// Add the same to the recipient&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在你的其他涉及到交易操作的函数可以做它们自己的校验，然后用正确的参数去调用&lt;strong&gt;transfer&lt;/strong&gt;这个函数。  &lt;br /&gt;
注意这个函数没有做任何的权限校验就可以去转移代币，这是因为这个函数是内部函数，只有这个合约本身能够调用。  &lt;br /&gt;
所以如果你添加了任何调用到它的函数，需要在调用前确保调用者有权限去转移代币。&lt;/p&gt;

&lt;h3 id=&quot;中心管理&quot;&gt;中心管理&lt;/h3&gt;

&lt;p&gt;所有的dapp默认是去中心化的，这不意味着他们不能拥有某些中心管理，比如你想有能力能够造更多的代币，又或者你想禁止某人使用你的代币。你可以把任何你想加的功能加到你的合约里面去，但你只能在最开始的时候加，这样那些代币拥有者可以知道你的游戏规则，然后决定要不要拥有你的代币。&lt;/p&gt;

&lt;p&gt;这里我们将学习到一个合约特别有用的属性：&lt;strong&gt;继承&lt;/strong&gt;  &lt;br /&gt;
继承允许一个合约获得父合约的熟属性，而不需要重新定义它们。这样可以使我们的代码更加的简洁和重复使用。  &lt;br /&gt;
添加下面这段代码到你的代码第一行，在&lt;strong&gt;contract MyToken {&lt;/strong&gt;前添加&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owned&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owned&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;modifier&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transferOwnership&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里创建了一个非常基本的合约，只是定义了关于这个合约的一些公共函数。下一步只要添加&lt;em&gt;is owner&lt;/em&gt;到你的合约。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owned&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* the rest of the contract as usual */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样所有&lt;strong&gt;MyToken&lt;/strong&gt;的函数可以使用&lt;em&gt;owner&lt;/em&gt;这个变量和&lt;em&gt;modifer onlyOnwer&lt;/em&gt;。这个合约也可以获得一个可以修改合约拥有者的函数。即使合约一开始设置了合约拥有者，你也可以在构造函数添加这段代码：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;uint8&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decimalUnits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;centralMinter&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;centralMinter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;centralMinter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;中心代币发行&quot;&gt;中心代币发行&lt;/h3&gt;

&lt;p&gt;支持你能够去控制流通代币的数量。  &lt;br /&gt;
一种情况是当你的货币实际上代表了一种区块链资产（像金币券或者政府货币），然后你想要你的虚拟库存能够真实的反应其中一种。又或者你想要控制代币的价格，适当的增加或减少流通数量。&lt;/p&gt;

&lt;p&gt;首先，我们需要增加一个变量来存储总发行量，然后在我们的构造函数去指定它。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在添加一个新函数来允许合约拥有者去创建新的代币。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意到函数名最后加了&lt;strong&gt;onlyOwner&lt;/strong&gt;，意味着这个函数只能被设置为合约拥有者的账号调用，这样你就可以创造更多的代币。&lt;/p&gt;

&lt;h3 id=&quot;冻结资产&quot;&gt;冻结资产&lt;/h3&gt;

&lt;p&gt;根据你的使用场景，你可能需要会遇到一些管理障碍，比如谁可以拥有你的代币，谁不可以。这样的话你需要增加一个参数来允许合约拥有者去冻结或者解冻资产。&lt;/p&gt;

&lt;p&gt;在这个合约的任何地方添加这个变量和函数。不过建议你把映射跟其他映射放到一起，事件跟其他事件放到一起。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FrozenFunds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frozen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freezeAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;FrozenFunds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于这段代码所有账号默认都是解冻的，不过合约拥有者可以通过调用&lt;strong&gt;freezeAccount&lt;/strong&gt;设置它们的一个冻结状态。  &lt;br /&gt;
不幸的是，冻结没有任何的实际效果，因为我们还没有在转移代币的函数中做任何操作。现在修改它：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在任何冻结的账号可以保留他们的代币，但是不是转移这些代币。任何账号默认都是解冻的直到你去冻结它，你也可以通过白名单的方式来管理。  &lt;br /&gt;
只要把&lt;strong&gt;freezeAccount&lt;/strong&gt;重命名为&lt;strong&gt;approvedAccount&lt;/strong&gt;，然后修改最后一行代码为：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;approvedAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;自动买卖&quot;&gt;自动买卖&lt;/h3&gt;

&lt;p&gt;到目前为止，你已经可以信任你的代币并应用到实际场景中。但如果你想通过市场价格自动买卖来通过以太币（或其他代币）赎回。&lt;/p&gt;

&lt;p&gt;首先，需要设置买卖的价格。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setPrices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newSellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newBuyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newSellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;buyPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newBuyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这是一个不经常变动的可接受价格，因为每次价格变动都需要你执行一个交易并且话费一点以太币。如果你需要一个不变的带小数位的架构，建议你参考&lt;a href=&quot;https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs#data-feeds&quot;&gt;standard data feeds&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下一步创建买卖函数：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// calculates the amount&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// checks if it has enough to sell&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// adds the amount to buyer's balance&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;// subtracts amount from seller's balance&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// execute an event reflecting the change&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                                    &lt;span class=&quot;c1&quot;&gt;// ends function and returns&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// checks if the sender has enough to sell&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;// adds the amount to owner's balance&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// subtracts the amount from seller's balance&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// sends ether to the seller: it's important to do this last to prevent recursion attacks&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// executes an event reflecting on the change&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                                   &lt;span class=&quot;c1&quot;&gt;// ends function and returns&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这些操作并不会增加新代币而是改变合约拥有者的余额。&lt;/p&gt;

&lt;p&gt;注意设置的价格不是以太币为单位，而是以wei为单位。一个以太币相当于1000000000000000000wei，所以当在以太坊设置你代币的价格时，需要在后面增加18个0。&lt;/p&gt;

&lt;p&gt;当创建合约时，为了能够回购市场上所有代币，需要支付足够多的以太币。否则你的合约就破产了，你的用户没办法去卖掉他们的代币。&lt;/p&gt;

&lt;p&gt;一个更有趣的合约可以允许一个交易所的任何人都能出价，或者可以从外部直接获取价格。&lt;/p&gt;

&lt;h3 id=&quot;自动充值&quot;&gt;自动充值&lt;/h3&gt;

&lt;p&gt;每次你在以太坊做交易，你都需要支付小费给矿工，让他去计算你合约的结果。这一切可以在将来会被改变，但目前只能支付以太币，因此你所有的代币用户都需要持有以太币。如果用户的以太币数量不足以支付小费会被冻结，知道合约拥有者来支付它。但在某些场景下，你可能不想你的用户来考虑以太坊，区块链或者如何拥有以太币，所以一个有效的方法是如果检测到用户余额不足，你能够自动帮用户充值余额。&lt;/p&gt;

&lt;p&gt;首先，你需要创建一个变量来存储账户的阈值和一个函数来设置他。如果你不知道设置多少合适，可以设置&lt;strong&gt;5 finney（0.005个以太币）&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minBalanceForAccounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setMinBalance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minimumBalanceInFinney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;minBalanceForAccounts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minimumBalanceInFinney&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;finney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后，添加下面代码到&lt;strong&gt;trensfer&lt;/strong&gt;函数，让卖家退还一部分代币来充值以太币：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* Send coins */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minBalanceForAccounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;sell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;minBalanceForAccounts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你也可以把支付小费的操作从卖家转移到买家：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* Send coins */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;minBalanceForAccounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;minBalanceForAccounts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样可以保证所有人都有足够的以太币来支付小费。&lt;/p&gt;

&lt;h3 id=&quot;工作量证明&quot;&gt;工作量证明&lt;/h3&gt;

&lt;p&gt;这里有一些方法通过数学公式来增加你的代币供应。一个最简单的办法就是绑定以太坊的挖矿，意思就是一旦任何人找到以太坊的区块，它也相应获得你的代币回报。你可以通过一些&lt;a href=&quot;https://solidity.readthedocs.io/en/latest/units-and-global-variables.html#block-and-transaction-properties&quot;&gt;特殊接口&lt;/a&gt;来获得找到区块的账号。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;giveBlockReward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;coinbase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也可以增加一个数学公式，让任何人知道如果解答这个公式来获得回报。下面这个例子你必须解答出当前挑战，并正确设置下一个挑战。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentChallenge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Can you figure out the cubic root of this number?&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rewardMathGeniuses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;answerToCurrentReward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;answerToCurrentReward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// If answer is wrong do not continue&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// Reward the player&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;currentChallenge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// Set the next challenge&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当然，计算上面这个结果通过手动是很困难的，但使用计算器就很简单，所以这游戏容易被计算机给破解。也因为最后一名赢家可以选择下一个挑战的难度，他们可以选择他们知道的，所以对其他玩家来说是很不公平的。一个更公平的系统需要设计一个对计算机来说很难的挑战，但也不是完全不可能挑战成功。一个非常好的方案是需要挑战者从很多数字中找到一个低于困难值的hash。&lt;/p&gt;

&lt;p&gt;这个方案是Adam Back在1997年首次提出，称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Hashcash&quot;&gt;Hashcash&lt;/a&gt;,然后中本聪在2008年将它应用于比特币的工作量证明。&lt;/p&gt;

&lt;p&gt;当然你也可以创建自己的工作量证明。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bytes32&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// The coin starts with a challenge&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeOfLastProof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                             &lt;span class=&quot;c1&quot;&gt;// Variable to keep track of when rewards were given&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;difficulty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// Difficulty starts reasonably low&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proofOfWork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nonce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bytes8&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sha3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nonce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// Generate a random hash based on input&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;difficulty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;// Check if it's under the difficulty&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeSinceLastProof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeOfLastProof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Calculate time since last reward was given&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeSinceLastProof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// Rewards cannot be given too quickly&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeSinceLastProof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// The reward to the winner grows by the minute&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;difficulty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;difficulty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minutes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeSinceLastProof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Adjusts the difficulty&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;timeOfLastProof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                              &lt;span class=&quot;c1&quot;&gt;// Reset the counter&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;currentChallenge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sha3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nonce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blockhash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Save a hash that will be used as the next proof&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;构造函数同样也要修改，增加下面这行代码：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;timeOfLastProof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一旦你运行合约，选择这个工作量证明函数，添加你的幸运数字，然后运行。如果这个确认窗口显示一个红色警告“Data can’t be execute”，需要返回上一步设置另一个数字直到你找到一个满足交易能够执行下去的数字。一旦你找到了这个数字，你将每分钟获得一个代币奖励，分钟数取决于距离上次挑战的时间。然后这个难度将被调整，保证平均每隔10分钟才能被计算出来。&lt;/p&gt;

&lt;h3 id=&quot;完整代码&quot;&gt;完整代码&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owned&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owned&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;modifier&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transferOwnership&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenRecipient&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;receiveApproval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_extraData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TokenERC20&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Public variables of the token&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;uint8&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decimals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 18 decimals is the strongly suggested default, avoid changing it&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// This creates an array with all balances&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allowance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// This generates a public event on the blockchain that will notify clients&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexed&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// This notifies clients about the amount burnt&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Burn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Constrctor function
     *
     * Initializes contract with initial supply tokens to the creator of the contract
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TokenERC20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenSymbol&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Update total supply with the decimal amount&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// Give the creator all initial tokens&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                                   &lt;span class=&quot;c1&quot;&gt;// Set the name for display purposes&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// Set the symbol for display purposes&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Internal transfer, only can be called by this contract
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Prevent transfer to 0x0 address. Use burn() instead&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Check if the sender has enough&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Check for overflows&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Save this for an assertion in the future&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousBalances&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Subtract from the sender&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Add the same to the recipient&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Asserts are used to use static analysis to find bugs in your code. They should never fail&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousBalances&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Transfer tokens
     *
     * Send `_value` tokens to `_to` from your account
     *
     * @param _to The address of the recipient
     * @param _value the amount to send
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Transfer tokens from other address
     *
     * Send `_value` tokens to `_to` in behalf of `_from`
     *
     * @param _from The address of the sender
     * @param _to The address of the recipient
     * @param _value the amount to send
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transferFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allowance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// Check allowance&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;allowance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Set allowance for other address
     *
     * Allows `_spender` to spend no more than `_value` tokens in your behalf
     *
     * @param _spender The address authorized to spend
     * @param _value the max amount they can spend
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;approve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_spender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;allowance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_spender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Set allowance for other address and notify
     *
     * Allows `_spender` to spend no more than `_value` tokens in your behalf, and then ping the contract about it
     *
     * @param _spender The address authorized to spend
     * @param _value the max amount they can spend
     * @param _extraData some extra information to send to the approved contract
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;approveAndCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_spender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_extraData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;tokenRecipient&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spender&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenRecipient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_spender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;approve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_spender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;spender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;receiveApproval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_extraData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Destroy tokens
     *
     * Remove `_value` tokens from the system irreversibly
     *
     * @param _value the amount of money to burn
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;burn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// Check if the sender has enough&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Subtract from the sender&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                      &lt;span class=&quot;c1&quot;&gt;// Updates totalSupply&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Burn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Destroy tokens from other account
     *
     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.
     *
     * @param _from the address of the sender
     * @param _value the amount of money to burn
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;burnFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// Check if the targeted balance is enough&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allowance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// Check allowance&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// Subtract from the targeted balance&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;allowance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// Subtract from the sender's allowance&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                              &lt;span class=&quot;c1&quot;&gt;// Update totalSupply&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Burn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/******************************************/&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*       ADVANCED TOKEN STARTS HERE       */&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/******************************************/&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyAdvancedToken&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;owned&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TokenERC20&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* This generates a public event on the blockchain that will notify clients */&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FrozenFunds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frozen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Initializes contract with initial supply tokens to the creator of the contract */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyAdvancedToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenSymbol&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TokenERC20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Internal transfer, only can be called by this contract */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// Prevent transfer to 0x0 address. Use burn() instead&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// Check if the sender has enough&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Check for overflows&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// Check if sender is frozen&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// Check if recipient is frozen&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// Subtract from the sender&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                           &lt;span class=&quot;c1&quot;&gt;// Add the same to the recipient&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;/// @notice Create `mintedAmount` tokens and send it to `target`&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// @param target Address to receive the tokens&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// @param mintedAmount the amount of tokens it will receive&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;totalSupply&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mintedAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;/// @notice `freeze? Prevent | Allow` `target` from sending &amp;amp; receiving tokens&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// @param target Address to be frozen&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// @param freeze either to freeze it or not&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freezeAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;frozenAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;FrozenFunds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;/// @notice Allow users to buy tokens for `newBuyPrice` eth and sell tokens for `newSellPrice` eth&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// @param newSellPrice Price the users can sell to the contract&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// @param newBuyPrice Price users can buy from the contract&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setPrices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newSellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newBuyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onlyOwner&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newSellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;buyPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newBuyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;/// @notice Buy tokens from contract by sending ether&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payable&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// calculates the amount&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// makes the transfers&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;/// @notice Sell `amount` tokens to contract&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// @param amount amount of tokens to be sold&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// checks if the contract has enough ether to buy&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// makes the transfers&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// sends ether to the seller. It's important to do this last to avoid recursion attacks&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
            <pubDate>Tue, 10 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>以太坊发行代币(一)</title>
            <link>/2018/04/07/ethereum-crypto-currency-1.html</link>
            <guid isPermaLink="true">/2018/04/07/ethereum-crypto-currency-1.html</guid>
            <description>&lt;p&gt;本文使用到的工具geth、Mist，并通过私有链来做测试。
如果你不知道还不了解，请先阅读这篇文章&lt;a href=&quot;/2018/04/01/ether-private-network.html&quot;&gt;《搭建以太坊私有网络》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;先从最基本的开始，打开&lt;strong&gt;Mist&lt;/strong&gt;，进入到 &lt;em&gt;Contract&lt;/em&gt; 标签页，然后点击 &lt;em&gt;Deploy New Contract&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/1.jpg&quot; alt=&quot;1.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在&lt;em&gt;Solidity Contract Source code&lt;/em&gt;输入框，输入以下代码：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* This creates an array with all balances */&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt;是一种关联数组，这里我们把地址和余额关联起来。  &lt;br /&gt;
&lt;strong&gt;address&lt;/strong&gt;是基本的16进制以太坊格式。  &lt;br /&gt;
余额是一个256位的非负数整数。
&lt;strong&gt;public&lt;/strong&gt;意味着这个变量可以被区块链中的任何人开放，这里意味着余额是公开的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/2.jpg&quot; alt=&quot;2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果你这时候马上发布你的合约，它可以工作但是一点用都没有：因为里面为0没有余额，且不能挖矿来获得代币。  &lt;br /&gt;
所以，我们可以先在合约安装时初始化一定的代币数量给创建合约的人。在最后一个大括号前添加以下代码：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也许你已经注意到添加代码的函数名&lt;em&gt;MyToken&lt;/em&gt;与我们的合约名&lt;em&gt;MyToken&lt;/em&gt;是一样的。这点非常重要，类似于我们的构造函数，它只会运行一次，且是在合约上传到网络的时候运行。  &lt;br /&gt;
这个函数设置了&lt;em&gt;msg.sender&lt;/em&gt;（部署了这个合约的地址）的余额21000000个。&lt;/p&gt;

&lt;p&gt;除了直接在代码中设置余额，我们还可以用更好的方法，通过传参来设置。像这样：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改上面的代码后，我们在Mist的右侧选择&lt;em&gt;MyToken&lt;/em&gt;然后就可以看到我们定义的&lt;em&gt;Constructor parameters&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/3.jpg&quot; alt=&quot;3.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现在你已经拥有了一个能初始化余额功能的合约，但不能交易，所有余额只会一直留在同一个账号中，所以我们接下来实现交易功能。  &lt;br /&gt;
在最后一个大括号前添加以下代码：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* Send coins */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Add and subtract new balances */&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这是个非常简单的函数：它有一个接收者&lt;em&gt;_to&lt;/em&gt;和一个数量值&lt;em&gt;_value&lt;/em&gt;，一旦有人执行它，它会减掉他们的代币数量&lt;em&gt;_value&lt;/em&gt;，然后添加这些代币数量到接收者&lt;em&gt;_to&lt;/em&gt;的余额中。  &lt;br /&gt;
这里有一个很明显的问题：由于我们没有对发送数量做限制，一个人可以发送超过他拥有的代币数量。  &lt;br /&gt;
接下来我们将做一个简单的校验，如果发送者没有足够的余额，合约的执行将被终止。也将校验泛滥的情况，如果一个人拥有特别大的余额，将会对他做归零处理。  &lt;br /&gt;
你可以通过&lt;em&gt;return&lt;/em&gt;或者&lt;em&gt;throw&lt;/em&gt;来终止合约执行。&lt;em&gt;throw&lt;/em&gt;将会失去执行合约所支付的gas，而&lt;em&gt;retun&lt;/em&gt;更让人头疼,他对合约所做的任何改动都将保留，而&lt;em&gt;throw&lt;/em&gt;将会回滚所有的合约操作。由于钱包会察觉到合约将抛的异常，对用户做出警告，所以可以有效的防止因&lt;em&gt;throw&lt;/em&gt;所浪费的gas。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Check if sender has balance and for overflows */&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Add and subtract new balances */&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们先直接添加以下变量，在后面用来处理代币注册。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;uint8&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接下来在合约启动时，允许设置这些变量。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* Initializes contract with initial supply tokens to the creator of the contract */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint8&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decimalUnits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;balanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialSupply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// Give the creator all initial tokens&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                                   &lt;span class=&quot;c1&quot;&gt;// Set the name for display purposes&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tokenSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// Set the symbol for display purposes&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;decimals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decimalUnits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                            &lt;span class=&quot;c1&quot;&gt;// Amount of decimals for display purposes&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后我们需要一些&lt;strong&gt;事件&lt;/strong&gt;。它们是一些空函数，可以帮助客户端来发生在合约的活动。  &lt;br /&gt;
在合约的开头声明这个事件：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexed&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后你需要在涉及到交易的函数中添加以下两行代码：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* Notify anyone listening that this transfer took place */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在可以你的代币已经准备好了！&lt;/p&gt;

&lt;h3 id=&quot;部署&quot;&gt;部署&lt;/h3&gt;

&lt;p&gt;现在把上面的代码复制到&lt;em&gt;SOLIDITY CONTRACT SOURCE CODE&lt;/em&gt;。如果代码在编译没有报错，你可以在右边看到&lt;em&gt;SELECT CONTRACT TO DEPLOY&lt;/em&gt;的下拉列表。选择&lt;em&gt;MyToken&lt;/em&gt;合约，然后你可以在右边看到所有你需要自定义的参数。但为了这次教程，建议你设置变量为：  &lt;br /&gt;
Initial supply : 10000  &lt;br /&gt;
Token name : 任意你想到的名字  &lt;br /&gt;
Token symbol : %  &lt;br /&gt;
Decimal units : 2&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/4.jpg&quot; alt=&quot;4.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;滚动到页面最下面，你可以看到创建合约所需要的估计费用，然后你选择一个你将要支付的费用。  &lt;br /&gt;
&lt;strong&gt;你额外支付的那部分费用会退还给你&lt;/strong&gt;，所以你可以使用默认设置。  &lt;br /&gt;
点击&lt;em&gt;deploy&lt;/em&gt;，输入你账号密码，点击&lt;em&gt;SEND TRANSACTION&lt;/em&gt;,然后等待几秒让你的交易被记录。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/5.png&quot; alt=&quot;5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;返回首页，你将看到你的交易正在被等待确认。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/6.jpg&quot; alt=&quot;6.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里我们可以利用私有链的优势，通过挖矿来实现确认。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/7.jpg&quot; alt=&quot;7.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一旦确认完成，你就可以在账号主页看到你所创建的代币。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/8.jpg&quot; alt=&quot;8.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果你发送代币给你朋友，它们不会在他们的钱包看到。这是因为钱包只会追踪那些它所知道的代币，你必须手动去添加它们。  &lt;br /&gt;
现在进入到&lt;em&gt;Contract&lt;/em&gt;标签页,你可以看到你新创建的合约链接，点击它会去到它的页面。点击&lt;em&gt;copy address&lt;/em&gt;，然后复制这个地址到一个文本编辑器中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/9.png&quot; alt=&quot;9.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为了添加钱包对代币的追踪，去到合约页，然后点击 &lt;em&gt;Watch Token&lt;/em&gt;。这时将会出现一个弹出框，然后你需要将你上一步复制的合约地址粘贴进去。代币名称，代币符号，和小数位会自动填充进去。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/10.png&quot; alt=&quot;10.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;做完这些操作，钱包会自动显示你拥有的代币，然后你也可以发送给任何人。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-07-ethereum-crypto-currency-1/11.jpg&quot; alt=&quot;11.jpg&quot; /&gt;&lt;/p&gt;
</description>
            <pubDate>Sat, 07 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>加密散列-sha256</title>
            <link>/2018/04/05/sha256.html</link>
            <guid isPermaLink="true">/2018/04/05/sha256.html</guid>
            <description>&lt;p&gt;SHA256是安全散列算法SHA（Secure Hash Algorithm）系列算法之一，其摘要长度为256bits，即32个字节，故称SHA256（1个字节=8位）。&lt;/p&gt;

&lt;h3 id=&quot;算法步骤&quot;&gt;算法步骤&lt;/h3&gt;

&lt;p&gt;原始消息分为N个512bit的消息块。每个消息块分成16个32bit，标记为M(i)0、M(i)1、M(i)2、…、M(i)15然后对这N个消息块依次进行处理。&lt;/p&gt;

&lt;p&gt;1.补位  &lt;br /&gt;
由于必须分成n个512bit块，所以必须进行补位。  &lt;br /&gt;
最后还需要预留64bit记录消息块的长度，所以消息块的长度不能大于2^64。&lt;/p&gt;

&lt;p&gt;补位使其长度 &lt;script type=&quot;math/tex&quot;&gt;l mod 512 = 448&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;先补一个1，然后再补0，直到长度满足对512取模后余数是448。总而言之，补位是至少补一位，最多补512位。以信息“abc”为例显示补位的过程。  &lt;br /&gt;
原始信息：01100001 01100010 01100011  &lt;br /&gt;
补位第一步：0110000101100010 01100011 1  &lt;br /&gt;
首先补一个“1”  &lt;br /&gt;
补位第二步：0110000101100010 01100011 10…..0  &lt;br /&gt;
然后补423个“0”  &lt;br /&gt;
我们可以把最后补位完成后的数据用16进制写成下面的样子  &lt;br /&gt;
61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 00000000&lt;/p&gt;

&lt;p&gt;2.补长度  &lt;br /&gt;
所谓的补长度是将原始数据的长度补到已经进行了补位操作的消息后面。通常用一个64位的数据来表示原始消息的长度。如果消息长度不大于2^64，那么第一个字就是0。在进行了补长度的操作以后，整个消息就变成下面这样了（16进制格式）&lt;/p&gt;

&lt;p&gt;61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000018&lt;/p&gt;

&lt;p&gt;如果原始的消息长度超过了512，我们需要将它补成512的倍数。然后我们把整个消息分成一个一个512位的数据块，分别处理每一个数据块，从而得到消息摘要。&lt;/p&gt;

&lt;p&gt;3.常量定义&lt;/p&gt;

&lt;p&gt;这些常量是对自然数中前64个质数的立方根的小数部分取前32bit而来。&lt;/p&gt;

&lt;p&gt;k[0..63] :=  &lt;br /&gt;
0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,  &lt;br /&gt;
0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,  &lt;br /&gt;
0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,  &lt;br /&gt;
0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,  &lt;br /&gt;
0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,  &lt;br /&gt;
0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,  &lt;br /&gt;
0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,  &lt;br /&gt;
0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2&lt;/p&gt;

&lt;p&gt;4.哈希初值&lt;/p&gt;

&lt;p&gt;这些初值是对自然数中前8个质数3、5、7、11等的平方根的小数部分取前32bit而来。&lt;/p&gt;

&lt;p&gt;H(0)0 = 6a09e667  &lt;br /&gt;
H(0)1 = bb67ae85  &lt;br /&gt;
H(0)2 = 3c6ef372  &lt;br /&gt;
H(0)3 = a54ff53a  &lt;br /&gt;
H(0)4 = 510e527f  &lt;br /&gt;
H(0)5 = 9b05688c  &lt;br /&gt;
H(0)6 = 1f83d9ab  &lt;br /&gt;
H(0)7 = 5be0cd19&lt;/p&gt;

&lt;h3 id=&quot;实现伪代码&quot;&gt;实现伪代码&lt;/h3&gt;

&lt;p&gt;预处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minimum&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;such&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resulting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;congruent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;448&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;processing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;big&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;integer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 分割512块&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每块分割成16个32bit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sixteen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;big&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 用16个32bit，扩展其他48个32bit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightshift&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightshift&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 哈希初始值&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 主循环&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;maj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maj&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 修改哈希值&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 输出结果&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;digest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;输出值&quot;&gt;输出值&lt;/h3&gt;

&lt;p&gt;256bit的二进制值或者64个16进制的ascii码。&lt;/p&gt;
</description>
            <pubDate>Thu, 05 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>加密散列-sha1</title>
            <link>/2018/04/05/sha1.html</link>
            <guid isPermaLink="true">/2018/04/05/sha1.html</guid>
            <description>&lt;p&gt;SHA-1（英语：Secure Hash Algorithm 1，中文名：安全散列算法1）是一种密码散列函数，美国国家安全局设计，并由美国国家标准技术研究所（NIST）发布为联邦数据处理标准（FIPS）[2]。SHA-1可以生成一个被称为消息摘要的160位（20字节）散列值，散列值通常的呈现形式为40个十六进制数。&lt;/p&gt;

&lt;h3 id=&quot;算法步骤&quot;&gt;算法步骤&lt;/h3&gt;

&lt;p&gt;原始消息分为N个512bit的消息块。每个消息块分成16个32bit。&lt;/p&gt;

&lt;p&gt;1.补位  &lt;br /&gt;
由于必须分成n个512bit块，所以必须进行补位。  &lt;br /&gt;
最后还需要预留64bit记录消息块的长度，所以消息块的长度不能大于2^64。&lt;/p&gt;

&lt;p&gt;补位使其长度 &lt;script type=&quot;math/tex&quot;&gt;l mod 512 = 448&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;先补一个1，然后再补0，直到长度满足对512取模后余数是448。总而言之，补位是至少补一位，最多补512位。以信息“abc”为例显示补位的过程。  &lt;br /&gt;
原始信息：01100001 01100010 01100011  &lt;br /&gt;
补位第一步：0110000101100010 01100011 1  &lt;br /&gt;
首先补一个“1”  &lt;br /&gt;
补位第二步：0110000101100010 01100011 10…..0  &lt;br /&gt;
然后补423个“0”  &lt;br /&gt;
我们可以把最后补位完成后的数据用16进制写成下面的样子  &lt;br /&gt;
61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 00000000&lt;/p&gt;

&lt;p&gt;2.补长度  &lt;br /&gt;
所谓的补长度是将原始数据的长度补到已经进行了补位操作的消息后面。通常用一个64位的数据来表示原始消息的长度。如果消息长度不大于2^64，那么第一个字就是0。在进行了补长度的操作以后，整个消息就变成下面这样了（16进制格式）&lt;/p&gt;

&lt;p&gt;61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000018&lt;/p&gt;

&lt;p&gt;如果原始的消息长度超过了512，我们需要将它补成512的倍数。然后我们把整个消息分成一个一个512位的数据块，分别处理每一个数据块，从而得到消息摘要。&lt;/p&gt;

&lt;p&gt;3.哈希初值&lt;/p&gt;

&lt;p&gt;h0 := 0x67452301
h1 := 0xEFCDAB89
h2 := 0x98BADCFE
h3 := 0x10325476
h4 := 0xC3D2E1F0&lt;/p&gt;

&lt;h3 id=&quot;实现伪代码&quot;&gt;实现伪代码&lt;/h3&gt;

&lt;p&gt;预处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≡&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;448&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 分割512块&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每块分割成16个32bit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sixteen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 用16个32bit，扩展其他64个32bit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;leftrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 哈希初始值&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 主循环&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x5A827999&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x6ED9EBA1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x8F1BBCDC&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xCA62C1D6&lt;/span&gt;
 
        &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;leftrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;leftrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 修改哈希值&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 输出结果&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;digest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;输出值&quot;&gt;输出值&lt;/h3&gt;

&lt;p&gt;160bit的二进制值或者40个16进制的ascii码。&lt;/p&gt;
</description>
            <pubDate>Thu, 05 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>加密散列-PIPEMD160</title>
            <link>/2018/04/05/ripemd160.html</link>
            <guid isPermaLink="true">/2018/04/05/ripemd160.html</guid>
            <description>&lt;p&gt;RIPEMD (RACE原始完整性校验讯息摘要)是一种加密哈希函数，由 鲁汶大学 Hans Dobbertin,Antoon Bosselaers 和 Bart Prenee组成的COSIC 研究小组发布于1996年。 RIPEMD是以MD4为基础原则所设计的 ，而且其表现与更有名的SHA-1类似.&lt;/p&gt;

&lt;p&gt;RIPEMD-160是以原始版RIPEMD所改进的160位元版本，而且是RIPEMD系列中最常见的版本。 RIPEMD-160是设计给学术社群所使用的，刚好相对于 国家安全局 所设计 SHA-1 和 SHA-2 算法。 另一方面，RIPEMD-160比SHA-1较少使用，所以可能造成RIPEMD-160比SHA还不常被审查。另外，RIPEMD-160并没有任何专利所限制。&lt;/p&gt;

&lt;p&gt;同时也存在着128,256-320位元的这种算法，称为RIPEMD-128,RIPEMD-256和RIPEMD-320。 128位版本的用意仅是取代原始版RIPEMD，因为原版也同样是128位元，并且被发现有潜在的安全问题。 而256和320位版本只有减少碰撞发生的机率，但没有提升安全等级(以 preimage举例)。不过，RIPEMD的设计者们没有真正设计256和320位元这2种标准，他们只是在128位元和160位元的基础上，修改了初始参数和s-box来达到输出为256和320位元。所以，256位的强度和128相当，而320位的强度和160位相当。且RIPEMD建立在md的基础之上，所以其添加数据的方式和md5完全一样。&lt;/p&gt;

&lt;h3 id=&quot;伪代码&quot;&gt;伪代码&lt;/h3&gt;

&lt;p&gt;原始消息分为N个512bit的消息块。每个消息块分成16个32bit。&lt;/p&gt;

&lt;p&gt;1.补位  &lt;br /&gt;
由于必须分成n个512bit块，所以必须进行补位。  &lt;br /&gt;
最后还需要预留64bit记录消息块的长度，所以消息块的长度不能大于2^64&lt;/p&gt;

&lt;p&gt;补位使其长度 &lt;script type=&quot;math/tex&quot;&gt;l mod 512 = 448&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;先补一个1，然后再补0，直到长度满足对512取模后余数是448。总而言之，补位是至少补一位，最多补512位。以信息“abc”为例显示补位的过程。  &lt;br /&gt;
原始信息：01100001 01100010 01100011  &lt;br /&gt;
补位第一步：0110000101100010 01100011 1  &lt;br /&gt;
首先补一个“1”  &lt;br /&gt;
补位第二步：0110000101100010 01100011 10…..0  &lt;br /&gt;
然后补423个“0”  &lt;br /&gt;
我们可以把最后补位完成后的数据用16进制写成下面的样子  &lt;br /&gt;
61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 00000000&lt;/p&gt;

&lt;p&gt;2.补长度  &lt;br /&gt;
所谓的补长度是将原始数据的长度补到已经进行了补位操作的消息后面。通常用一个64位的数据来表示原始消息的长度。如果消息长度不大于2^64，那么第一个字就是0。在进行了补长度的操作以后，整个消息就变成下面这样了（16进制格式）&lt;/p&gt;

&lt;p&gt;61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000018&lt;/p&gt;

&lt;p&gt;如果原始的消息长度超过了512，我们需要将它补成512的倍数。然后我们把整个消息分成一个一个512位的数据块，分别处理每一个数据块，从而得到消息摘要。&lt;/p&gt;

&lt;p&gt;2.函数定义&lt;/p&gt;

&lt;p&gt;f(j, x, y, z) = x XOR y XOR z (0 &amp;lt;= j &amp;lt;= 15)   &lt;br /&gt;
f(j, x, y, z) = (x AND y) OR (NOT(x) AND z) (16 &amp;lt;= j &amp;lt;= 31)   &lt;br /&gt;
f(j, x, y, z) = (x OR NOT(y)) XOR z (32 &amp;lt;= j &amp;lt;= 47)   &lt;br /&gt;
f(j, x, y, z) = (x AND z) OR (y AND NOT(z)) (48 &amp;lt;= j &amp;lt;= 63)   &lt;br /&gt;
f(j, x, y, z) = x XOR (y OR NOT(z)) (64 &amp;lt;= j &amp;lt;= 79)&lt;/p&gt;

&lt;p&gt;3.常量定义&lt;/p&gt;

&lt;p&gt;added constants (hexadecimal)&lt;/p&gt;

&lt;p&gt;K(j) = 0x00000000 (0 &amp;lt;= j &amp;lt;= 15)   &lt;br /&gt;
K(j) = 0x5A827999 (16 &amp;lt;= j &amp;lt;= 31) int(2&lt;strong&gt;30 x sqrt(2))   &lt;br /&gt;
K(j) = 0x6ED9EBA1 (32 &amp;lt;= j &amp;lt;= 47) int(2&lt;/strong&gt;30 x sqrt(3))   &lt;br /&gt;
K(j) = 0x8F1BBCDC (48 &amp;lt;= j &amp;lt;= 63) int(2&lt;strong&gt;30 x sqrt(5))   &lt;br /&gt;
K(j) = 0xA953FD4E (64 &amp;lt;= j &amp;lt;= 79) int(2&lt;/strong&gt;30 x sqrt(7))   &lt;br /&gt;
K’(j) = 0x50A28BE6 (0 &amp;lt;= j &amp;lt;= 15) int(2&lt;strong&gt;30 x cbrt(2))   &lt;br /&gt;
K’(j) = 0x5C4DD124 (16 &amp;lt;= j &amp;lt;= 31) int(2&lt;/strong&gt;30 x cbrt(3))   &lt;br /&gt;
K’(j) = 0x6D703EF3 (32 &amp;lt;= j &amp;lt;= 47) int(2&lt;strong&gt;30 x cbrt(5))   &lt;br /&gt;
K’(j) = 0x7A6D76E9 (48 &amp;lt;= j &amp;lt;= 63) int(2&lt;/strong&gt;30 x cbrt(7))   &lt;br /&gt;
K’(j) = 0x00000000 (64 &amp;lt;= j &amp;lt;= 79)&lt;/p&gt;

&lt;p&gt;selection of message word&lt;/p&gt;

&lt;p&gt;r(j) = j (0 &amp;lt;= j &amp;lt;= 15)   &lt;br /&gt;
r(16..31) = 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8   &lt;br /&gt;
r(32..47) = 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12   &lt;br /&gt;
r(48..63) = 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2   &lt;br /&gt;
r(64..79) = 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13   &lt;br /&gt;
r’(0..15) = 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12   &lt;br /&gt;
r’(16..31)= 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2   &lt;br /&gt;
r’(32..47)= 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13   &lt;br /&gt;
r’(48..63)= 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14   &lt;br /&gt;
r’(64..79)= 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11&lt;/p&gt;

&lt;p&gt;amount for rotate left (rol)&lt;/p&gt;

&lt;p&gt;s(0..15)  = 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8   &lt;br /&gt;
s(16..31) = 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12   &lt;br /&gt;
s(32..47) = 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5   &lt;br /&gt;
s(48..63) = 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12   &lt;br /&gt;
s(64..79) = 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6   &lt;br /&gt;
s’(0..15) = 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6   &lt;br /&gt;
s’(16..31)= 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11   &lt;br /&gt;
s’(32..47)= 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5   &lt;br /&gt;
s’(48..63)= 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8   &lt;br /&gt;
s’(64..79)= 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11&lt;/p&gt;

&lt;p&gt;4.哈希初值&lt;/p&gt;

&lt;p&gt;这些初值是对自然数中前8个质数3、5、7、11等的平方根的小数部分取前32bit而来。&lt;/p&gt;

&lt;p&gt;h0 = 0x67452301   &lt;br /&gt;
h1 = 0xEFCDAB89   &lt;br /&gt;
h2 = 0x98BADCFE   &lt;br /&gt;
h3 = 0x10325476   &lt;br /&gt;
h4 = 0xC3D2E1F0&lt;/p&gt;

&lt;h3 id=&quot;实现伪代码&quot;&gt;实现伪代码&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#It is assumed that the message after padding consists of t 16-word blocks&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#that will be denoted with X[i][j], with 0 &amp;lt;= i &amp;lt;= t-1 and 0 &amp;lt;= j &amp;lt;= 15. &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#The symbol [+] denotes addition modulo 2**32 and rol_s denotes cyclic left&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#shift (rotate) over s positions.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' := h0; B'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' := h2; D'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' = h4;
    for j := 0 to 79 {
        T := rol_s(j)(A [+] f(j, B, C, D) [+] X[i][r(j)] [+] K(j)) [+] E;
        A := E; E := D; D := rol_10(C); C := B; B := T;
        T := rol_s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' [+] f(79-j, B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;', D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'(j)] [+] K'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;';
        A'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'; E'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'; D'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rol_10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'); C'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'; B'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'; h1 := h2 [+] D [+] E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;';
    h3 := h4 [+] A [+] B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 输出结果&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;digest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;输出值&quot;&gt;输出值&lt;/h3&gt;

&lt;p&gt;160bit的二进制值或者40个16进制的ascii码。&lt;/p&gt;
</description>
            <pubDate>Thu, 05 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>Merkle树</title>
            <link>/2018/04/05/merkle-tree.html</link>
            <guid isPermaLink="true">/2018/04/05/merkle-tree.html</guid>
            <description>&lt;p&gt;Merkle树是一种哈希二叉树，它是一种用作快速归纳和校验大规模数据完整性的数据结构。  &lt;br /&gt;
比特币校验区块交易数据就是使用这种算法。&lt;/p&gt;

&lt;p&gt;Merkle树是自底向上构建的。如图所示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-05-merkle-tree/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Merkle树一般用来进行完整性验证处理。在处理完整性验证的应用场景中，Merkle树会大大减少数据的传输量及计算的复杂度。&lt;/p&gt;

&lt;p&gt;成如果想要证明一个确切的数据块是Merkle树中的一员。通常，只需要树根及这个区块和通向树根沿途的中间哈希值，就可以暂时忽略树的其他部分，这些就已经足以让我们验证到树根。  &lt;br /&gt;
一个节点只需要计算log~2~(N)个32字节的哈希值，形成一条从特定交易到树根的认证路径或者Merkle路径即可。&lt;/p&gt;

&lt;p&gt;如图所示，我们只要知道蓝色节点的hash值，就能验证 &lt;script type=&quot;math/tex&quot;&gt;H_K&lt;/script&gt; 是否在树中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-05-merkle-tree/2.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;
</description>
            <pubDate>Thu, 05 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>加密散列-md5</title>
            <link>/2018/04/05/md5.html</link>
            <guid isPermaLink="true">/2018/04/05/md5.html</guid>
            <description>&lt;p&gt;MD5消息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个128位（16字节）的散列值（hash value），用于确保信息传输完整一致。&lt;/p&gt;

&lt;h3 id=&quot;算法步骤&quot;&gt;算法步骤&lt;/h3&gt;

&lt;p&gt;原始消息分为N个512bit的消息块。每个消息块分成16个32bit。&lt;/p&gt;

&lt;p&gt;1.补位  &lt;br /&gt;
由于必须分成n个512bit块，所以必须进行补位。  &lt;br /&gt;
最后还需要预留64bit记录消息块的长度，所以消息块的长度不能大于2^64。&lt;/p&gt;

&lt;p&gt;补位使其长度 &lt;script type=&quot;math/tex&quot;&gt;l mod 512 = 448&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;先补一个1，然后再补0，直到长度满足对512取模后余数是448。总而言之，补位是至少补一位，最多补512位。以信息“abc”为例显示补位的过程。  &lt;br /&gt;
原始信息：01100001 01100010 01100011  &lt;br /&gt;
补位第一步：0110000101100010 01100011 1  &lt;br /&gt;
首先补一个“1”  &lt;br /&gt;
补位第二步：0110000101100010 01100011 10…..0  &lt;br /&gt;
然后补423个“0”  &lt;br /&gt;
我们可以把最后补位完成后的数据用16进制写成下面的样子  &lt;br /&gt;
61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 00000000&lt;/p&gt;

&lt;p&gt;2.补长度  &lt;br /&gt;
所谓的补长度是将原始数据的长度补到已经进行了补位操作的消息后面。通常用一个64位的数据来表示原始消息的长度。如果消息长度不大于2^64，那么第一个字就是0。在进行了补长度的操作以后，整个消息就变成下面这样了（16进制格式）&lt;/p&gt;

&lt;p&gt;61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000018&lt;/p&gt;

&lt;p&gt;如果原始的消息长度超过了512，我们需要将它补成512的倍数。然后我们把整个消息分成一个一个512位的数据块，分别处理每一个数据块，从而得到消息摘要。&lt;/p&gt;

&lt;p&gt;3.常量定义&lt;/p&gt;

&lt;p&gt;r[ 0..15]：= {7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22}  &lt;br /&gt;
r[16..31]：= {5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20}  &lt;br /&gt;
r[32..47]：= {4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23}  &lt;br /&gt;
r[48..63]：= {6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21}&lt;/p&gt;

&lt;p&gt;4.哈希初值&lt;/p&gt;

&lt;p&gt;h0 := 0x67452301
h1 := 0xEFCDAB89
h2 := 0x98BADCFE
h3 := 0x10325476&lt;/p&gt;

&lt;h3 id=&quot;实现伪代码&quot;&gt;实现伪代码&lt;/h3&gt;

&lt;p&gt;预处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≡&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;448&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 分割512块&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每块分割成16个32bit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sixteen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 哈希初始值&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 主循环&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;≤&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
 
        &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;leftrotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Next&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 修改哈希值&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ForEach&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 输出结果&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;digest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//(expressed as little-endian)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;输出值&quot;&gt;输出值&lt;/h3&gt;

&lt;p&gt;128bit的二进制值或者32个16进制的ascii码。&lt;/p&gt;
</description>
            <pubDate>Thu, 05 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
    </channel>
</rss>
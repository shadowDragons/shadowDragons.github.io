<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>小白</title>
        <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
        <link>http://localhost:4000/</link>
        <description></description>
        <pubDate>Thu, 05 Apr 2018 14:38:19 +0800</pubDate>
        
        <item>
            <title>加密散列-sha256</title>
            <link>/2018/04/05/sha256.html</link>
            <guid isPermaLink="true">/2018/04/05/sha256.html</guid>
            <description>&lt;p&gt;SHA256是安全散列算法SHA（Secure Hash Algorithm）系列算法之一，其摘要长度为256bits，即32个字节，故称SHA256（1个字节=8位）。&lt;/p&gt;

&lt;h3 id=&quot;算法步骤&quot;&gt;算法步骤&lt;/h3&gt;

&lt;p&gt;原始消息分为N个512bit的消息块。每个消息块分成16个32bit的字标记为M(i)0、M(i)1、M(i)2、…、M(i)15然后对这N个消息块依次进行处理。&lt;/p&gt;

&lt;p&gt;1.补位  &lt;br /&gt;
由于必须分成n个512bit块，所以必须进行补位。  &lt;br /&gt;
最后还需要预留64bit记录消息块的长度，所以消息块的长度不能大于2^64。&lt;/p&gt;

&lt;p&gt;补位使其长度 &lt;script type=&quot;math/tex&quot;&gt;l mod 512 = 448&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;先补一个1，然后再补0，直到长度满足对512取模后余数是448。总而言之，补位是至少补一位，最多补512位。以信息“abc”为例显示补位的过程。  &lt;br /&gt;
原始信息：01100001 01100010 01100011  &lt;br /&gt;
补位第一步：0110000101100010 01100011 1  &lt;br /&gt;
首先补一个“1”  &lt;br /&gt;
补位第二步：0110000101100010 01100011 10…..0  &lt;br /&gt;
然后补423个“0”  &lt;br /&gt;
我们可以把最后补位完成后的数据用16进制写成下面的样子  &lt;br /&gt;
61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 00000000&lt;/p&gt;

&lt;p&gt;2.补长度
所谓的补长度是将原始数据的长度补到已经进行了补位操作的消息后面。通常用一个64位的数据来表示原始消息的长度。如果消息长度不大于2^64，那么第一个字就是0。在进行了补长度的操作以后，整个消息就变成下面这样了（16进制格式）&lt;/p&gt;

&lt;p&gt;61626380 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000000  &lt;br /&gt;
00000000 0000000000000000 00000018&lt;/p&gt;

&lt;p&gt;如果原始的消息长度超过了512，我们需要将它补成512的倍数。然后我们把整个消息分成一个一个512位的数据块，分别处理每一个数据块，从而得到消息摘要。&lt;/p&gt;

&lt;p&gt;3.常量定义&lt;/p&gt;

&lt;p&gt;这些常量是对自然数中前64个质数的立方根的小数部分取前32bit而来。&lt;/p&gt;

&lt;p&gt;k[0..63] :=  &lt;br /&gt;
0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,  &lt;br /&gt;
0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,  &lt;br /&gt;
0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,  &lt;br /&gt;
0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,  &lt;br /&gt;
0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,  &lt;br /&gt;
0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,  &lt;br /&gt;
0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,  &lt;br /&gt;
0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2&lt;/p&gt;

&lt;p&gt;4.哈希初值&lt;/p&gt;

&lt;p&gt;这些初值是对自然数中前8个质数3、5、7、11等的平方根的小数部分取前32bit而来。&lt;/p&gt;

&lt;p&gt;H(0)0 = 6a09e667  &lt;br /&gt;
H(0)1 = bb67ae85  &lt;br /&gt;
H(0)2 = 3c6ef372  &lt;br /&gt;
H(0)3 = a54ff53a  &lt;br /&gt;
H(0)4 = 510e527f  &lt;br /&gt;
H(0)5 = 9b05688c  &lt;br /&gt;
H(0)6 = 1f83d9ab  &lt;br /&gt;
H(0)7 = 5be0cd19&lt;/p&gt;

&lt;h3 id=&quot;实现伪代码&quot;&gt;实现伪代码&lt;/h3&gt;

&lt;p&gt;预处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minimum&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;such&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resulting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;congruent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;448&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;processing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;big&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;integer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;处理&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 分割512块&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 每块分割成16个32bit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sixteen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;big&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endian&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 用16个32bit，扩展其他48个32bit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightshift&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightshift&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 哈希初始值&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 主循环&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;maj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maj&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rightrotate&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 修改哈希值&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 输出结果&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;digest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h0&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;输出值&quot;&gt;输出值&lt;/h3&gt;

&lt;p&gt;256bit的二进制值或者64个16进制的ascii码。&lt;/p&gt;
</description>
            <pubDate>Thu, 05 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>Merkle树</title>
            <link>/2018/04/05/merkle-tree.html</link>
            <guid isPermaLink="true">/2018/04/05/merkle-tree.html</guid>
            <description>&lt;p&gt;Merkle树是一种哈希二叉树，它是一种用作快速归纳和校验大规模数据完整性的数据结构。  &lt;br /&gt;
比特币校验区块交易数据就是使用这种算法。&lt;/p&gt;

&lt;p&gt;Merkle树是自底向上构建的。如图所示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-05-merkle-tree/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Merkle树一般用来进行完整性验证处理。在处理完整性验证的应用场景中，Merkle树会大大减少数据的传输量及计算的复杂度。&lt;/p&gt;

&lt;p&gt;成如果想要证明一个确切的数据块是Merkle树中的一员。通常，只需要树根及这个区块和通向树根沿途的中间哈希值，就可以暂时忽略树的其他部分，这些就已经足以让我们验证到树根。  &lt;br /&gt;
一个节点只需要计算log~2~(N)个32字节的哈希值，形成一条从特定交易到树根的认证路径或者Merkle路径即可。&lt;/p&gt;

&lt;p&gt;如图所示，我们只要知道蓝色节点的hash值，就能验证 &lt;script type=&quot;math/tex&quot;&gt;H_K&lt;/script&gt; 是否在树中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-05-merkle-tree/2.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;
</description>
            <pubDate>Thu, 05 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>搭建以太坊私有网络</title>
            <link>/2018/04/01/ether-private-network.html</link>
            <guid isPermaLink="true">/2018/04/01/ether-private-network.html</guid>
            <description>&lt;h3 id=&quot;geth&quot;&gt;Geth&lt;/h3&gt;

&lt;p&gt;可以通过命令行方式实现以太坊的各种功能,如账户的新建编辑删除，开启挖矿，ether币的转移，智能合约的部署和执行等等。&lt;/p&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew tap ethereum/ethereum
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ethereum
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装完成后检查，输入&lt;code class=&quot;highlighter-rouge&quot;&gt;geth version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-01-ether-private-network/1.png&quot; alt=&quot;1.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;创建私有网络&quot;&gt;创建私有网络&lt;/h3&gt;

&lt;p&gt;1.创建一个目录，如geth-private-test&lt;/p&gt;

&lt;p&gt;2.进入该目录下，创建文件genesis.json，并写入以下内容&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;chainId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;homesteadBlock&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eip155Block&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eip158Block&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;coinbase&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0x0000000000000000000000000000000000000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;difficulty&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0x20000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extraData&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gasLimit&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0x2fefd8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nonce&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0x0000000000000042&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mixhash&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;parentHash&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0x00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alloc&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3.初始化，并指定数据目录，例如这里的&lt;em&gt;chain&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;geth init ./genesis.json &lt;span class=&quot;nt&quot;&gt;--datadir&lt;/span&gt; ./chain
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4.进入后台，并指定日志输出文件，例如这里的&lt;em&gt;eth_output.logs&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;geth &lt;span class=&quot;nt&quot;&gt;--datadir&lt;/span&gt; ./chain &lt;span class=&quot;nt&quot;&gt;--nodiscover&lt;/span&gt; console 2&amp;gt;&amp;gt; eth_output.logs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;后续操作可以通过 &lt;em&gt;tail -f eth_output.logs&lt;/em&gt; 查看日志输出&lt;/p&gt;

&lt;p&gt;5.创建用户&lt;/p&gt;

&lt;p&gt;查看当前用户列表&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;eth.accounts
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到是空的&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;[]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建新用户&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;personal.newAccount(密码)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;完成再查看用户列表，即可看到用户。例如我这里创建了两个用户。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-01-ether-private-network/2.png&quot; alt=&quot;2.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;挖矿&quot;&gt;挖矿&lt;/h3&gt;

&lt;p&gt;开始挖矿&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;miner.start&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行一段时间后，可以看到用户余额已经增加了。&lt;/p&gt;

&lt;p&gt;结束挖矿&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;miner.stop&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;mist&quot;&gt;Mist&lt;/h3&gt;

&lt;p&gt;Mist是以太坊钱包，可作为我们geth的可视化操作界面。&lt;/p&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;p&gt;可直接到&lt;a href=&quot;https://github.com/ethereum/mist/releases&quot;&gt;官网&lt;/a&gt;选择适合自己版本下载安装。&lt;/p&gt;

&lt;p&gt;启动并连接我们的已经创建好的私有网络&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Applications/Mist.app/Contents/MacOS/Mist --rpc ~/geth-private-test/chain/geth.ipc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;启动后如下图所示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-01-ether-private-network/3.png&quot; alt=&quot;3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击 LAUNCH APPLICATION 进入，如图所示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-04-01-ether-private-network/4.png&quot; alt=&quot;4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果页面显示的账号跟我们geth显示的账号一致，且显示的网络是Private，说明已经连接成功了。   &lt;br /&gt;
后续geth的操作都会同步到Mist。&lt;/p&gt;
</description>
            <pubDate>Sun, 01 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>密码学</title>
            <link>/2018/04/01/cryptography.html</link>
            <guid isPermaLink="true">/2018/04/01/cryptography.html</guid>
            <description>&lt;h3 id=&quot;对称加密&quot;&gt;对称加密&lt;/h3&gt;

&lt;p&gt;加密  &lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;{E_k}(P) = C&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;解密   &lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;{D_k}(C) = P&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;优点  &lt;br /&gt;
加解密效率高（速度快，空间占用小），加密强度高。&lt;/p&gt;

&lt;p&gt;缺点  &lt;br /&gt;
安全性弱，密钥由多方管理，密钥容易泄露。&lt;/p&gt;

&lt;p&gt;常见加密算法  &lt;br /&gt;
DES、3DES、Blowfish、RC2、AES以及国密的SM4。&lt;/p&gt;

&lt;h3 id=&quot;非对称加密&quot;&gt;非对称加密&lt;/h3&gt;

&lt;p&gt;加密  &lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;{E_\text{公钥}}(P)=C&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;解密   &lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;{D_\text{私钥}}(C)=P&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;优点  &lt;br /&gt;
安全性高，公私钥分离。&lt;/p&gt;

&lt;p&gt;缺点  &lt;br /&gt;
加解密效率低。&lt;/p&gt;

&lt;p&gt;常见加密算法  &lt;br /&gt;
&lt;a href=&quot;/2018/03/17/rsa.html&quot;&gt;RSA&lt;/a&gt;、椭圆曲线算法&lt;/p&gt;

&lt;h3 id=&quot;同态加密&quot;&gt;同态加密&lt;/h3&gt;

&lt;p&gt;是一种特殊的加密方法，允许对密文进行处理得到仍然是加密的结果，即对密文直接进行处理，跟对明文进行处理再加密，得到的结果相同。从代数的角度讲，即同态性。&lt;/p&gt;

&lt;p&gt;如果定义一个运算符 ，对加密算法 E 和 解密算法 D，满足 &lt;script type=&quot;math/tex&quot;&gt;E(X) = E(X) \Delta E(Y)&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;则意味着对于该运算满足同态性。&lt;/p&gt;

&lt;p&gt;同态性在代数上包括：加法同态、乘法同态、减法同态和除法同态。同时满足加法同态和乘法同态，则意味着是 代数同态，即 全同态。同时满足四种同态性，则被称为 算数同态。&lt;/p&gt;

&lt;h3 id=&quot;函数加密&quot;&gt;函数加密&lt;/h3&gt;

&lt;p&gt;与同态加密相关的一个问题是函数加密。&lt;/p&gt;

&lt;p&gt;同态加密保护的是数据本身，而函数加密顾名思义保护的是处理函数本身，即让第三方看不到处理过程的前提下，对数据进行处理。&lt;/p&gt;

&lt;p&gt;该问题已被证明是不存在对多个通用函数的任意多 key 的方案，目前仅能做到对某个特定函数的一个 key 的方案。&lt;/p&gt;

&lt;h3 id=&quot;hash算法&quot;&gt;Hash算法&lt;/h3&gt;

&lt;p&gt;公式  &lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;h = H(m)&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;公式说明  &lt;br /&gt;
m：任意长度消息（实际上有长度限制的，但因为长度可以非常大，这里可以认为是任意长度消息） &lt;br /&gt;
H：哈希函数  &lt;br /&gt;
h：固定长度的哈希值&lt;/p&gt;

&lt;p&gt;一个优秀的 hash 算法，将能实现：  &lt;br /&gt;
正向快速：给定明文和 hash 算法，在有限时间和有限资源内能计算出 hash 值。  &lt;br /&gt;
逆向困难：给定（若干） hash 值，在有限时间内很难（基本不可能）逆推出明文。  &lt;br /&gt;
输入敏感：原始输入信息修改一点信息，产生的 hash 值看起来应该都有很大不同。  &lt;br /&gt;
冲突避免：很难找到两段内容不同的明文，使得它们的 hash 值一致（发生冲突），又称抗碰撞性。&lt;/p&gt;

&lt;p&gt;抗碰撞性  &lt;br /&gt;
哈希函数的抗碰撞性是指寻找两个能够产生碰撞的消息在计算上是不可行的。但找到两个碰撞的消息在计算上不可行，并不意味着不存在两个碰撞的消息。哈希函数是把大空间上的消息压缩到小空间上，碰撞肯定存在。只是计算上是不可行的。&lt;/p&gt;

&lt;p&gt;主流hash算法  &lt;br /&gt;
MD5(安全性不足应用于商业场景)  &lt;br /&gt;
SHA-1(安全性不足应用于商业场景)  &lt;br /&gt;
&lt;a href=&quot;/2018/04/05/sha256.html&quot;&gt;SHA-2&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;其他流行加密算法&quot;&gt;其他流行加密算法&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/2018/04/05/merkle-tree.html&quot;&gt;Merkle树&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;数字摘要&quot;&gt;数字摘要&lt;/h3&gt;

&lt;p&gt;对数字内容进行 Hash 运算，获取唯一的摘要值来指代原始数字内容。&lt;/p&gt;

&lt;p&gt;数字摘要是解决确保内容没被篡改过的问题（利用 Hash 函数的抗碰撞性特点）。&lt;/p&gt;

&lt;p&gt;数字摘要是 Hash 算法最重要的一个用途。在网络上下载软件或文件时，往往同时会提供一个数字摘要值，用户下载下来原始文件可以自行进行计算，并同提供的摘要值进行比对，以确保内容没有被修改过。&lt;/p&gt;

&lt;h3 id=&quot;数字签名&quot;&gt;数字签名&lt;/h3&gt;

&lt;p&gt;乙方收到甲方传过来的一串信息，怎么能够确定确实是甲方而不是有人伪造呢？&lt;/p&gt;

&lt;p&gt;我们把非对称加密反过来做就可以了，因为只有甲方自己才持有一份秘密的私钥，他拿这个私钥对数据进行加密得到密文 C = EA私(M)，乙方持有甲方的公钥，解密明文P = DA公(C)，如果能够解密成功就证明信息确实是甲方所发。&lt;/p&gt;

&lt;p&gt;不过通常不需要对发送信息的整个内容都加密，那样太慢。只需要计算一个信息的唯一信息摘要并对信息摘要加密解密即可，下面就会讲到数据摘要算法（俗称HASH算法），这也是数字签名的算法名称，很多时候是一个摘要算法+非对称算法，例如SHA1RSA, SHA256RSA等。&lt;/p&gt;

&lt;h3 id=&quot;数字证书&quot;&gt;数字证书&lt;/h3&gt;

&lt;p&gt;数字证书用来证明某个公钥是谁的，并且内容是正确的。&lt;/p&gt;

&lt;p&gt;对于非对称加密算法和数字签名来说，很重要的一点就是公钥的分发。一旦公钥被人替换（典型的如中间人攻击），则整个安全体系将被破坏掉。&lt;/p&gt;

&lt;p&gt;怎么确保一个公钥确实是某个人的原始公钥？&lt;/p&gt;

&lt;p&gt;这就需要数字证书机制。&lt;/p&gt;

&lt;p&gt;顾名思义，数字证书就是像一个证书一样，证明信息和合法性。由证书认证机构（Certification Authority，CA）来签发，权威的 CA 包括 verisign 等。&lt;/p&gt;

&lt;p&gt;数字证书内容可能包括版本、序列号、签名算法类型、签发者信息、有效期、被签发人、&lt;strong&gt;签发的公开密钥&lt;/strong&gt;、&lt;strong&gt;CA 数字签名&lt;/strong&gt;、其它信息等等，一般使用最广泛的标准为 ITU 和 ISO 联合制定的 X.509 规范。&lt;/p&gt;

&lt;p&gt;其中，最重要的包括 签发的公开密钥、CA 数字签名 两个信息。因此，只要通过这个证书就能证明某个公钥是合法的，因为带有 CA 的数字签名。&lt;/p&gt;

&lt;p&gt;更进一步地，怎么证明 CA 的签名合法不合法呢？&lt;/p&gt;

&lt;p&gt;类似的，CA 的数字签名合法不合法也是通过 CA 的证书来证明的。主流操作系统和浏览器里面会提前预置一些 CA 的证书（承认这些是合法的证书），然后所有基于他们认证的签名都会自然被认为合法。&lt;/p&gt;

&lt;h3 id=&quot;pki体系&quot;&gt;PKI体系&lt;/h3&gt;

&lt;p&gt;在非对称加密中，公钥则可以通过证书机制来进行保护，如何管理和分发证书则可以通过 PKI（Public Key Infrastructure）来保障。&lt;/p&gt;

&lt;p&gt;顾名思义，PKI 体系在现代密码学应用领域处于十分基础的地位，解决了十分核心的证书管理问题。&lt;/p&gt;

&lt;p&gt;PKI 并不代表某个特定的密码学技术和流程，PKI 是建立在公私钥基础上实现安全可靠传递消息和身份确认的一个通用框架。实现了 PKI 的平台可以安全可靠地管理网络中用户的密钥和证书，包括多个实现和变种，知名的有 RSA 公司的 PKCS（Public Key Cryptography Standards）标准和 X.509 规范等。&lt;/p&gt;

&lt;p&gt;一般情况下，PKI 至少包括如下组件：&lt;/p&gt;

&lt;p&gt;CA（Certification Authority）：负责证书的颁发和作废，接收来自 RA 的请求，是最核心的部分；
RA（Registration Authority）：对用户身份进行验证，校验数据合法性，负责登记，审核过了就发给 CA；
证书数据库：存放证书，一般采用 LDAP 目录服务，标准格式采用 X.500 系列。
CA 是最核心的组件，主要完成对证书的管理。&lt;/p&gt;

&lt;p&gt;常见的流程为，用户通过 RA 登记申请证书，CA 完成证书的制造，颁发给用户。用户需要撤销证书则向 CA 发出申请。&lt;/p&gt;

&lt;p&gt;之前章节内容介绍过，密钥有两种类型：用于签名和用于加解密，对应称为 签名密钥对 和 加密密钥对。&lt;/p&gt;

&lt;p&gt;用户证书可以有两种方式。一般可以由 CA 来生成证书和私钥；也可以自己生成公钥和私钥，然后由 CA 来对公钥进行签发。后者情况下，当用户私钥丢失后，CA 无法完成恢复。&lt;/p&gt;
</description>
            <pubDate>Sun, 01 Apr 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>共识算法</title>
            <link>/2018/03/23/agreement.html</link>
            <guid isPermaLink="true">/2018/03/23/agreement.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-03-23-agreement/agreement.png&quot; alt=&quot;agreement.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-03-23-agreement/agreement.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/bsh7ad1ow8drbag2onbc7/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Fri, 23 Mar 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>比特币挖矿</title>
            <link>/2018/03/18/bitcoin-mining.html</link>
            <guid isPermaLink="true">/2018/03/18/bitcoin-mining.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-03-18-bitcoin-mining/bitcoin-mining.png&quot; alt=&quot;bitcoin-mining.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-03-18-bitcoin-mining/bitcoin-mining.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/5shbad9ow6drfag5on617/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Sun, 18 Mar 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>比特币51攻击</title>
            <link>/2018/03/18/bitcoin-51attach.html</link>
            <guid isPermaLink="true">/2018/03/18/bitcoin-51attach.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-03-18-bitcoin-51attach/bitcoin-51attach.png&quot; alt=&quot;bitcoin-51attach.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-03-18-bitcoin-51attach/bitcoin-51attach.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/dseh6aed9o3wbd5ragon3/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Sun, 18 Mar 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>RSA算法</title>
            <link>/2018/03/17/rsa.html</link>
            <guid isPermaLink="true">/2018/03/17/rsa.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-03-17-rsa/rsa.png&quot; alt=&quot;rsa.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-03-17-rsa/rsa.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/fs1h5a1dcoawddcragon0/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Sat, 17 Mar 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>拜占庭算法</title>
            <link>/2018/03/09/Byzantine-failures.html</link>
            <guid isPermaLink="true">/2018/03/09/Byzantine-failures.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-03-09-Byzantine-failures/Byzantine-failures.png&quot; alt=&quot;Byzantine-failures.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-03-09-Byzantine-failures/Byzantine-failures.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/3shacdow9dradgon995e2/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Fri, 09 Mar 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>比特币网络</title>
            <link>/2018/03/03/bitcoin-network.html</link>
            <guid isPermaLink="true">/2018/03/03/bitcoin-network.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-03-03-bitcoin-network/bitcoin-network.png&quot; alt=&quot;bitcoin-network.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-03-03-bitcoin-network/bitcoin-network.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/6sh2ad3ow0dr9agconea4/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Sat, 03 Mar 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>比特币区块链</title>
            <link>/2018/03/03/bitcoin-chain.html</link>
            <guid isPermaLink="true">/2018/03/03/bitcoin-chain.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-03-03-bitcoin-chain/bitcoin-chain.png&quot; alt=&quot;bitcoin-chain.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-03-03-bitcoin-chain/bitcoin-chain.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/ds4h7a6d3o2w2dbragon3/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Sat, 03 Mar 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>比特币交易</title>
            <link>/2018/02/25/bitcoin-exchange.html</link>
            <guid isPermaLink="true">/2018/02/25/bitcoin-exchange.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-02-25-bitcoin-exchange/bitcoin-exchange.png&quot; alt=&quot;bitcoin-exchange.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-02-25-bitcoin-exchange/bitcoin-exchange.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/dsh5adcow9draag7on571/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Sun, 25 Feb 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>比特币钱包</title>
            <link>/2018/02/21/bitcoin-wallet.html</link>
            <guid isPermaLink="true">/2018/02/21/bitcoin-wallet.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-02-21-bitcoin-wallet/bitcoin-wallet.png&quot; alt=&quot;bitcoin-wallet.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-02-21-bitcoin-wallet/bitcoin-wallet.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/6seh4acd7ocw9d1ragon0/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Wed, 21 Feb 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>比特币地址&amp;密钥</title>
            <link>/2018/02/21/bitcoin-address.html</link>
            <guid isPermaLink="true">/2018/02/21/bitcoin-address.html</guid>
            <description>&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2018-02-21-bitcoin-address/bitcoin-address.png&quot; alt=&quot;bitcoin-address.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2018-02-21-bitcoin-address/bitcoin-address.png&quot;&gt;查看原图&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://tadown.com/fs/cs7h2abd8o4wfd8ragon0/&quot;&gt;drow.io源文件下载&lt;/a&gt;&lt;/p&gt;
</description>
            <pubDate>Wed, 21 Feb 2018 00:00:00 +0800</pubDate>
        </item>
        
        <item>
            <title>shadowsock部署</title>
            <link>/2017/12/11/shadowsock.html</link>
            <guid isPermaLink="true">/2017/12/11/shadowsock.html</guid>
            <description>&lt;h4 id=&quot;部署&quot;&gt;部署&lt;/h4&gt;

&lt;p&gt;我是选了网上大多数人推荐的vultr，性价比高，而且还有很骚的操作，后面讲。  &lt;br /&gt;
1.选服务器，直接选最便宜的，因为我只是拿来当ss用。  &lt;br /&gt;
2.安装ss&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://teddysun.com/486.html&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以root用户进入该服务器终端，执行一下命令&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;--no-check-certificate&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x shadowsocks-all.sh
./shadowsocks-all.sh 2&amp;gt;&amp;amp;1 | &lt;span class=&quot;nb&quot;&gt;tee &lt;/span&gt;shadowsocks-all.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;过程中会提示你输入ss的脚本语言、密码、端口、以及加密方式&lt;/p&gt;

&lt;p&gt;3.安装加速器&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://teddysun.com/489.html&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;执行&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;--no-check-certificate&lt;/span&gt; https://github.com/teddysun/across/raw/master/bbr.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x bbr.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./bbr.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;验证&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;uname -r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4.骚操作&lt;/p&gt;

&lt;p&gt;vultr它是以小时来计费的，即使你是月付的，它也会折算成小时。 那它是怎么算使用的，你部署了服务器，就算使用。  &lt;br /&gt;
所以我们可以把部署好ss的服务器备份，然后在你不使用的时候摧毁掉，想用的时候再恢复。&lt;/p&gt;

&lt;p&gt;第一步：点击Add Snapshot，创建一个备份，名称随便填
&lt;img src=&quot;/assets/img/posts/2017-12-11-shadowsock/2.png&quot; alt=&quot;创建备份&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二步：摧毁
&lt;img src=&quot;/assets/img/posts/2017-12-11-shadowsock/3.png&quot; alt=&quot;摧毁&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第三步：恢复
&lt;img src=&quot;/assets/img/posts/2017-12-11-shadowsock/4.png&quot; alt=&quot;恢复&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;使用&quot;&gt;使用&lt;/h4&gt;

&lt;p&gt;安装shadowsocks客户端&lt;/p&gt;

&lt;p&gt;mac&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;shadowsocks-libev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ubuntu&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install shadowsocks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用shadowsocks客户端&lt;/p&gt;

&lt;p&gt;1.创建新连接  &lt;br /&gt;
2.设置ip、端口、加密方式  &lt;br /&gt;
这样就可以使用我们搭建的ss服务了，其他应用如果要走ss，只需连上我们的shadowsocks即可。 默认shadowsocks的端口为1080&lt;/p&gt;

&lt;p&gt;我以dropbox为例  &lt;br /&gt;
只要在首选项&amp;gt;网络&amp;gt;设置代理即可  &lt;br /&gt;
&lt;img src=&quot;/assets/img/posts/2017-12-11-shadowsock/1.png&quot; alt=&quot;恢复&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;命令行使用&quot;&gt;命令行使用&lt;/h4&gt;

&lt;p&gt;安装proxychains-ng&lt;/p&gt;

&lt;p&gt;mac&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;proxychains-ng
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ubuntu&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 安装&lt;/span&gt;
git clone https://github.com/rofl0r/proxychains-ng.git
./configure &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr &lt;span class=&quot;nt&quot;&gt;--sysconfdir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc
make
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;nb&quot;&gt;install
sudo &lt;/span&gt;make install-config
&lt;span class=&quot;c&quot;&gt;# 配置 socks4 127.0.0.1 9050改为socks5 127.0.0.1 1080&lt;/span&gt;
vi /usr/local/etc/proxychains.conf
&lt;span class=&quot;c&quot;&gt;# 验证ip是否为ss服务器的ip&lt;/span&gt;
proxychains4 curl ip.gs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之后如果需要只用ss，只要在命令前加上proxychains4即可。&lt;/p&gt;
</description>
            <pubDate>Mon, 11 Dec 2017 00:00:00 +0800</pubDate>
        </item>
        
    </channel>
</rss>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ben Blog</title>
    <description>一个小白的成长学习历程</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 20 Mar 2019 13:41:52 +0800</pubDate>
    <lastBuildDate>Wed, 20 Mar 2019 13:41:52 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>「Swoole」Lock 锁</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;创建一个锁，用来实现数据同步。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;支持五种类型锁：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;文件锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_FILELOCK&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;读写锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_RWLOCK&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;信号量 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_SEM&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;互斥锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_MUTEX&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;自旋锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_SPINLOCK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;请勿在&lt;code class=&quot;highlighter-rouge&quot;&gt;onReceive&lt;/code&gt;等回调函数中创建锁，否则底层的&lt;code class=&quot;highlighter-rouge&quot;&gt;GlobalMemory&lt;/code&gt;内存会持续增长，造成内存泄漏。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不要循环创建/销毁锁的对象，否则会发生内存泄漏&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;接口&quot;&gt;接口&lt;/h3&gt;

&lt;h5 id=&quot;构造方法-__construct&quot;&gt;构造方法 __construct&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lockfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$type&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;锁的类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$lockfile&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当类型为&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_FILELOCK&lt;/code&gt;时必须传入，指定文件锁的路径&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加锁阻塞-lock&quot;&gt;加锁（阻塞） lock&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;加锁操作。如果有其他进程持有锁，那这里将进入阻塞，直到持有锁的进程&lt;code class=&quot;highlighter-rouge&quot;&gt;unlock&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加锁非阻塞-trylock&quot;&gt;加锁（非阻塞） trylock&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;加锁操作。与&lt;code class=&quot;highlighter-rouge&quot;&gt;lock&lt;/code&gt;方法不同的是，&lt;code class=&quot;highlighter-rouge&quot;&gt;trylock&lt;/code&gt;不会阻塞，它会立即返回。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trylock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;释放锁-unlock&quot;&gt;释放锁 unlock&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加读锁阻塞-lock_read&quot;&gt;加读锁（阻塞） lock_read&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;只读加锁。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加读锁非阻塞-trylock_read&quot;&gt;加读锁（非阻塞） trylock_read&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;只读加锁。此方法与&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_read&lt;/code&gt;相同，但是非阻塞的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trylock_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加锁等待-lockwait&quot;&gt;加锁等待 lockwait&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;加锁操作，作用与swoole_lock-&amp;gt;lock一致，但lockwait可以设置超时时间。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swoole_lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lockwait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$timeout&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;传入超时时间，默认为1秒&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;注意点&quot;&gt;注意点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;只有&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_RWLOCK&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_FILELOCK&lt;/code&gt;支持&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_read&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOlE_SEM&lt;/code&gt;不支持&lt;code class=&quot;highlighter-rouge&quot;&gt;trylock&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lock&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;trylock&lt;/code&gt;属于独占锁&lt;/li&gt;
  &lt;li&gt;只有&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_MUTEX&lt;/code&gt;支持lockwait&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;实例&quot;&gt;实例&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**
 * SWOOLE_MUTEX 互斥锁
 * SWOOLE_FILELOCK 文件锁，需要在第二个参数传入一个锁文件
 * SWOOLE_SPINLOCK 自旋锁(请查看swoole扩展信息，检测是否支持)
 * SWOOLE_SEM 信号量
 * SWOOLE_RWLOCK 读写锁
 */&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SWOOLE_MUTEX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Master]create lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pcntl_fork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Child] Wait Lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Child] Get Lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[Child] exit&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Master]release lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Master]exit&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 20 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/20/swoole-lock/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/20/swoole-lock/</guid>
        
        <category>php</category>
        
        
      </item>
    
      <item>
        <title>「Swoole」Timer 毫秒精度的定时器</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;毫秒精度的定时器。底层基于&lt;code class=&quot;highlighter-rouge&quot;&gt;epoll_wait&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;setitimer&lt;/code&gt;实现，数据结构使用最小堆，可支持添加大量定时器。   &lt;br /&gt;
在同步进程中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;setitimer&lt;/code&gt;和信号实现，如&lt;code class=&quot;highlighter-rouge&quot;&gt;Manager&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;TaskWorker&lt;/code&gt;进程。  &lt;br /&gt;
在异步进程中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;epoll_wait/kevent/poll/select&lt;/code&gt;超时时间实现。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;间隔时钟定时器-tick&quot;&gt;间隔时钟定时器 tick&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;设置一个间隔时钟定时器，与after定时器不同的是tick定时器会持续触发，直到调用swoole_timer_clear清除。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_timer_tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$msec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callable&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$mixed&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$msec&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定时间，单位为毫秒。如1000表示1秒，最大不得超过 86400000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$callback_function&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时间到期后所执行的函数，必须是可以调用的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$param&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;回调函数使用参数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当前定时器id&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;回调函数&quot;&gt;回调函数&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;callbackFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$mixed&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$timer_id&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;定时器的ID，可用于swoole_timer_clear清除此定时器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$param&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;由swoole_timer_tick传入的第三个参数$param，此参数也为可选参数&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;注意点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;定时器仅在当前进程空间内有效&lt;/li&gt;
  &lt;li&gt;定时器是纯异步实现的，不能与阻塞IO的函数一起使用，否则定时器的执行时间会发生错乱&lt;/li&gt;
  &lt;li&gt;定时器在执行的过程中可能存在一定误差&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;实例&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;: Timeout #&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; #&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$param&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$tickid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_timer_tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'timeout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tickid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$tickid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_timer_tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;: Timeout #&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; #&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tickid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;校正&quot;&gt;校正&lt;/h5&gt;

&lt;p&gt;定时器回调函数的执行时间不影响下一次定时器执行的时间。实例：在0.002s设置了10ms的tick定时器，第一次会在0.012s执行回调函数，如果回调函数执行了5ms，下一次定时器仍然会在0.022s时触发，而不是0.027s。&lt;/p&gt;

&lt;p&gt;但如果定时器回调函数的执行时间过长，甚至覆盖了下一次定时器执行的时间。底层会进行时间校正，丢弃已过期的行为，在下一时间回调。如上面例子中0.012s时的回调函数执行了15ms，本该在0.022s产生一次定时回调。实际上本次定时器在0.027s才返回，这时定时早已过期。底层会在0.032s时再次触发定时器回调。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;正确实例&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_timer_tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;after 3000ms.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;swoole_timer_after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;after 14000ms.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;错误实例&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_timer_tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;after 3000ms.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;after 14000ms.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;一次性定时器-after&quot;&gt;一次性定时器 after&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;swoole_timer_after函数是一个一次性定时器，执行完成后就会销毁。此函数与PHP标准库提供的sleep函数不同，after是非阻塞的。而sleep调用后会导致当前的进程进入阻塞，将无法处理新的请求。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_timer_after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$after_time_ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mixed&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$callback_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$after_time_ms&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定时间，单位为毫秒，最大不得超过 86400000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$callback_function&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时间到期后所执行的函数，必须是可以调用的。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当前定时器id&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;实例&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_timer_after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;timeout, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;删除&quot;&gt;删除&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用定时器ID来删除定时器。  &lt;br /&gt;
不能用于清除其他进程的定时器，只作用于当前进程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_timer_clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$timer_id&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;定时器ID，调用swoole_timer_tick、swoole_timer_after后会返回一个整数的ID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;实例&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_timer_after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;timeout&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;swoole_timer_clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 输出：bool(true) int(1)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 不输出：timeout&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;协程&quot;&gt;协程&lt;/h3&gt;

&lt;p&gt;在协程环境下&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_timer_tick&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_timer_after&lt;/code&gt;回调中会自动创建一个协程，可以直接使用协程相关API，无需调用go创建协程。&lt;/p&gt;

&lt;p&gt;可设置&lt;code class=&quot;highlighter-rouge&quot;&gt;enable_coroutine&lt;/code&gt;关闭自动创建协程。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_async_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'enable_coroutine'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 19 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/19/swoole-timer/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/19/swoole-timer/</guid>
        
        <category>php</category>
        
        
      </item>
    
      <item>
        <title>「Swoole」atomic 计数器</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_atomic&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole&lt;/code&gt;扩展提供的原子计数操作类，可以方便整数的无锁原子增减。  &lt;br /&gt;
使用共享内存，可以在不同的进程之间操作计数。  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_atomic&lt;/code&gt;基于&lt;code class=&quot;highlighter-rouge&quot;&gt;gcc&lt;/code&gt;提供的CPU原子指令，无需加锁。  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_atomic&lt;/code&gt;在服务器程序中必须在&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_server-&amp;gt;start&lt;/code&gt;前创建才能在Worker进程中使用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;接口&quot;&gt;接口&lt;/h3&gt;

&lt;h5 id=&quot;构造方法-__construct&quot;&gt;构造方法 __construct&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_atomic&lt;/code&gt;只能操作32位无符号整数，最大支持42亿，不支持负数，如需要64有符号整型，可使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Swoole\Atomic\Long&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$init_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$init_value&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;可以指定初始化的数值，默认为0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;增加计数-add&quot;&gt;增加计数 add&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$add_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$add_value&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;要增加的数值，默认为1;&lt;br /&gt;必须为正整数;&lt;br /&gt;原值相加如果超过42亿，将会溢出，高位数值会被丢弃&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;结果数值&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;减少计数-sub&quot;&gt;减少计数 sub&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sub_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$sub_value&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;要减少的数值，默认为1;&lt;br /&gt;必须为正整数;&lt;br /&gt;与原值相减如果低于0将会溢出，高位数值会被丢弃;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;结果数值&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;获取当前计数值-get&quot;&gt;获取当前计数值 get&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;设置为指定值-set&quot;&gt;设置为指定值 set&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$value&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定要设置的目标数值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;无&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;比较并设置-cmpset&quot;&gt;比较并设置 cmpset&lt;/h5&gt;

&lt;p&gt;如果当前值等于&lt;code class=&quot;highlighter-rouge&quot;&gt;$cmp_value&lt;/code&gt;,则把当前值设置为&lt;code class=&quot;highlighter-rouge&quot;&gt;$set_value&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;cmpset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cmp_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$set_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$cmp_value&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;比较的值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$set_value&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;设置的值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;如果等于&lt;code class=&quot;highlighter-rouge&quot;&gt;$cmp_value&lt;/code&gt;，则返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;;反之，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;等待-wait&quot;&gt;等待 wait&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;当原子计数的值为0时程序进入等待状态。另外一个进程调用wakeup可以再次唤醒程序。底层基于Linux Futex实现，使用此特性，可以仅用4字节内存实现一个等待、通知、锁的功能。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$timeout&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;比较的值超时时间，默认为1秒。设置为-1时表示永不超时，会持续等待直到有其他进程唤醒&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bool&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;当原子计数器值处于0、1时，才能调用该函数&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;表示不需要进入等待状态，资源当前就是可用。&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt;函数会立即返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;根据参数&lt;code class=&quot;highlighter-rouge&quot;&gt;$timeout&lt;/code&gt;数值&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;唤醒-wakeup&quot;&gt;唤醒 wakeup&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;唤醒处于wait状态的其他进程。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;wakeup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$n&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;控制唤醒的进程数量&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bool&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;实例&quot;&gt;实例&lt;/h3&gt;

&lt;h5 id=&quot;基本操作&quot;&gt;基本操作&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 123&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_atomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 135&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 124&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cmpset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;122&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cmpset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;124&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 999&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;等待唤醒&quot;&gt;等待&amp;amp;唤醒&lt;/h5&gt;

&lt;p&gt;通过&lt;code class=&quot;highlighter-rouge&quot;&gt;pcntl_fork&lt;/code&gt;创建子进程来实现。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_atomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 父进程&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pcntl_fork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;master start&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;master end&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 子进程&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;child start&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wakeup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;child end&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出结果&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;child start
master start
child end
master end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;证明不同进程间共享计数&quot;&gt;证明不同进程间共享计数&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_atomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pcntl_fork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 这里等待10秒是为了确保子进程已经执行了add操作&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$atomic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出结果&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 19 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/19/swoole-atomic/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/19/swoole-atomic/</guid>
        
        <category>php</category>
        
        
      </item>
    
      <item>
        <title>进程、进程组、会话与控制终端</title>
        <description>&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-03-18-thread-group-session-terminal/1.png&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-03-18-thread-group-session-terminal/1.png&quot; alt=&quot;1.png&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/18/thread-group-session-terminal/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/18/thread-group-session-terminal/</guid>
        
        <category>操作系统</category>
        
        
      </item>
    
      <item>
        <title>Elasticsearch6.x-xpack破解</title>
        <description>&lt;h3 id=&quot;去掉license校验&quot;&gt;去掉license校验&lt;/h3&gt;

&lt;p&gt;这里有我之前已经破解的6.5.4的包，有需要可以直接&lt;a href=&quot;https://download.csdn.net/download/junbin007/11006208&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载&lt;a href=&quot;https://github.com/deathmarine/Luyten/releases&quot;&gt;luyten&lt;/a&gt;反编译JAVA工具&lt;/p&gt;

&lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;luyent&lt;/code&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;Elasticsearch&lt;/code&gt;目录下的&lt;code class=&quot;highlighter-rouge&quot;&gt;modules/x-pack-core/x-pack-core-x.x.x.jar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;找到 &lt;code class=&quot;highlighter-rouge&quot;&gt;org.elasticsearch.license.LicenseVerifier&lt;/code&gt;文件，提取出来做以下修改：&lt;br /&gt;
LicenseVerifier 中有两个静态方法，这就是验证授权文件是否有效的方法，我们把它修改为全部返回true.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.nio.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.elasticsearch.common.bytes.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.security.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.elasticsearch.common.xcontent.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.lucene.util.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.elasticsearch.core.internal.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LicenseVerifier&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;verifyLicense&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;License&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encryptedPublicKeyData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;verifyLicense&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;License&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;org.elasticsearch.xpack.core.XPackBuild&lt;/code&gt;文件，提取出来做以下修改：&lt;br /&gt;
XPackBuild 中最后一个静态代码块中 try的部分全部删除，这部分会验证jar包是否被修改.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xpack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.elasticsearch.common.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.net.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.elasticsearch.common.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.nio.file.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.jar.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XPackBuild&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XPackBuild&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CURRENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shortHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@SuppressForbidden&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reason&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;looks up path of xpack.jar directly&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getElasticsearchCodebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XPackBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProtectionDomain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCodeSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PathUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URISyntaxException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bogus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bogus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;XPackBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shortHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shortHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shortHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shortHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shortHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getElasticsearchCodebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shortHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;Label_0157:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;shortHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;CURRENT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XPackBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shortHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;进入上面两个文件的目录，编译这两个修改的文件&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javac &lt;span class=&quot;nt&quot;&gt;-cp&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.:{es的源码路径}/modules/x-pack-core/x-pack-core-x.x.x.jar:{es的源码路径}/lib/*&quot;&lt;/span&gt; LicenseVerifier.java
javac &lt;span class=&quot;nt&quot;&gt;-cp&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.:{es的源码路径}/modules/x-pack-core/x-pack-core-x.x.x.jar:{es的源码路径}/lib/*&quot;&lt;/span&gt; XPackBuild.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编译后会生成两个文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;LicenseVerifier.class&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;XPackBuild.class&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;解压&lt;code class=&quot;highlighter-rouge&quot;&gt;{es的源码路径}/modules/x-pack-core/x-pack-core-x.x.x.jar&lt;/code&gt;，进入解压后路径，然后将上面生成的两个文件覆盖进去，然后执行打包命令&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
jar &lt;span class=&quot;nt&quot;&gt;-cvf&lt;/span&gt; x-pack-core-x.x.x_new.jar &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; x-pack-core-x.x.x &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将新包重命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;x-pack-core-x.x.x.jar&lt;/code&gt;,然后覆盖&lt;code class=&quot;highlighter-rouge&quot;&gt;{es的源码路径}/modules/x-pack-core/x-pack-core-x.x.x.jar&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这样我们的去掉license校验就完成了。&lt;/p&gt;

&lt;h3 id=&quot;导入license&quot;&gt;导入license&lt;/h3&gt;

&lt;p&gt;首先去&lt;a href=&quot;https://license.elastic.co/registration&quot;&gt;官网&lt;/a&gt;申请&lt;code class=&quot;highlighter-rouge&quot;&gt;license&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;license&lt;/code&gt;文件，修改以下字段&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;expiry_date_in_millis&quot;: {过期时间时间戳}
&quot;max_nodes&quot;: {最大节点数}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;导入到elasticsearch&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -u elastic:elastic -XPUT ‘http://{es-ip}:{es-port}/_xpack/license’ -H “Content-Type: application/json” -d @/tmp/license.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;完成！&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/09/xpack-crack/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/09/xpack-crack/</guid>
        
        <category>Elastic</category>
        
        
      </item>
    
      <item>
        <title>微服务框架技术选型</title>
        <description>&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-03-09-serverless/1.png&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-03-09-serverless/1.png&quot; alt=&quot;1.png&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 09 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/09/serverless/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/09/serverless/</guid>
        
        <category>微服务</category>
        
        
      </item>
    
      <item>
        <title>「转载」OAuth2.0</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html&quot;&gt;理解OAuth 2.0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/OAuth&quot;&gt;OAuth&lt;/a&gt;是一个关于授权（authorization）的开放网络标准，在全世界得到广泛应用，目前的版本是2.0版。&lt;/p&gt;

&lt;p&gt;本文对OAuth 2.0的设计思路和运行流程，做一个简明通俗的解释，主要参考材料为&lt;a href=&quot;http://www.rfcreader.com/#rfc6749&quot;&gt;RFC 6749&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;应用场景&quot;&gt;应用场景&lt;/h3&gt;

&lt;p&gt;为了理解OAuth的适用场合，让我举一个假设的例子。&lt;/p&gt;

&lt;p&gt;有一个”云冲印”的网站，可以将用户储存在Google的照片，冲印出来。用户为了使用该服务，必须让”云冲印”读取自己储存在Google上的照片。&lt;/p&gt;

&lt;p&gt;问题是只有得到用户的授权，Google才会同意”云冲印”读取这些照片。那么，”云冲印”怎样获得用户的授权呢？&lt;/p&gt;

&lt;p&gt;传统方法是，用户将自己的Google用户名和密码，告诉”云冲印”，后者就可以读取用户的照片了。这样的做法有以下几个严重的缺点。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“云冲印”为了后续的服务，会保存用户的密码，这样很不安全。&lt;/li&gt;
  &lt;li&gt;Google不得不部署密码登录，而我们知道，单纯的密码登录并不安全。&lt;/li&gt;
  &lt;li&gt;“云冲印”拥有了获取用户储存在Google所有资料的权力，用户没法限制”云冲印”获得授权的范围和有效期。&lt;/li&gt;
  &lt;li&gt;用户只有修改密码，才能收回赋予”云冲印”的权力。但是这样做，会使得其他所有获得用户授权的第三方应用程序全部失效。&lt;/li&gt;
  &lt;li&gt;只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OAuth就是为了解决上面这些问题而诞生的。&lt;/p&gt;

&lt;h3 id=&quot;名词定义&quot;&gt;名词定义&lt;/h3&gt;

&lt;p&gt;在详细讲解OAuth 2.0之前，需要了解几个专用名词。它们对读懂后面的讲解，尤其是几张图，至关重要。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Third-party application&lt;/strong&gt; 第三方应用程序，本文中又称”客户端”（client），即上一节例子中的”云冲印”。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;HTTP service&lt;/strong&gt; HTTP服务提供商，本文中简称”服务提供商”，即上一节例子中的Google。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Resource Owner&lt;/strong&gt; 资源所有者，本文中又称”用户”（user）。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;User Agent&lt;/strong&gt; 用户代理，本文中就是指浏览器。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authorization server&lt;/strong&gt; 认证服务器，即服务提供商专门用来处理认证的服务器。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Resource server&lt;/strong&gt; 资源服务器，即服务提供商存放用户生成的资源的服务器。它与认证服务器，可以是同一台服务器，也可以是不同的服务器。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;知道了上面这些名词，就不难理解，OAuth的作用就是让”客户端”安全可控地获取”用户”的授权，与”服务商提供商”进行互动。&lt;/p&gt;

&lt;h3 id=&quot;oauth的思路&quot;&gt;OAuth的思路&lt;/h3&gt;

&lt;p&gt;OAuth在”客户端”与”服务提供商”之间，设置了一个授权层（authorization layer）。”客户端”不能直接登录”服务提供商”，只能登录授权层，以此将用户与客户端区分开来。”客户端”登录授权层所用的令牌（token），与用户的密码不同。用户可以在登录的时候，指定授权层令牌的权限范围和有效期。&lt;/p&gt;

&lt;p&gt;“客户端”登录授权层以后，”服务提供商”根据令牌的权限范围和有效期，向”客户端”开放用户储存的资料。&lt;/p&gt;

&lt;h3 id=&quot;运行流程&quot;&gt;运行流程&lt;/h3&gt;

&lt;p&gt;OAuth 2.0的运行流程如下图，摘自RFC 6749。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-02-24-oauth2/1.png&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-02-24-oauth2/1.png&quot; alt=&quot;1.png&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户打开客户端以后，客户端要求用户给予授权。&lt;/li&gt;
  &lt;li&gt;用户同意给予客户端授权。&lt;/li&gt;
  &lt;li&gt;客户端使用上一步获得的授权，向认证服务器申请令牌。&lt;/li&gt;
  &lt;li&gt;认证服务器对客户端进行认证以后，确认无误，同意发放令牌。&lt;/li&gt;
  &lt;li&gt;客户端使用令牌，向资源服务器申请获取资源。&lt;/li&gt;
  &lt;li&gt;资源服务器确认令牌无误，同意向客户端开放资源。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;不难看出来，上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。&lt;/p&gt;

&lt;p&gt;下面一一讲解客户端获取授权的四种模式。&lt;/p&gt;

&lt;h3 id=&quot;客户端的授权模式&quot;&gt;客户端的授权模式&lt;/h3&gt;

&lt;p&gt;客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0定义了四种授权方式。&lt;/p&gt;

&lt;h5 id=&quot;授权码模式&quot;&gt;授权码模式&lt;/h5&gt;

&lt;p&gt;授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与”服务提供商”的认证服务器进行互动。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-02-24-oauth2/2.png&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-02-24-oauth2/2.png&quot; alt=&quot;2.png&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;它的步骤如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户访问客户端，后者将前者导向认证服务器。&lt;/li&gt;
  &lt;li&gt;用户选择是否给予客户端授权。&lt;/li&gt;
  &lt;li&gt;假设用户给予授权，认证服务器将用户导向客户端事先指定的”重定向URI”（redirection URI），同时附上一个授权码。&lt;/li&gt;
  &lt;li&gt;客户端收到授权码，附上早先的”重定向URI”，向认证服务器申请令牌。这一步是在客户端的后台的服务器上完成的，对用户不可见。&lt;/li&gt;
  &lt;li&gt;认证服务器核对了授权码和重定向URI，确认无误后，向客户端发送访问令牌（access token）和更新令牌（refresh token）。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面是上面这些步骤所需要的参数。&lt;/p&gt;

&lt;p&gt;1步骤中，客户端申请认证的URI，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;response_type：表示授权类型，必选项，此处的值固定为”code”&lt;/li&gt;
  &lt;li&gt;client_id：表示客户端的ID，必选项&lt;/li&gt;
  &lt;li&gt;redirect_uri：表示重定向URI，可选项&lt;/li&gt;
  &lt;li&gt;scope：表示申请的权限范围，可选项&lt;/li&gt;
  &lt;li&gt;state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /authorize?response_type=code&amp;amp;client_id=s6BhdRkqt3&amp;amp;state=xyz&amp;amp;redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb HTTP/1.1
Host: server.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3步骤中，服务器回应客户端的URI，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;code：表示授权码，必选项。该码的有效期应该很短，通常设为10分钟，客户端只能使用该码一次，否则会被授权服务器拒绝。该码与客户端ID和重定向URI，是一一对应关系。&lt;/li&gt;
  &lt;li&gt;state：如果客户端的请求中包含这个参数，认证服务器的回应也必须一模一样包含这个参数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 302 Found
Location: https://client.example.com/cb?code=SplxlOBeZQQYbYS6WxSbIA&amp;amp;state=xyz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4步骤中，客户端向认证服务器申请令牌的HTTP请求，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;grant_type：表示使用的授权模式，必选项，此处的值固定为”authorization_code”。&lt;/li&gt;
  &lt;li&gt;code：表示上一步获得的授权码，必选项。&lt;/li&gt;
  &lt;li&gt;redirect_uri：表示重定向URI，必选项，且必须与A步骤中的该参数值保持一致。&lt;/li&gt;
  &lt;li&gt;client_id：表示客户端ID，必选项。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /token HTTP/1.1
Host: server.example.com
Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
Content-Type: application/x-www-form-urlencoded

grant_type=authorization_code&amp;amp;code=SplxlOBeZQQYbYS6WxSbIA&amp;amp;redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;5步骤中，认证服务器发送的HTTP回复，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;access_token：表示访问令牌，必选项。&lt;/li&gt;
  &lt;li&gt;token_type：表示令牌类型，该值大小写不敏感，必选项，可以是bearer类型或mac类型。&lt;/li&gt;
  &lt;li&gt;expires_in：表示过期时间，单位为秒。如果省略该参数，必须其他方式设置过期时间。&lt;/li&gt;
  &lt;li&gt;refresh_token：表示更新令牌，用来获取下一次的访问令牌，可选项。&lt;/li&gt;
  &lt;li&gt;scope：表示权限范围，如果与客户端申请的范围一致，此项可省略。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Content-Type: application/json;charset=UTF-8
Cache-Control: no-store
Pragma: no-cache

{
    &quot;access_token&quot;:&quot;2YotnFZFEjr1zCsicMWpAA&quot;,
    &quot;token_type&quot;:&quot;example&quot;,
    &quot;expires_in&quot;:3600,
    &quot;refresh_token&quot;:&quot;tGzv3JOkF0XG5Qx2TlKWIA&quot;,
    &quot;example_parameter&quot;:&quot;example_value&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从上面代码可以看到，相关参数使用JSON格式发送（Content-Type: application/json）。此外，HTTP头信息中明确指定不得缓存。&lt;/p&gt;

&lt;h5 id=&quot;简化模式&quot;&gt;简化模式&lt;/h5&gt;

&lt;p&gt;简化模式（implicit grant type）不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了”授权码”这个步骤，因此得名。所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-02-24-oauth2/3.png&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-02-24-oauth2/3.png&quot; alt=&quot;3.png&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;它的步骤如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;客户端将用户导向认证服务器。&lt;/li&gt;
  &lt;li&gt;用户决定是否给于客户端授权。&lt;/li&gt;
  &lt;li&gt;假设用户给予授权，认证服务器将用户导向客户端指定的”重定向URI”，并在URI的Hash部分包含了访问令牌。&lt;/li&gt;
  &lt;li&gt;浏览器向资源服务器发出请求，其中不包括上一步收到的Hash值。&lt;/li&gt;
  &lt;li&gt;资源服务器返回一个网页，其中包含的代码可以获取Hash值中的令牌。&lt;/li&gt;
  &lt;li&gt;浏览器执行上一步获得的脚本，提取出令牌。&lt;/li&gt;
  &lt;li&gt;浏览器将令牌发给客户端。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面是上面这些步骤所需要的参数。&lt;/p&gt;

&lt;p&gt;1步骤中，客户端发出的HTTP请求，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;response_type：表示授权类型，此处的值固定为”token”，必选项。&lt;/li&gt;
  &lt;li&gt;client_id：表示客户端的ID，必选项。&lt;/li&gt;
  &lt;li&gt;redirect_uri：表示重定向的URI，可选项。&lt;/li&gt;
  &lt;li&gt;scope：表示权限范围，可选项。&lt;/li&gt;
  &lt;li&gt;state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /authorize?response_type=token&amp;amp;client_id=s6BhdRkqt3&amp;amp;state=xyz&amp;amp;redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb HTTP/1.1
Host: server.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3步骤中，认证服务器回应客户端的URI，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;access_token：表示访问令牌，必选项。&lt;/li&gt;
  &lt;li&gt;token_type：表示令牌类型，该值大小写不敏感，必选项。&lt;/li&gt;
  &lt;li&gt;expires_in：表示过期时间，单位为秒。如果省略该参数，必须其他方式设置过期时间。&lt;/li&gt;
  &lt;li&gt;scope：表示权限范围，如果与客户端申请的范围一致，此项可省略。&lt;/li&gt;
  &lt;li&gt;state：如果客户端的请求中包含这个参数，认证服务器的回应也必须一模一样包含这个参数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 302 Found
Location: http://example.com/cb#access_token=2YotnFZFEjr1zCsicMWpAA&amp;amp;state=xyz&amp;amp;token_type=example&amp;amp;expires_in=3600
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在上面的例子中，认证服务器用HTTP头信息的Location栏，指定浏览器重定向的网址。注意，在这个网址的Hash部分包含了令牌。&lt;/p&gt;

&lt;p&gt;根据上面的4步骤，下一步浏览器会访问Location指定的网址，但是Hash部分不会发送。接下来的E步骤，服务提供商的资源服务器发送过来的代码，会提取出Hash中的令牌。&lt;/p&gt;

&lt;h5 id=&quot;密码模式&quot;&gt;密码模式&lt;/h5&gt;

&lt;p&gt;密码模式（Resource Owner Password Credentials Grant）中，用户向客户端提供自己的用户名和密码。客户端使用这些信息，向”服务商提供商”索要授权。&lt;/p&gt;

&lt;p&gt;在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-02-24-oauth2/4.png&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-02-24-oauth2/4.png&quot; alt=&quot;4.png&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;它的步骤如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户向客户端提供用户名和密码。&lt;/li&gt;
  &lt;li&gt;客户端将用户名和密码发给认证服务器，向后者请求令牌。&lt;/li&gt;
  &lt;li&gt;认证服务器确认无误后，向客户端提供访问令牌。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2步骤中，客户端发出的HTTP请求，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;grant_type：表示授权类型，此处的值固定为”password”，必选项。&lt;/li&gt;
  &lt;li&gt;username：表示用户名，必选项。&lt;/li&gt;
  &lt;li&gt;password：表示用户的密码，必选项。&lt;/li&gt;
  &lt;li&gt;scope：表示权限范围，可选项。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /token HTTP/1.1
Host: server.example.com
Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
Content-Type: application/x-www-form-urlencoded

grant_type=password&amp;amp;username=johndoe&amp;amp;password=A3ddj3w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3步骤中，认证服务器向客户端发送访问令牌，下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Content-Type: application/json;charset=UTF-8
Cache-Control: no-store
Pragma: no-cache

{
    &quot;access_token&quot;:&quot;2YotnFZFEjr1zCsicMWpAA&quot;,
    &quot;token_type&quot;:&quot;example&quot;,
    &quot;expires_in&quot;:3600,
    &quot;refresh_token&quot;:&quot;tGzv3JOkF0XG5Qx2TlKWIA&quot;,
    &quot;example_parameter&quot;:&quot;example_value&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面代码中，各个参数的含义参见《授权码模式》一节。&lt;/p&gt;

&lt;p&gt;整个过程中，客户端不得保存用户的密码。&lt;/p&gt;

&lt;h5 id=&quot;客户端模式&quot;&gt;客户端模式&lt;/h5&gt;

&lt;p&gt;客户端模式（Client Credentials Grant）指客户端以自己的名义，而不是以用户的名义，向”服务提供商”进行认证。严格地说，客户端模式并不属于OAuth框架所要解决的问题。在这种模式中，用户直接向客户端注册，客户端以自己的名义要求”服务提供商”提供服务，其实不存在授权问题。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-02-24-oauth2/5.png&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-02-24-oauth2/5.png&quot; alt=&quot;5.png&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;它的步骤如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;客户端向认证服务器进行身份认证，并要求一个访问令牌。&lt;/li&gt;
  &lt;li&gt;认证服务器确认无误后，向客户端提供访问令牌。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1步骤中，客户端发出的HTTP请求，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;granttype：表示授权类型，此处的值固定为”clientcredentials”，必选项。&lt;/li&gt;
  &lt;li&gt;scope：表示权限范围，可选项。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /token HTTP/1.1
Host: server.example.com
Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;认证服务器必须以某种方式，验证客户端身份。&lt;/p&gt;

&lt;p&gt;2步骤中，认证服务器向客户端发送访问令牌，下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Content-Type: application/json;charset=UTF-8
Cache-Control: no-store
Pragma: no-cache

{
    &quot;access_token&quot;:&quot;2YotnFZFEjr1zCsicMWpAA&quot;,
    &quot;token_type&quot;:&quot;example&quot;,
    &quot;expires_in&quot;:3600,
    &quot;example_parameter&quot;:&quot;example_value&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面代码中，各个参数的含义参见《授权码模式》一节。&lt;/p&gt;

&lt;h3 id=&quot;更新令牌&quot;&gt;更新令牌&lt;/h3&gt;

&lt;p&gt;如果用户访问的时候，客户端的”访问令牌”已经过期，则需要使用”更新令牌”申请一个新的访问令牌。&lt;/p&gt;

&lt;p&gt;客户端发出更新令牌的HTTP请求，包含以下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;granttype：表示使用的授权模式，此处的值固定为”refreshtoken”，必选项。&lt;/li&gt;
  &lt;li&gt;refresh_token：表示早前收到的更新令牌，必选项。&lt;/li&gt;
  &lt;li&gt;scope：表示申请的授权范围，不可以超出上一次申请的范围，如果省略该参数，则表示与上一次一致。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /token HTTP/1.1
Host: server.example.com
Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
Content-Type: application/x-www-form-urlencoded

grant_type=refresh_token&amp;amp;refresh_token=tGzv3JOkF0XG5Qx2TlKW
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 24 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/24/oauth2/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/24/oauth2/</guid>
        
        <category>web开发</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>「转载」JSON Web Token(JWT)</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自&lt;a href=&quot;http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html&quot;&gt;JSON Web Token 入门教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JSON Web Token（缩写 JWT）是目前最流行的跨域认证解决方案，本文介绍它的原理和用法。&lt;/p&gt;

&lt;h3 id=&quot;跨域认证的问题&quot;&gt;跨域认证的问题&lt;/h3&gt;

&lt;p&gt;互联网服务离不开用户认证。一般流程是下面这样。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户向服务器发送用户名和密码。&lt;/li&gt;
  &lt;li&gt;服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。&lt;/li&gt;
  &lt;li&gt;服务器向用户返回一个 session_id，写入用户的 Cookie。&lt;/li&gt;
  &lt;li&gt;用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。&lt;/li&gt;
  &lt;li&gt;服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这种模式的问题在于，扩展性（scaling）不好。单机当然没有问题，如果是服务器集群，或者是跨域的服务导向架构，就要求 session 数据共享，每台服务器都能够读取 session。&lt;/p&gt;

&lt;p&gt;举例来说，A 网站和 B 网站是同一家公司的关联服务。现在要求，用户只要在其中一个网站登录，再访问另一个网站就会自动登录，请问怎么实现？&lt;/p&gt;

&lt;p&gt;一种解决方案是 session 数据持久化，写入数据库或别的持久层。各种服务收到请求后，都向持久层请求数据。这种方案的优点是架构清晰，缺点是工程量比较大。另外，持久层万一挂了，就会单点失败。&lt;/p&gt;

&lt;p&gt;另一种方案是服务器索性不保存 session 数据了，所有数据都保存在客户端，每次请求都发回服务器。JWT 就是这种方案的一个代表。&lt;/p&gt;

&lt;h3 id=&quot;jwt-的原理&quot;&gt;JWT 的原理&lt;/h3&gt;

&lt;p&gt;JWT 的原理是，服务器认证以后，生成一个 JSON 对象，发回给用户，就像下面这样。&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;姓名&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;张三&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;角色&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;管理员&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;到期时间&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2018年7月1日0点0分&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以后，用户与服务端通信的时候，都要发回这个 JSON 对象。服务器完全只靠这个对象认定用户身份。为了防止用户篡改数据，服务器在生成这个对象的时候，会加上签名（详见后文）。&lt;/p&gt;

&lt;p&gt;服务器就不保存任何 session 数据了，也就是说，服务器变成无状态了，从而比较容易实现扩展。&lt;/p&gt;

&lt;h3 id=&quot;jwt-的数据结构&quot;&gt;JWT 的数据结构&lt;/h3&gt;

&lt;p&gt;实际的 JWT 大概就像下面这样。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-02-24-jwt/1.jpg&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-02-24-jwt/1.jpg&quot; alt=&quot;1.jpg&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;它是一个很长的字符串，中间用点（.）分隔成三个部分。注意，JWT 内部是没有换行的，这里只是为了便于展示，将它写成了几行。&lt;/p&gt;

&lt;p&gt;JWT 的三个部分依次如下。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Header（头部）&lt;/li&gt;
  &lt;li&gt;Payload（负载）&lt;/li&gt;
  &lt;li&gt;Signature（签名）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;写成一行，就是下面的样子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Header.Payload.Signature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-02-24-jwt/2.jpg&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-02-24-jwt/2.jpg&quot; alt=&quot;2.jpg&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下面依次介绍这三个部分。&lt;/p&gt;

&lt;h4 id=&quot;header&quot;&gt;Header&lt;/h4&gt;

&lt;p&gt;Header 部分是一个 JSON 对象，描述 JWT 的元数据，通常是下面的样子。&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HS256&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;typ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JWT&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面代码中，alg属性表示签名的算法（algorithm），默认是 HMAC SHA256（写成 HS256）；typ属性表示这个令牌（token）的类型（type），JWT 令牌统一写为JWT。&lt;/p&gt;

&lt;p&gt;最后，将上面的 JSON 对象使用 Base64URL 算法（详见后文）转成字符串。&lt;/p&gt;

&lt;h5 id=&quot;payload&quot;&gt;Payload&lt;/h5&gt;

&lt;p&gt;Payload 部分也是一个 JSON 对象，用来存放实际需要传递的数据。JWT 规定了7个官方字段，供选用。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;iss (issuer)：签发人&lt;/li&gt;
  &lt;li&gt;exp (expiration time)：过期时间&lt;/li&gt;
  &lt;li&gt;sub (subject)：主题&lt;/li&gt;
  &lt;li&gt;aud (audience)：受众&lt;/li&gt;
  &lt;li&gt;nbf (Not Before)：生效时间&lt;/li&gt;
  &lt;li&gt;iat (Issued At)：签发时间&lt;/li&gt;
  &lt;li&gt;jti (JWT ID)：编号&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了官方字段，你还可以在这个部分定义私有字段，下面就是一个例子。&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John Doe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意，JWT 默认是不加密的，任何人都可以读到，所以不要把秘密信息放在这个部分。&lt;/p&gt;

&lt;p&gt;这个 JSON 对象也要使用 Base64URL 算法转成字符串。&lt;/p&gt;

&lt;h5 id=&quot;signature&quot;&gt;Signature&lt;/h5&gt;

&lt;p&gt;Signature 部分是对前两部分的签名，防止数据篡改。&lt;/p&gt;

&lt;p&gt;首先，需要指定一个密钥（secret）。这个密钥只有服务器才知道，不能泄露给用户。然后，使用 Header 里面指定的签名算法（默认是 HMAC SHA256），按照下面的公式产生签名。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HMACSHA256(
  base64UrlEncode(header) + &quot;.&quot; +
  base64UrlEncode(payload),
  secret)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;算出签名以后，把 Header、Payload、Signature 三个部分拼成一个字符串，每个部分之间用”点”（.）分隔，就可以返回给用户。&lt;/p&gt;

&lt;h5 id=&quot;base64url&quot;&gt;Base64URL&lt;/h5&gt;

&lt;p&gt;前面提到，Header 和 Payload 串型化的算法是 Base64URL。这个算法跟 Base64 算法基本类似，但有一些小的不同。&lt;/p&gt;

&lt;p&gt;JWT 作为一个令牌（token），有些场合可能会放到 URL（比如 api.example.com/?token=xxx）。Base64 有三个字符+、/和=，在 URL 里面有特殊含义，所以要被替换掉：=被省略、+替换成-，/替换成_ 。这就是 Base64URL 算法。&lt;/p&gt;

&lt;h3 id=&quot;jwt-的使用方式&quot;&gt;JWT 的使用方式&lt;/h3&gt;

&lt;p&gt;客户端收到服务器返回的 JWT，可以储存在 Cookie 里面，也可以储存在 localStorage。&lt;/p&gt;

&lt;p&gt;此后，客户端每次与服务器通信，都要带上这个 JWT。你可以把它放在 Cookie 里面自动发送，但是这样不能跨域，所以更好的做法是放在 HTTP 请求的头信息Authorization字段里面。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Authorization: Bearer &amp;lt;token&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;另一种做法是，跨域的时候，JWT 就放在 POST 请求的数据体里面。&lt;/p&gt;

&lt;h3 id=&quot;jwt-的几个特点&quot;&gt;JWT 的几个特点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;JWT 默认是不加密，但也是可以加密的。生成原始 Token 以后，可以用密钥再加密一次。&lt;/li&gt;
  &lt;li&gt;JWT 不加密的情况下，不能将秘密数据写入 JWT。&lt;/li&gt;
  &lt;li&gt;JWT 不仅可以用于认证，也可以用于交换信息。有效使用 JWT，可以降低服务器查询数据库的次数。&lt;/li&gt;
  &lt;li&gt;JWT 的最大缺点是，由于服务器不保存 session 状态，因此无法在使用过程中废止某个 token，或者更改 token 的权限。也就是说，一旦 JWT 签发了，在到期之前就会始终有效，除非服务器部署额外的逻辑。&lt;/li&gt;
  &lt;li&gt;JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT 的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。&lt;/li&gt;
  &lt;li&gt;为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;六、参考链接&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jwt.io/introduction/&quot;&gt;Introduction to JSON Web Tokens&lt;/a&gt;， by Auth0&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@bryanmanuele/sessionless-authentication-withe-jwts-with-node-express-passport-js-69b059e4b22c&quot;&gt;Sessionless Authentication using JWTs (with Node + Express + Passport JS)&lt;/a&gt;, by Bryan Manuele&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dwyl/learn-json-web-tokens/blob/master/README.md&quot;&gt;Learn how to use JSON Web Tokens&lt;/a&gt;, by dwyl&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 24 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/24/jwt/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/24/jwt/</guid>
        
        <category>web开发</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>多平台任务管理工具 - Taskwarrior</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Taskwarrior是一个免费、开源通过命令行来做任务管理的工具。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;

&lt;h5 id=&quot;ubuntu&quot;&gt;Ubuntu&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install taskwarrior&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;mac-os-x&quot;&gt;Mac OS X&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install task&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;win10&quot;&gt;Win10&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install task&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;windows其他版本&quot;&gt;Windows其他版本&lt;/h5&gt;

&lt;p&gt;通过Cygwin安装&lt;/p&gt;

&lt;h3 id=&quot;同步&quot;&gt;同步&lt;/h3&gt;

&lt;p&gt;可以通过&lt;a href=&quot;https://freecinc.com/generated_keys&quot;&gt;freecinc&lt;/a&gt;来进行同步。&lt;/p&gt;

&lt;p&gt;按照里面的步骤即可，需要注意的事，每次访问都会生成新的key，所以需要在第一次访问，把网页保存下来，其他设备都使用保存下来的网页即可。&lt;/p&gt;

&lt;h3 id=&quot;使用&quot;&gt;使用&lt;/h3&gt;

&lt;p&gt;具体的详细文档，可参考&lt;a href=&quot;https://taskwarrior.org/docs/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;显示&quot;&gt;显示&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;添加&quot;&gt;添加&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task add 任务名 [pro:工程名] [tag:标签名或简写为+][due:到期时间] [pri:优先级] [dep:依赖任务id]&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;开始结束删除&quot;&gt;开始/结束/删除&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task 任务id start/done/del&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;统计&quot;&gt;统计&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task sum&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task ghistory&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task calendar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task burndown.daily&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 24 Jan 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/01/24/task/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/01/24/task/</guid>
        
        <category>精进</category>
        
        
      </item>
    
      <item>
        <title>成为人脉管理高手</title>
        <description>&lt;h3 id=&quot;可视化盘点自己的人脉&quot;&gt;可视化盘点自己的人脉&lt;/h3&gt;

&lt;p&gt;有一个理论称为六度理论。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;世界人不论你想认识谁，只要通过六个人就可以认识到。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在开展六度人脉时，你首先需要明白的两点： 
第一：你的目标人物是谁？&lt;br /&gt;
第二：让你的人脉圈多元化&lt;/p&gt;

&lt;h5 id=&quot;四步追问法&quot;&gt;四步追问法&lt;/h5&gt;

&lt;p&gt;在你想要认识某一位人物之前，不妨先自己回答这四个问题，当你清晰明白了自己到动机，你就知道你的目标人物是谁？该从哪个方向着手。&lt;/p&gt;

&lt;p&gt;1、你想做什么？&lt;br /&gt;
2、你为谁而做？&lt;br /&gt;
3、他们需要什么？&lt;br /&gt;
4、因为你，他们有什么改变？&lt;/p&gt;

&lt;h5 id=&quot;人脉归档表&quot;&gt;人脉归档表&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-01-13-management-of-connections/1.jpg&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-01-13-management-of-connections/1.jpg&quot; alt=&quot;1.jpg&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;营造六大生态圈&quot;&gt;营造【六大生态圈】&lt;/h5&gt;

&lt;p&gt;1、与你兴趣爱好的圈&lt;br /&gt;
2、工作相关：客户、供应商、竞争对手等等&lt;br /&gt;
3、政府：去了解宏观政策&lt;br /&gt;
4、金融：与金钱做朋友&lt;br /&gt;
5、媒体：有助于品牌、公共危机&lt;br /&gt;
6、社区：能让你更接地气&lt;/p&gt;

&lt;h5 id=&quot;155人的黄金人脉圈&quot;&gt;155人的黄金人脉圈&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;命友（5人）&lt;/strong&gt;  &lt;br /&gt;
我们和这五个人，彼此&lt;strong&gt;分享生命&lt;/strong&gt;，我们是对方一辈子的铁杆拉拉队。这5个人可以是亲人，也可以是闺蜜或哥们儿。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;密友（50人）&lt;/strong&gt;&lt;br /&gt;
有&lt;strong&gt;强烈吸引&lt;/strong&gt;你的地方，原因可能是他喜欢你（这是排名第一的原因）、你们个性相似、他有智慧、他有专业能力。
想和他们走的亲密，要努力&lt;strong&gt;为他们创造价值&lt;/strong&gt;。&lt;br /&gt;
你们的联系频率至少&lt;strong&gt;每周一次&lt;/strong&gt;， 比如微信点赞，微博私信，喝喝咖啡，约着一起打羽毛球，等等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好友100人&lt;/strong&gt;&lt;br /&gt;
联系频率&lt;strong&gt;每月一次&lt;/strong&gt;，与他相关的&lt;strong&gt;重大事件&lt;/strong&gt;发生时，包括节日、生日等等，一定要联系。&lt;/p&gt;

&lt;h3 id=&quot;维护和升级长久到有益&quot;&gt;维护和升级长久到有益&lt;/h3&gt;

&lt;h5 id=&quot;联系人全息背景卡&quot;&gt;联系人全息背景卡&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-01-13-management-of-connections/2.jpg&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-01-13-management-of-connections/2.jpg&quot; alt=&quot;2.jpg&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;建立终生有效的关系&quot;&gt;建立终生有效的关系&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;1、欣赏&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;第一步、你赞美别人时的词汇不应该是“好”“棒”“颜值高”等，去看看同义词词典，那里有很多更细化的同义词。你的赞美要特别、要生动、要精准，比如“玉树临风”“IT界徐静蕾”“楚楚动人”等。&lt;br /&gt;
第二步、将赞美埋伏在句子里，频繁使用，并脱口而出。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、分享&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;首先，你透露的一个关于你的&lt;strong&gt;小秘密&lt;/strong&gt;，仿佛是送给对方的一份亲密礼物。 （注意，只袒露小缺点。 如果刚刚接触，你就告诉对方，你曾被勒令退学，或婚内出轨，他会迅速失去对你的好感。）&lt;br /&gt;
另外，这里的秘密还包括你们俩的一些私密的玩笑、用语等等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3、陪伴&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在你和他交往过程中，要跳出默认的初始类别，找到其他方面的类别，做到持续的高质量的陪伴。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4、推荐&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;你的推荐能不能带着他做新的尝试，给他意想不到的体验？&lt;/p&gt;

&lt;p&gt;如果他有点宅，你约他去漂流。如果他爱体育，你约他去音乐会感受一下。&lt;br /&gt;
我是个生活比较简单的人，所以我永远记得带我去首次体验全身spa的那位闺蜜。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5、支持&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;别人向你寻求支持的时候，如果你没有答案，请你至少在你的人脉圈里，挑出五个可能有答案的朋友，帮他问问。&lt;/p&gt;

&lt;p&gt;第一类：策略支持，这些文章能帮他们从新的认知角度分析问题、解决问题；&lt;br /&gt;
第二类：资讯支持，增加他新的谈资，尤其是那些反直觉，反预期的信息；&lt;br /&gt;
第三类：情感支持，这些文章能够精准地帮他喊出他心中的想法，让他有共鸣。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6、保护&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个动作很厉害。 让对方感觉到：“一只温暖的手拍在了我的肩膀上”。&lt;/p&gt;

&lt;h3 id=&quot;5个网络工具帮你联系上你想找的那个人&quot;&gt;5个网络工具，帮你联系上你想找的那个人&lt;/h3&gt;

&lt;h5 id=&quot;微博&quot;&gt;微博&lt;/h5&gt;

&lt;p&gt;你可以直接给大V私信，观察他的个性域名，可能是一个有意义的名字，也可能是你看不懂的字母加数字组合，有趣的是，很有可能这就是他的微信号或者是QQ号。&lt;/p&gt;

&lt;h5 id=&quot;公司主页&quot;&gt;公司主页&lt;/h5&gt;

&lt;p&gt;一般会找到当地公司到地址和电话。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;比如，小米官网上显示的邮箱地址是：shouquanhezuo@xiaomi.com。那不难推断，小米的员工们的邮箱地址都是以@xiaomi.com 结尾的。如果你想找出小米公司里某位大佬的邮箱，你可以百度一下这个邮箱后缀，结果会跳出小米公司别的同事的邮箱地址，根据这些邮箱地址，你很容易能找到规律。你发现，它们的前缀都是用拼音的全称构成，姓在前，名在后，姓和名中间没有符号。 这下，你要找的那位大咖的邮箱地址不是已经被你推导出来了吗？退一步讲，如果你用邮箱后缀，百度之后，找不到这家公司任何人的个人工作邮箱地址，那就猜测一下吧。
这三个网站验证一下你猜测的邮箱地址中哪些是正确的：
&lt;a href=&quot;www.mailtester.com&quot;&gt;www.mailtester.com&lt;/a&gt;
&lt;a href=&quot;www.verifyemailaddress.org&quot;&gt;www.verifyemailaddress.org&lt;/a&gt;
&lt;a href=&quot;https://verify-email.org&quot;&gt;https://verify-email.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;邮件模板&quot;&gt;邮件模板&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;你是谁&lt;/li&gt;
  &lt;li&gt;你仰慕他&lt;/li&gt;
  &lt;li&gt;你能给他带来价值&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;创造至少3次见面机会&quot;&gt;创造至少3次见面机会&lt;/h5&gt;

&lt;p&gt;只见一次面，聊9分钟，不如分开三次见面，每次聊3分钟。反复曝光，会增加你的积极形象，人们更喜欢他们熟悉的东西。他记住你了，就等于他选择了你。&lt;/p&gt;

&lt;p&gt;重要人物经常出现在这么几个重要场合：开业典礼或周年庆典活动；行业峰会；产品说明会、发布会；TED演讲；艺术沙龙；热销作家见面会，等等。&lt;/p&gt;

&lt;p&gt;并且，你的目标人物所处的生态圈也会受到地理要素的影响。 比如，北京的政治圈，深圳的科技圈，上海的外企圈。&lt;/p&gt;

&lt;p&gt;另外，高尔夫球场、五星宾馆、高级俱乐部、银行的VIP客户部，都可能是大咖常出现的地方。 你如果有在这些地方工作的联系人，这是很宝贵的资源，请他们给你提供信息，让你适时地出现在这些地方。&lt;/p&gt;

&lt;p&gt;如果你了解到自己的某一类目标人物可能会出席某些活动， 你还可以积极参与其中做志愿者。当你在这些活动中提供高质量的服务时，他自然会注意到你。&lt;/p&gt;

&lt;p&gt;另外， 你还可以利用你的工作平台，去创造与大咖接触的机会。 比如代表公司参加各种活动，获得接触他们的机会。&lt;/p&gt;

&lt;p&gt;或者，联系主办方，表示有兴趣做此类活动的赞助方，利用这次机会去现场了解一下情况。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主动创造和目标人物见面的机会，这是一次高级的考验，考验你的勇气和智慧。&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;多角度尝试百度搜索&quot;&gt;多角度尝试百度搜索&lt;/h5&gt;

&lt;p&gt;除了百度网页，你也可以试一试图片搜索和文库搜索，有时大V在哪里讲课后上传上去的PPT会遗留下邮箱或者是个人联系方式哦。&lt;/p&gt;

&lt;h5 id=&quot;天眼查&quot;&gt;天眼查&lt;/h5&gt;

&lt;p&gt;天眼查是一个APP，可以帮助你挖掘到商业信息。&lt;/p&gt;

&lt;h5 id=&quot;领英&quot;&gt;领英&lt;/h5&gt;

&lt;p&gt;很多人在领英上会直接放上自己的微信公众号。如果你想要找外国人的信息，可以去这个网站直接搜索：rocketreach.co&lt;/p&gt;

&lt;h3 id=&quot;让新朋友喜欢你愿意帮你&quot;&gt;让新朋友喜欢你，愿意帮你&lt;/h3&gt;

&lt;p&gt;3个方法可以让对方对你留下&lt;strong&gt;积极印象&lt;/strong&gt;：&lt;br /&gt;
1、找到他的需求点，贡献你的价值。   &lt;br /&gt;
2、把你或你的目标放在更宏大的背景当中，吸引他的支持。  &lt;br /&gt;
3、聊些长远的发展，让对方觉得你是一个有长期交往价值的人。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;24小时内再次互动&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;可以通过邮件沟通，模板如下：
首先，感谢他和你交谈，邀请他和你保持联系；
其次，提供一些对他有价值的东西。可以是某条链接，某个他可以联系的人，或某条信息。
接着，再次给出自己完整的联系方式，比如手机号、微信号等等。
最后，发出再次见面的邀请。&lt;/p&gt;

&lt;p&gt;示例：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;很高兴在昨天的活动中认识了您，您关于各地文化活动开幕式的专业点评，让我印象深刻。
我记得您提到贵公司马上要承办本市文化节的开幕式，主题是让文化和科技互动。我今天正好看到一则新闻，西安1374架无人机在国际文化节做的光影盛宴，用这个代替焰火，很壮观，也很环保。这里是链接：&lt;strong&gt;**&lt;/strong&gt;。
我有朋友在大疆。如果您有兴趣找赞助商，我可以帮忙连线。
南京路上有一家星巴克，离您和我上班的地方都不远，我经常在那里会朋友。请您抽空喝杯咖啡吧。我下周三四五都有时间，您看是否方便？
我的电话是&lt;strong&gt;**&lt;/strong&gt;。
期待和您有更多的交流。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;如何优雅的求助&quot;&gt;如何优雅的求助&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1、寻找成熟的时机&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;套用肯尼迪的那句话&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“不要问别人能为我们做什么，要先问自己能为别人做什么。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;全球最大的商界人脉组织BNI的指导原则是 “付出者收获”。&lt;/p&gt;

&lt;p&gt;所以，不同的社交专家给出的指导很类似，有的是3:2原则，你要帮助他至少三次，才可以求助两次，有的是6:4原则，你要帮助他六次，才可以求助四次。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、求助时，用巧妙的提问，唤起他那种“对小弟”的情怀&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;谁不爱过去那个青涩的、有些野心的，甚至莽撞的自己呢？用你巧妙的提问，让他们和过去的自己相遇。&lt;/p&gt;

&lt;p&gt;你还可以这么问：&lt;br /&gt;
“说起来，您当年好像也有一段类似的经历，请教一下，当时的您是怎样应对的呢？”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3、求助时，告而不求&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果是面对面的求助，你可以“告之而不请求”，这是一种足够委婉的请求方法， 让对方零压力。&lt;/p&gt;

&lt;p&gt;我向人求助的时候，不会一上去就问“你能赞助我吗？” 而是说：&lt;br /&gt;
“我有一家管理咨询公司，专提供跨文化沟通的培训和咨询服务。我们在上海和深圳都有办公室，我们正在寻找合作伙伴，将业务扩展到美国。”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4、不求一步到位，而是分步实现&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;影响力专家罗伯特·西奥迪尼把这个叫做&lt;strong&gt;持续法则&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;当对方回应了你的一个小小请求后，他会倾向于持续地兑现帮助你的承诺，你也持续地向他做进展汇报。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;帮忙从小到大，一步一步，可以是这样的：从一个微信名片的推送，或对你的一句话建议开始，然后，是10分钟的电话，然后，是20分钟的见面，等等。&lt;/p&gt;

&lt;p&gt;一个有实力的人，可以把一个又一个的小机会，撬开成一个又一个的大机会。小机会如果利用得好，会形成神奇的马太效应。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5、轻松一些，给他退路&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;求助的同时，请表达出： 如果您没有时间，或不感兴趣，我完全理解。 让他有主动选择权，而不是把他放在一个不得不作出回应的境地。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6、让对方用最方便的方式帮到你&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;优雅地求助不是低人一等，不是自尊缺失，不是地位缺失或独立性缺失。你要成就大事，必须有求助的动作。&lt;/p&gt;

&lt;p&gt;优雅求助，不仅不会损耗你们的关系，还会加深关系。&lt;/p&gt;

&lt;p&gt;人们不仅在观察别人，也在观察自己。当我们发现自己为某人做了一件事情，并且不求当即的回报，那么自我对话会告诉我们，这意味着我们喜欢他。&lt;/p&gt;

&lt;h3 id=&quot;通过会议和社群加速社交效率&quot;&gt;通过会议和社群，加速社交效率&lt;/h3&gt;

&lt;h5 id=&quot;参加会议的十一条行动清单&quot;&gt;参加会议的十一条行动清单&lt;/h5&gt;

&lt;p&gt;会议前的行动清单：&lt;br /&gt;
1、选定正确的、高手云集的会议。 &lt;br /&gt;
2、想办法获得邀请。  &lt;br /&gt;
3、拿到演讲者名单和参与者名单，做好调研。&lt;/p&gt;

&lt;p&gt;会议中的行动清单:&lt;br /&gt;
1.早到十分钟，获得现场掌控感。&lt;br /&gt;
2.以圈内人的衣着、气质融入会场。&lt;br /&gt;
3.开启你的观察力，找出谁是核心人物。&lt;br /&gt;
4.让自己被看到，被听到。&lt;br /&gt;
5.不要现场兜售你的业务，而是切换成，为他人解决问题的姿态。&lt;br /&gt;
6.用“播种”的方式来结束谈话。&lt;/p&gt;

&lt;p&gt;会议后的行动清单：&lt;br /&gt;
1.制作联系人背景全息卡片。&lt;br /&gt;
2.24小时内再次联络。&lt;/p&gt;

&lt;h5 id=&quot;线上寻找和创立社群&quot;&gt;线上寻找和创立社群&lt;/h5&gt;

&lt;p&gt;1.这个群的主题越小众，黏性越大&lt;br /&gt;
2.不要盲目追求规模，要把控好加入的标准和规则&lt;/p&gt;

&lt;h3 id=&quot;更新人脉的三个原则&quot;&gt;更新人脉的三个原则&lt;/h3&gt;

&lt;h5 id=&quot;体面地离开老朋友&quot;&gt;体面地离开老朋友&lt;/h5&gt;

&lt;p&gt;如果你发现这155人中，有人总是过多地叹息、吐槽。你每次都不由自主地跟随他们一起，关注到生活的灰暗面，于是你也不停地叹息，就像气体从气球中漏出来。这样的朋友不仅没有给你赋能，反而在耗尽你的能量。那么，请把他们放在155人黄金圈之外。&lt;/p&gt;

&lt;p&gt;当你从一个人脉圈中退出，加入新人脉圈的时候，该怎样给这个背影呢？&lt;br /&gt;
我的建议是， 要给&lt;strong&gt;一个体面而华丽的背影&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;我第一次换工作时，当时很年轻，只顾着奔赴更好的前程，忽略了老领导，至今追悔莫及。那个时候，我应该向他表达最高程度的感激。 哪怕你觉得老领导待你不公，但是，你也在他这里获得了难得的成长。表达感激之后，这样的话要记得说：&lt;br /&gt;
“刘总，我会一直在这个行业的，相信咱们未来还会有交集，我很期待啊！如果我能在任何方面为您尽些微薄之力，不管是职业上，还是生活上，请一定让我第一时间知道。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;不断流动的人脉圈才是健康的。所谓战略性管理人脉，不是积累联系名单，而是不断更新那个最适合你当下的状态的155人。&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;遇到损友分三步走&quot;&gt;遇到损友分三步走&lt;/h5&gt;

&lt;p&gt;第一步， 你问问自己，是不是已经对他们表达了你的友善&lt;/p&gt;

&lt;p&gt;第二步， 如果你之前确实从未对他们表达过友善，我建议你补上这个动作，因为你想让别人怎样对待你，你就应该怎样对待他人。&lt;/p&gt;

&lt;p&gt;第三步， 如果一段时间之后，他转变了态度，想过来和你交朋友，那就尽释前嫌。&lt;/p&gt;

&lt;h5 id=&quot;两个标准甄选新朋友&quot;&gt;两个标准甄选新朋友&lt;/h5&gt;

&lt;p&gt;第一点，有温度。 有温度的人，能让周围的人很自在，很开心。&lt;/p&gt;

&lt;p&gt;第二点，有见识。&lt;/p&gt;

&lt;h3 id=&quot;在圈子之间串联起新格局&quot;&gt;在圈子之间，串联起新格局&lt;/h3&gt;

&lt;h5 id=&quot;串联者的四个特征&quot;&gt;串联者的四个特征&lt;/h5&gt;

&lt;p&gt;第一，他们知道自己的价值不可估量。&lt;/p&gt;

&lt;p&gt;第二，串联者是“资源盈余”思维，他的身份是“问题的终极解决者”。&lt;/p&gt;

&lt;p&gt;第三，串联者的终生习惯是，持续有规律地帮助缩短物理距离或社交距离。&lt;/p&gt;

&lt;p&gt;第四，串联者认识新朋友的目的就是为了实现更多的串联。&lt;/p&gt;

&lt;h5 id=&quot;打造铁三角关系&quot;&gt;打造铁三角关系。&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-01-13-management-of-connections/4.jpg&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-01-13-management-of-connections/4.jpg&quot; alt=&quot;4.jpg&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;为他人引荐注意点&quot;&gt;为他人引荐注意点&lt;/h5&gt;

&lt;p&gt;1.为双方提供可担保的可靠人品。
2.有搜寻和甄选的能力。
3.记得先问问他们是不是已经相互认识了。
4.你需要跟踪你的每一次推荐。
5.口头推荐完以后，别忘了书面也表达一下。&lt;/p&gt;

&lt;h5 id=&quot;被引荐注意点&quot;&gt;被引荐注意点&lt;/h5&gt;

&lt;p&gt;1.被推荐后请立即采取行动，这是基本礼节。&lt;/p&gt;

&lt;p&gt;2.被引荐后，和对方搭上了线，不能把推荐人忘得一干二净，一定要表示感谢，并向他更新进展。&lt;/p&gt;

</description>
        <pubDate>Sun, 13 Jan 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/01/13/management-of-connections/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/01/13/management-of-connections/</guid>
        
        <category>精进</category>
        
        
      </item>
    
  </channel>
</rss>

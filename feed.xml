<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ben Blog</title>
    <description>一个小白的成长学习历程</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 27 Mar 2019 16:38:01 +0800</pubDate>
    <lastBuildDate>Wed, 27 Mar 2019 16:38:01 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>「转载」提问的智慧</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自 &lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way&quot;&gt;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;

&lt;p&gt;在&lt;a href=&quot;http://www.catb.org/~esr/faqs/hacker-howto.html&quot;&gt;黑客&lt;/a&gt;的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。&lt;/p&gt;

&lt;p&gt;不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件&lt;strong&gt;好事&lt;/strong&gt;；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。&lt;/p&gt;

&lt;p&gt;首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，”好问题！”是诚挚的大力称赞。&lt;/p&gt;

&lt;p&gt;尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。&lt;/p&gt;

&lt;p&gt;我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 失败者（撸瑟） （由于历史原因，我们有时把它拼作 lusers）。&lt;/p&gt;

&lt;p&gt;我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。&lt;/p&gt;

&lt;p&gt;我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答赢家（winner）的问题。&lt;/p&gt;

&lt;p&gt;如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。&lt;/p&gt;

&lt;p&gt;所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 – 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。&lt;/p&gt;

&lt;p&gt;如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 – 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。&lt;/p&gt;

&lt;h3 id=&quot;在提问之前&quot;&gt;在提问之前&lt;/h3&gt;

&lt;p&gt;在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;尝试在你准备提问的论坛的旧文章中搜索答案。&lt;/li&gt;
  &lt;li&gt;尝试上网搜索以找到答案。&lt;/li&gt;
  &lt;li&gt;尝试阅读手册以找到答案。&lt;/li&gt;
  &lt;li&gt;尝试阅读常见问题文件（FAQ）以找到答案。&lt;/li&gt;
  &lt;li&gt;尝试自己检查或试验以找到答案。&lt;/li&gt;
  &lt;li&gt;向你身边的强者朋友打听以找到答案。&lt;/li&gt;
  &lt;li&gt;如果你是程序开发者，请尝试阅读源代码以找到答案。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所&lt;strong&gt;学到&lt;/strong&gt;的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。&lt;/p&gt;

&lt;p&gt;运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（既搜索&lt;a href=&quot;http://groups.google.com/&quot;&gt;Google 论坛&lt;/a&gt;，也搜索网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 我在 Google 中搜过下列句子但没有找到什么有用的东西 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。&lt;/p&gt;

&lt;p&gt;别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。&lt;/p&gt;

&lt;p&gt;准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。&lt;/p&gt;

&lt;p&gt;小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着蠢问题…， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。&lt;/p&gt;

&lt;p&gt;绝不要自以为&lt;strong&gt;够格&lt;/strong&gt;得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去&lt;strong&gt;挣到&lt;/strong&gt;一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。&lt;/p&gt;

&lt;p&gt;另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。谁能给点提示？、我的这个例子里缺了什么？以及我应该检查什么地方比请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。&lt;/p&gt;

&lt;h3 id=&quot;当你提问时&quot;&gt;当你提问时&lt;/h3&gt;

&lt;h5 id=&quot;慎选提问的论坛&quot;&gt;慎选提问的论坛&lt;/h5&gt;

&lt;p&gt;小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在与主题不合的论坛上贴出你的问题。&lt;/li&gt;
  &lt;li&gt;在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。&lt;/li&gt;
  &lt;li&gt;在太多的不同新闻群组上重复转贴同样的问题（cross-post）。&lt;/li&gt;
  &lt;li&gt;向既非熟人也没有义务解决你问题的人发送私人电邮。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。&lt;/p&gt;

&lt;p&gt;因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括&lt;strong&gt;阅读&lt;/strong&gt; FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。&lt;/p&gt;

&lt;p&gt;向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 – 如果你不确定，那就向别处发送，或者压根别发。&lt;/p&gt;

&lt;p&gt;在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。&lt;/p&gt;

&lt;p&gt;别像机关枪似的一次”扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。&lt;/p&gt;

&lt;p&gt;搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。&lt;/p&gt;

&lt;p&gt;一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。&lt;/p&gt;

&lt;p&gt;可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。&lt;/p&gt;

&lt;h5 id=&quot;stack-overflow&quot;&gt;Stack Overflow&lt;/h5&gt;

&lt;p&gt;搜索，然后 在 Stack Exchange 问。&lt;/p&gt;

&lt;p&gt;近年来，Stack Exchange community 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。&lt;/p&gt;

&lt;p&gt;因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。&lt;/p&gt;

&lt;p&gt;Stack Exchange 已经成长到&lt;a href=&quot;http://stackexchange.com/sites&quot;&gt;超过一百个网站&lt;/a&gt;，以下是最常用的几个站：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。&lt;/li&gt;
  &lt;li&gt;Stack Overflow 是问写程序有关的问题。&lt;/li&gt;
  &lt;li&gt;Server Fault 是问服务器和网管相关的问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;网站和-irc-论坛&quot;&gt;网站和 IRC 论坛&lt;/h5&gt;

&lt;p&gt;本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。&lt;/p&gt;

&lt;p&gt;事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用&lt;strong&gt;我们的&lt;/strong&gt;版本”。&lt;/p&gt;

&lt;p&gt;在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。&lt;/p&gt;

&lt;p&gt;通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。&lt;/p&gt;

&lt;p&gt;在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。&lt;/p&gt;

&lt;h5 id=&quot;第二步使用项目邮件列表&quot;&gt;第二步，使用项目邮件列表&lt;/h5&gt;

&lt;p&gt;当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。&lt;/li&gt;
  &lt;li&gt;向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。&lt;/li&gt;
  &lt;li&gt;大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。&lt;/li&gt;
  &lt;li&gt;如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果一个项目既有”使用者” 也有”开发者”（或”黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向”使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。&lt;/p&gt;

&lt;p&gt;然而，如果你&lt;strong&gt;确信&lt;/strong&gt;你的问题很特别，而且在”使用者” 列表或论坛中几天都没有回复，可以试试前往”开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）&lt;/p&gt;

&lt;p&gt;如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。&lt;/p&gt;

&lt;h5 id=&quot;使用有意义且描述明确的标题&quot;&gt;使用有意义且描述明确的标题&lt;/h5&gt;

&lt;p&gt;在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的帮帮忙、跪求、急（更别说救命啊！！！！这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。&lt;/p&gt;

&lt;p&gt;一个好标题范例是目标 —— 差异式的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在差异部分则描述与期望的行为不一致的地方。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;蠢问题：救命啊！我的笔记本电脑不能正常显示了！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;编写&lt;code class=&quot;highlighter-rouge&quot;&gt;目标 —— 差异&lt;/code&gt;式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境和你遇到的问题。&lt;/p&gt;

&lt;p&gt;总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。&lt;/p&gt;

&lt;p&gt;如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 Re: 测试 或者 Re: 新 bug 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。&lt;/p&gt;

&lt;p&gt;对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。&lt;/p&gt;

&lt;p&gt;仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。&lt;/p&gt;

&lt;p&gt;在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你只想在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。&lt;/p&gt;

&lt;h5 id=&quot;使问题容易回复&quot;&gt;使问题容易回复&lt;/h5&gt;

&lt;p&gt;以&lt;code class=&quot;highlighter-rouge&quot;&gt;请将你的回复发送到……&lt;/code&gt;来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，换个好点的；如果是操作系统不支持这种邮件程序，&lt;a href=&quot;http://linuxmafia.com/faq/Mail/muas.html&quot;&gt;也换个好点的&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如&lt;code class=&quot;highlighter-rouge&quot;&gt;追踪此讨论串&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;有回复时发送邮件提醒&lt;/code&gt;等功能。&lt;/p&gt;

&lt;h5 id=&quot;用清晰正确精准并语法正确的语句&quot;&gt;用清晰、正确、精准并语法正确的语句&lt;/h5&gt;

&lt;p&gt;我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。&lt;/p&gt;

&lt;p&gt;正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它&lt;strong&gt;必须很&lt;/strong&gt;准确，而且有迹象表明你是在思考和关注问题。&lt;/p&gt;

&lt;p&gt;正确地拼写、使用标点和大小写，不要将&lt;code class=&quot;highlighter-rouge&quot;&gt;its&lt;/code&gt;混淆为&lt;code class=&quot;highlighter-rouge&quot;&gt;it's&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;loose&lt;/code&gt;搞成&lt;code class=&quot;highlighter-rouge&quot;&gt;lose&lt;/code&gt;或者将&lt;code class=&quot;highlighter-rouge&quot;&gt;discrete&lt;/code&gt;弄成&lt;code class=&quot;highlighter-rouge&quot;&gt;discreet&lt;/code&gt;。不要&lt;strong&gt;全部用大写&lt;/strong&gt;，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。&lt;a href=&quot;http://en.wikipedia.org/wiki/Alan_Cox&quot;&gt;Alan Cox&lt;/a&gt; 也许可以这样做，但你不行）。&lt;/p&gt;

&lt;p&gt;更白话的说，如果你写得像是个半文盲[译注：&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E5%B0%8F%E7%99%BD&quot;&gt;小白&lt;/a&gt;]，那多半得不到理睬。也不要使用即时通信中的简写或&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E7%81%AB%E6%98%9F%E6%96%87&quot;&gt;火星文&lt;/a&gt;，如将的简化为d会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。&lt;/p&gt;

&lt;p&gt;如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。&lt;/p&gt;

&lt;p&gt;如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的： [译注：以下附上原文以供使用]&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;English is not my native language; please excuse typing errors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;英文不是我的母语，请原谅我的错字或语法。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you speak $LANGUAGE, please email/PM me; I may need assistance translating my question.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;如果你说某语言，请寄信/私讯给我；我需要有人协助我翻译我的问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;I am familiar with the technical terms, but some slang expressions and idioms are difficult for me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’ve posted my question in $LANGUAGE and English. I’ll be glad to translate responses, if you only use one or the other.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;我把我的问题用某语言和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;使用易于读取且标准的文件格式发送问题&quot;&gt;使用易于读取且标准的文件格式发送问题&lt;/h5&gt;

&lt;p&gt;如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用纯文字而不是 HTML (&lt;a href=&quot;http://archive.birdhouse.org/etc/evilmail.html&quot;&gt;关闭 HTML&lt;/a&gt; 并不难）。&lt;/li&gt;
  &lt;li&gt;使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。&lt;/li&gt;
  &lt;li&gt;不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。&lt;/li&gt;
  &lt;li&gt;但是，对一些特殊的文件不要设置固定宽度（譬如日志档案拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。&lt;/li&gt;
  &lt;li&gt;在英语论坛中，不要使用Quoted-Printable MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的=20符号既难看也分散注意力，甚至有可能破坏内容的语意。&lt;/li&gt;
  &lt;li&gt;绝对，永远不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。&lt;/li&gt;
  &lt;li&gt;如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的智能引号功能 （从[选项] &amp;gt; [校订] &amp;gt; [自动校正选项]，勾选掉智能引号单选框），以免在你的邮件中到处散布垃圾字符。&lt;/li&gt;
  &lt;li&gt;在论坛，勿滥用表情符号和HTML功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。
如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的查看源代码命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;精确地描述问题并言之有物&quot;&gt;精确地描述问题并言之有物&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;仔细、清楚地描述你的问题或 Bug 的症状。&lt;/li&gt;
  &lt;li&gt;描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：&lt;code class=&quot;highlighter-rouge&quot;&gt;Fedora Core 4&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Slackware 9.1&lt;/code&gt;等）。&lt;/li&gt;
  &lt;li&gt;描述在提问前你是怎样去研究和理解这个问题的。&lt;/li&gt;
  &lt;li&gt;描述在提问前为确定问题而采取的诊断步骤。&lt;/li&gt;
  &lt;li&gt;描述最近做过什么可能相关的硬件或软件变更。&lt;/li&gt;
  &lt;li&gt;尽可能的提供一个可以&lt;code class=&quot;highlighter-rouge&quot;&gt;重现这个问题的可控环境&lt;/code&gt;的方法。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。&lt;/p&gt;

&lt;p&gt;以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。&lt;/p&gt;

&lt;p&gt;·Simon Tatham](http://www.chiark.greenend.org.uk/~sgtatham/) 写过一篇名为《&lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html&quot;&gt;如何有效的报告 Bug&lt;/a&gt;》的出色文章。强力推荐你也读一读。&lt;/p&gt;

&lt;h5 id=&quot;话不在多而在精&quot;&gt;话不在多而在精&lt;/h5&gt;

&lt;p&gt;你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。&lt;/p&gt;

&lt;p&gt;这样做的用处至少有三点。 第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加； 第二，简化问题使你更有可能得到&lt;strong&gt;有用的&lt;/strong&gt;答案； 第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。&lt;/p&gt;

&lt;h5 id=&quot;别动辄声称找到-bug&quot;&gt;别动辄声称找到 Bug&lt;/h5&gt;

&lt;p&gt;当你在使用软件中遇到问题，除非你非常、&lt;strong&gt;非常&lt;/strong&gt;的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的Bug，你应该能提供相应位置的修正或替代文件。&lt;/p&gt;

&lt;p&gt;请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前&lt;a href=&quot;#在提问之前&quot;&gt;已经做了这些，是吧&lt;/a&gt;？）。这也意味着很有可能是你弄错了而不是软件本身有问题。&lt;/p&gt;

&lt;p&gt;编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有Bug时，这尤其严重。&lt;/p&gt;

&lt;p&gt;提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是你做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。&lt;/p&gt;

&lt;h5 id=&quot;低声下气不能代替你的功课&quot;&gt;低声下气不能代替你的功课&lt;/h5&gt;

&lt;p&gt;有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：我知道我只是个可悲的新手，一个撸瑟，但…。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。&lt;/p&gt;

&lt;p&gt;别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。&lt;/p&gt;

&lt;p&gt;有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。&lt;/p&gt;

&lt;h5 id=&quot;描述问题症状而非你的猜测&quot;&gt;描述问题症状而非你的猜测&lt;/h5&gt;

&lt;p&gt;告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;蠢问题&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我在编译内核时接连遇到 SIG11 错误， 我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;聪明问题&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组）， 256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误， 但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。 所有内存都换过了，没有效果。相关部分的标准编译记录如下…。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：&lt;code class=&quot;highlighter-rouge&quot;&gt;所有的诊断专家都来自密苏里州&lt;/code&gt;。 美国国务院的官方座右铭则是：&lt;code class=&quot;highlighter-rouge&quot;&gt;让我看看&lt;/code&gt;（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：&lt;code class=&quot;highlighter-rouge&quot;&gt;我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。&lt;/code&gt;） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！&lt;/p&gt;

&lt;h5 id=&quot;按发生时间先后列出问题症状&quot;&gt;按发生时间先后列出问题症状&lt;/h5&gt;

&lt;p&gt;问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。&lt;/p&gt;

&lt;p&gt;如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，&lt;code class=&quot;highlighter-rouge&quot;&gt;多&lt;/code&gt;不等于&lt;code class=&quot;highlighter-rouge&quot;&gt;好&lt;/code&gt;。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。&lt;/p&gt;

&lt;p&gt;如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。&lt;/p&gt;

&lt;h5 id=&quot;描述目标而不是过程&quot;&gt;描述目标而不是过程&lt;/h5&gt;

&lt;p&gt;如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。&lt;/p&gt;

&lt;p&gt;经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;蠢问题&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;聪明问题&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot）， 但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第二种提问法比较聪明，你可能得到像是建议采用另一个更合适的工具的回复。&lt;/p&gt;

&lt;h5 id=&quot;别要求使用私人电邮回复&quot;&gt;别要求使用私人电邮回复&lt;/h5&gt;

&lt;p&gt;黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。&lt;/p&gt;

&lt;p&gt;当你要求私下回复时，这个过程和奖励都被中止。别这样做，让&lt;strong&gt;回复者&lt;/strong&gt;来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。&lt;/p&gt;

&lt;p&gt;这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是向我发电邮，我将为论坛归纳这些回复。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。&lt;/p&gt;

&lt;h5 id=&quot;清楚明确的表达你的问题以及需求&quot;&gt;清楚明确的表达你的问题以及需求&lt;/h5&gt;

&lt;p&gt;漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。&lt;/p&gt;

&lt;p&gt;如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。&lt;/p&gt;

&lt;p&gt;要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。&lt;/p&gt;

&lt;p&gt;所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问&lt;code class=&quot;highlighter-rouge&quot;&gt;我想更好的理解 X，可否指点一下哪有好一点说明？&lt;/code&gt;通常比问&lt;code class=&quot;highlighter-rouge&quot;&gt;你能解释一下 X 吗？&lt;/code&gt;更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。&lt;/p&gt;

&lt;h5 id=&quot;询问有关代码的问题时&quot;&gt;询问有关代码的问题时&lt;/h5&gt;

&lt;p&gt;别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：它不能工作会让你完全被忽略。只贴几十行代码，然后说一句：&lt;code class=&quot;highlighter-rouge&quot;&gt;在第七行以后，我期待它显示 &amp;lt;x&amp;gt;，但实际出现的是 &amp;lt;y&amp;gt;&lt;/code&gt;比较有可能让你得到回应。&lt;/p&gt;

&lt;p&gt;最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能&lt;strong&gt;刚好&lt;/strong&gt;展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看&lt;a href=&quot;#话不在多而在精&quot;&gt;话不在多而在精&lt;/a&gt;一节）。&lt;/p&gt;

&lt;p&gt;一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。&lt;/p&gt;

&lt;p&gt;如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。&lt;/p&gt;

&lt;h5 id=&quot;别把自己家庭作业的问题贴上来&quot;&gt;别把自己家庭作业的问题贴上来&lt;/h5&gt;

&lt;p&gt;黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。&lt;/p&gt;

&lt;p&gt;如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的使用者邮件列表或论坛中提问。尽管黑客们会看出来，但一些有经验的&lt;strong&gt;使用者&lt;/strong&gt;也许仍会给你一些提示。&lt;/p&gt;

&lt;h5 id=&quot;去掉无意义的提问句&quot;&gt;去掉无意义的提问句&lt;/h5&gt;

&lt;p&gt;避免用无意义的话结束提问，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;有人能帮我吗？&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;这有答案吗？&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;首先：如果你对问题的描述不是很好，这样问更是画蛇添足。&lt;/p&gt;

&lt;p&gt;其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：&lt;code class=&quot;highlighter-rouge&quot;&gt;没错，有人能帮你&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;不，没答案&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;一般来说，避免用 &lt;code class=&quot;highlighter-rouge&quot;&gt;是或否&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;对或错&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;有或没有&lt;/code&gt;类型的问句，除非你想得到&lt;a href=&quot;http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/questions-with-yes-or-no-answers.html&quot;&gt;是或否类型的回答&lt;/a&gt;。&lt;/p&gt;

&lt;h5 id=&quot;即使你很急也不要在标题写紧急&quot;&gt;即使你很急也不要在标题写紧急&lt;/h5&gt;

&lt;p&gt;这是你的问题，不是我们的。宣称紧急极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，&lt;code class=&quot;highlighter-rouge&quot;&gt;紧急&lt;/code&gt;这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。&lt;/p&gt;

&lt;p&gt;有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。&lt;/p&gt;

&lt;p&gt;当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如&lt;code class=&quot;highlighter-rouge&quot;&gt;紧急：帮我救救这个毛绒绒的小海豹！&lt;/code&gt;肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。&lt;/p&gt;

&lt;p&gt;如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。&lt;/p&gt;

&lt;h5 id=&quot;礼多人不怪而且有时还很有帮助&quot;&gt;礼多人不怪，而且有时还很有帮助&lt;/h5&gt;

&lt;p&gt;彬彬有礼，多用&lt;code class=&quot;highlighter-rouge&quot;&gt;请&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;谢谢您的关注&lt;/code&gt;，或&lt;code class=&quot;highlighter-rouge&quot;&gt;谢谢你的关照&lt;/code&gt;。让大家都知道你对他们花时间免费提供帮助心存感激。&lt;/p&gt;

&lt;p&gt;坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）&lt;/p&gt;

&lt;p&gt;然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。&lt;/p&gt;

&lt;p&gt;（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得&lt;code class=&quot;highlighter-rouge&quot;&gt;先谢了&lt;/code&gt;意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说&lt;code class=&quot;highlighter-rouge&quot;&gt;先谢了&lt;/code&gt;，&lt;strong&gt;然后&lt;/strong&gt;事后再对回复者表示感谢，或者换种方式表达感激，譬如用&lt;code class=&quot;highlighter-rouge&quot;&gt;谢谢你的关注&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;谢谢你的关照&lt;/code&gt;。）&lt;/p&gt;

&lt;h5 id=&quot;问题解决后加个简短的补充说明&quot;&gt;问题解决后，加个简短的补充说明&lt;/h5&gt;

&lt;p&gt;问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。&lt;/p&gt;

&lt;p&gt;最理想的方式是向最初提问的话题回复此消息，并在标题中包含&lt;code class=&quot;highlighter-rouge&quot;&gt;已修正&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;已解决&lt;/code&gt;或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串&lt;code class=&quot;highlighter-rouge&quot;&gt;问题 X&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;问题 X - 已解决&lt;/code&gt;的潜在回复者就明白不用再浪费时间了（除非他个人觉得&lt;code class=&quot;highlighter-rouge&quot;&gt;问题 X&lt;/code&gt;的有趣），因此可以利用此时间去解决其它问题。&lt;/p&gt;

&lt;p&gt;补充说明不必很长或是很深入；简单的一句&lt;code class=&quot;highlighter-rouge&quot;&gt;你好，原来是网线出了问题！谢谢大家 – Bill&lt;/code&gt;比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。&lt;/p&gt;

&lt;p&gt;对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此&lt;strong&gt;之后&lt;/strong&gt;才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。&lt;/p&gt;

&lt;p&gt;除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。&lt;/p&gt;

&lt;p&gt;至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。&lt;/p&gt;

&lt;p&gt;思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。&lt;/p&gt;

&lt;p&gt;在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。&lt;/p&gt;

&lt;h3 id=&quot;如何解读答案&quot;&gt;如何解读答案&lt;/h3&gt;

&lt;p&gt;&lt;a id=&quot;RTFM&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;rtfm-和-stfw如何知道你已完全搞砸了&quot;&gt;RTFM 和 STFW：如何知道你已完全搞砸了&lt;/h5&gt;

&lt;p&gt;有一个古老而神圣的传统：如果你收到&lt;code class=&quot;highlighter-rouge&quot;&gt;RTFM （Read The Fucking Manual）&lt;/code&gt;的回应，回答者认为&lt;strong&gt;你应该去读他妈的手册&lt;/strong&gt;。当然，基本上他是对的，你应该去读一读。&lt;/p&gt;

&lt;p&gt;RTFM 有一个年轻的亲戚。如果你收到&lt;code class=&quot;highlighter-rouge&quot;&gt;STFW（Search The Fucking Web）&lt;/code&gt;的回应，回答者认为你&lt;strong&gt;应该到他妈的网上搜索&lt;/strong&gt;。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 &lt;a href=&quot;http://lmgtfy.com/&quot;&gt;Google 是你的朋友！&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。&lt;/p&gt;

&lt;p&gt;通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;你需要的信息非常容易获得；&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;你自己去搜索这些信息比灌给你，能让你学到更多。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;你不应该因此不爽；&lt;strong&gt;依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见。&lt;/strong&gt;你应该对他祖母般的慈祥表示感谢。&lt;/p&gt;

&lt;h5 id=&quot;如果还是搞不懂&quot;&gt;如果还是搞不懂&lt;/h5&gt;

&lt;p&gt;如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。&lt;/p&gt;

&lt;p&gt;比方说，如果我回答你：&lt;code class=&quot;highlighter-rouge&quot;&gt;看来似乎是 zentry 卡住了；你应该先清除它。&lt;/code&gt;，然后，这是一个&lt;strong&gt;很糟的&lt;/strong&gt;后续问题回应：&lt;code class=&quot;highlighter-rouge&quot;&gt;zentry 是什么？&lt;/code&gt; &lt;strong&gt;好&lt;/strong&gt;的问法应该是这样：&lt;code class=&quot;highlighter-rouge&quot;&gt;哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;处理无礼的回应&quot;&gt;处理无礼的回应&lt;/h5&gt;

&lt;p&gt;很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。&lt;/p&gt;

&lt;p&gt;如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这&lt;strong&gt;没有&lt;/strong&gt;发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而&lt;strong&gt;你&lt;/strong&gt;将被视为有错的一方，这将伤害到你获取信息或帮助的机会。&lt;/p&gt;

&lt;p&gt;另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。&lt;/p&gt;

&lt;p&gt;（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会&lt;strong&gt;正常&lt;/strong&gt;交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们&lt;strong&gt;喜欢&lt;/strong&gt;我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。&lt;/p&gt;

&lt;p&gt;Jeff Bigler 的观察总结和这个相关也值得一读 (&lt;a href=&quot;http://www.mit.edu/~jcb/tact.html&quot;&gt;tact filters&lt;/a&gt;)。&lt;/p&gt;

&lt;p&gt;在下一节，我们会谈到另一个问题，当你行为不当时所会受到的冒犯。&lt;/p&gt;

&lt;h3 id=&quot;如何避免扮演失败者&quot;&gt;如何避免扮演失败者&lt;/h3&gt;

&lt;p&gt;在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。&lt;/p&gt;

&lt;p&gt;这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：&lt;/p&gt;

&lt;p&gt;熬过去，这很正常。事实上，它是有益健康且合理的。&lt;/p&gt;

&lt;p&gt;社区的标准不会自行维持，它们是通过参与者积极而&lt;strong&gt;公开地&lt;/strong&gt;执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。&lt;/p&gt;

&lt;p&gt;也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称如果你不想帮助用户就闭嘴。 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。&lt;/p&gt;

&lt;p&gt;夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。&lt;/p&gt;

&lt;p&gt;记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心&lt;strong&gt;你&lt;/strong&gt;和他的社区而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。&lt;/p&gt;

&lt;p&gt;有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是&lt;strong&gt;真的&lt;/strong&gt;会把问题搞砸。&lt;/p&gt;

&lt;p&gt;这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。&lt;/p&gt;

&lt;p&gt;也别让自己卷入口水战，最好不要理睬大多数的口水战 – 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。&lt;/p&gt;

&lt;h3 id=&quot;不该问的问题&quot;&gt;不该问的问题&lt;/h3&gt;

&lt;p&gt;以下是几个经典蠢问题，以及黑客没回答时心中所想的：&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q1&quot;&gt;我能在哪找到 X 程序或 X 资源？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q2&quot;&gt;我怎样用 X 做 Y？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q3&quot;&gt;如何设定我的 shell 提示？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q4&quot;&gt;我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q5&quot;&gt;我的程序/设定/SQL 语句没有用&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q6&quot;&gt;我的 Windows 电脑有问题，你能帮我吗？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q7&quot;&gt;我的程序不会动了，我认为系统工具 X 有问题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q8&quot;&gt;我在安装 Linux（或者 X ）时有问题，你能帮我吗？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;a href=&quot;#q9&quot;&gt;我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我能在哪找到 X 程序或 X 资源？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 Google 吗？&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我怎样用 X 做 Y？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q3&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：如何设定我的 shell 提示？？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 RTFM，然后自己去找出来。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q4&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q5&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我的{程序/设定/SQL 语句}不工作&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;你还有什么要补充的吗？&lt;/li&gt;
  &lt;li&gt;真糟糕，希望你能搞定。&lt;/li&gt;
  &lt;li&gt;这关我有什么屁事？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id=&quot;q6&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我的 Windows 电脑有问题，你能帮我吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。&lt;/p&gt;

&lt;p&gt;注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你可以问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q7&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我的程序不会动了，我认为系统工具 X 有问题&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q8&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在这儿找到使用者群组的清单）。&lt;/p&gt;

&lt;p&gt;注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 Linux 和所有被怀疑的硬件作关键词仔细搜索。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;q9&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！&lt;/p&gt;

&lt;h3 id=&quot;好问题与蠢问题&quot;&gt;好问题与蠢问题&lt;/h3&gt;

&lt;p&gt;最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;蠢问题：&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我可以在哪儿找到关于 Foonly Flurbamatic 的资料？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这种问法无非想得到 &lt;a href=&quot;#RTFM&quot;&gt;STFW&lt;/a&gt; 这样的回答。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;聪明问题：&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这个问题已经 STFW 过了，看起来他真的遇到了麻烦。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;蠢问题：&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我从 foo 项目找来的源码没法编译。它怎么这么烂？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;他觉得都是别人的错，这个傲慢自大的提问者。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;聪明问题：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？&lt;/p&gt;

&lt;p&gt;提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;蠢问题：&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我的主机板有问题了，谁来帮我？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;某黑客对这类问题的回答通常是：好的，还要帮你拍拍背和换尿布吗？，然后按下删除键。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;聪明问题：&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。&lt;/p&gt;

&lt;p&gt;在最后一个问题中，&lt;code class=&quot;highlighter-rouge&quot;&gt;注意告诉我答案&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;给我启示，指出我还应该做什么诊断工作&lt;/code&gt;之间微妙而又重要的区别。&lt;/p&gt;

&lt;p&gt;事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。&lt;/p&gt;

&lt;p&gt;通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。&lt;/p&gt;

&lt;p&gt;事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的名人，而是因为我用了正确的方式来提问。&lt;/p&gt;

&lt;p&gt;黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我像个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。&lt;/p&gt;

&lt;h3 id=&quot;如果得不到回答&quot;&gt;如果得不到回答&lt;/h3&gt;

&lt;p&gt;如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。&lt;/p&gt;

&lt;p&gt;总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。&lt;/p&gt;

&lt;p&gt;你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。&lt;/p&gt;

&lt;p&gt;有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。&lt;/p&gt;

&lt;p&gt;另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。&lt;/p&gt;

&lt;p&gt;对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。&lt;/p&gt;

&lt;h3 id=&quot;如何更好地回答问题&quot;&gt;如何更好地回答问题&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;态度和善一点。&lt;/strong&gt;问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对初犯者私下回复。&lt;/strong&gt;对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如果你不确定，一定要说出来！&lt;/strong&gt;一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如果帮不了忙，也别妨碍他。&lt;/strong&gt;不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;试探性的反问以引出更多的细节。&lt;/strong&gt;如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。&lt;/p&gt;

&lt;p&gt;尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如果你决定回答，就请给出好的答案。&lt;/strong&gt;当别人正在用错误的工具或方法时别建议笨拙的权宜之计（wordaround），应推荐更好的工具，重新界定问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;正面的回答问题！&lt;/strong&gt;如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 试试看 A 或是 B 或者 试试 X 、 Y 、 Z 、 A 、 B 、 C 并附上一个链接一点用都没有。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;帮助你的社区从问题中学习。&lt;/strong&gt;当回复一个好问题时，问问自己如何修改相关文件或常见问题文件以免再次解答同样的问题？，接着再向文件维护者发一份补丁。&lt;/p&gt;

&lt;p&gt;如果你是在研究一番后才做出的回答，&lt;strong&gt;展现你的技巧而不是直接端出结果&lt;/strong&gt;。毕竟授人以鱼不如授人以渔。&lt;/p&gt;

&lt;h3 id=&quot;相关资源&quot;&gt;相关资源&lt;/h3&gt;

&lt;p&gt;如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 &lt;a href=&quot;http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/&quot;&gt;Unix 系统和网络基本原理&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;当你发布软件或补丁时，试着按&lt;a href=&quot;http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html&quot;&gt;软件发布实践&lt;/a&gt;操作。&lt;/p&gt;

&lt;h3 id=&quot;鸣谢&quot;&gt;鸣谢&lt;/h3&gt;

&lt;p&gt;Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/27/How-To-Ask-Questions-The-Smart-Way/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/27/How-To-Ask-Questions-The-Smart-Way/</guid>
        
        <category>精进</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>「转载」只要你有这样的闪念就说明暂时还不适合做投资…… - 李笑来</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自 &lt;a href=&quot;http://lixiaolai.com/2017/05/29/you-re-not-qulified-if-you-are-thinking-like-this/&quot;&gt;只要你有这样的闪念就说明暂时还不适合做投资……&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有时候，“闪念”这个东西，只不过是大脑的神经元自己玩的一个游戏 —— 与其它本来并不相干的神经元突然连接一下，看看会发生什么……&lt;/p&gt;

&lt;p&gt;而另外一些时候，“闪念”其实是很多早已根深蒂固却暂时休眠的连接突然启动，于是，这些闪念其实是早就存在于那里的。&lt;/p&gt;

&lt;p&gt;以下这些闪念若是出现，总是属于上面说到的第二种：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;X 靠谱吗？你怎么看？你说 Y 能涨吗？&lt;/li&gt;
    &lt;li&gt;X 已经太贵了，买不起，我去看看 Y 吧……&lt;/li&gt;
    &lt;li&gt;真倒霉，一买就跌一卖就涨！&lt;/li&gt;
    &lt;li&gt;刚才没看到你们说什么，我错过了什么吗？&lt;/li&gt;
    &lt;li&gt;都一整天了，咋也不见涨呢！&lt;/li&gt;
    &lt;li&gt;靠，赚了赚了！我这就去换辆车！&lt;/li&gt;
    &lt;li&gt;妈的，跌成屎了，媳妇要跟我离婚！&lt;/li&gt;
    &lt;li&gt;唉！等我借来钱，已经涨上天了！&lt;/li&gt;
    &lt;li&gt;他们运气真好！我运气真差！&lt;/li&gt;
    &lt;li&gt;这帮傻逼！都是骗子！&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;这些闪念说明什么呢？说明你暂时还不适合做投资。因为在投资的交易市场里（比如股票市场），你绝大多数短期收益来自于他人的损失，你绝大多数的损失会归结成他人的收益。中文类比里有个词，叫“韭菜”，因为韭菜总是割掉一茬再长一茬…… 以上的闪念出现，就说明你还是韭菜，或者说更可能是韭菜，所以，还是暂时不要进去为妙 —— 做韭菜影响寿命的，方方面面的寿命。&lt;/p&gt;

&lt;p&gt;那怎么办呢？&lt;/p&gt;

&lt;p&gt;—— 不知道，永远没有人能让韭菜变成镰刀，一代又一代的人之中，大多数人到最后还是韭菜，谁也不知道为什么。&lt;/p&gt;

</description>
        <pubDate>Tue, 26 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/26/you-re-not-qulified-if-you-are-thinking-like-this/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/26/you-re-not-qulified-if-you-are-thinking-like-this/</guid>
        
        <category>精进</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>「转载」当生活变成你并没想过要的…… - 李笑来</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自 &lt;a href=&quot;http://lixiaolai.com/2018/10/05/when-life-turns-out-to-be-what-wasnt-expected/&quot;&gt;当生活变成你并没想过要的……&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;生活的诡异之处在于：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;一切的巨大的变化都是坏的 —— 无论是好的变化，还是坏的变化……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这并不是我的总结，这是《Story》的作者，著名编剧大师麦基在他的课上经常讲的一句话。&lt;/p&gt;

&lt;p&gt;为什么会出现这种情况呢？因为你每时每刻所具备的特质、技能，都是渐进积累的，都是为了你的彼时彼刻的“现状”所定制的…… 一旦巨大的变化发生，你的特质、你的技能，只能变成突然之间“不适用”了。&lt;/p&gt;

&lt;p&gt;于是，那变化越大，你需要积累、学会的技能就越大、越难；而留给你的时间常常并不多，甚至，那变化越大，你的时间越少…… 这就好像你车速 30 迈的时候，已经是老司机的你当然处理任何意外都“游刃有余”，可突然之间速度变成了 300 迈（类比上来看，甚至可能更高，比如 30,000 迈）的时候，你过往积累的所有经验所有技能不仅可能突然失效，甚至干脆会成为“威胁”…… 你说，这能不是坏事儿吗？&lt;/p&gt;

&lt;p&gt;而生活中最可怕的变化，很可能是与金钱相关的变化。你突然变得很富有，本质上来看和你突然变得很贫穷一样，不是什么好事儿。如果你的年收入从 20 万人民币变成了 30 万人民币，这谈不上是“巨大”的变化，只能是好事；可如果是 20 万到 200 万，甚至 2000 万的变化，那肯定是坏事儿，绝大多数人只不过是没机会“通过体验承认这个事实”而已。&lt;/p&gt;

&lt;p&gt;那种变化就好像是在院子里无忧无虑地生活的小白兔突然有一天被“放生”到亚马逊丛林里一样…… 食物结构变了，居住条件变了，面对的物种数量和种类也全都变了 —— 都是不熟悉的。&lt;/p&gt;

&lt;p&gt;当巨大变化发生的时候，避免自己被它绞杀的方法，没有人教我…… 幸亏我还有个自我保护的意识，所以，验证了一些有效的经验，归结起来只有一句话：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;尽量保持一些重要的生活部分“&lt;strong&gt;坚决不变&lt;/strong&gt;”。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;生活中有什么特别重要的部分呢？在我看来，其实就这么两个：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;亲情、友情&lt;/li&gt;
    &lt;li&gt;大脑的运作方式&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;在巨变之后，保持原有的“亲情、友情”不变，并不像很多人想象得那么简单。需要很多“站在对方角度思考”的努力，很多的时候，很少有人意识到“若是你不主动”，那么“情谊”其实是相当脆弱的一个东西。&lt;/p&gt;

&lt;p&gt;而第二个，“大脑的运作方式”，这一点太重要了。我原来写书，巨变发生之后，我还照样写书；我原来爱好读书，巨变发生之后照样读书；我原来喜欢宅在家里不去旅游，那么就依然宅在家里不去旅游；原来靠稿费生存，那么就依然靠稿费生存（于是，生活开销渐渐提高了一些，因为稿费更多了）……&lt;/p&gt;

&lt;p&gt;几年下来，回头细看，发现几乎所有“巨变之前没做过的事情，巨变之后做了的”，绝大部分都是失败的 —— 为什么呢？因为之前的经验和技能完全不适用么！&lt;/p&gt;

&lt;p&gt;幸运的是，过去的五年里我学会了一件事情，“&lt;strong&gt;资本管理&lt;/strong&gt;”。不仅是管自己的钱，更重要的是有能力管别人托管的钱 —— 这一点，实际上是过去的我完全没有机会体验的事情。五年后的某一天，我向当初向我托管资金的人们说：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;这五年来，我最感激的是你们。感谢绝大部分“以沉默作为支持”的人；同样也感激那些在这个过程中“捣乱、扯淡、甚至挖坑”的少数那么几个人 —— 为什么呢？因为没有你们，没有你们中的任何一个，我都不可能变成今天的我。支持的人，让我感受到责任；捣乱的人，让我感受到责任的同时也明白其中的不容易；挖坑的人，既然没有坑死我，那就只能让我变得更强…… 总之，全是感谢，没有任何其它一丝一毫。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后给这些人一个“大家只能感谢”的交代。&lt;/p&gt;

&lt;p&gt;从另外一个角度，与金钱相关的能力无非以下几个阶段：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;赚到钱&lt;/li&gt;
    &lt;li&gt;攒下钱&lt;/li&gt;
    &lt;li&gt;能让钱生钱&lt;/li&gt;
    &lt;li&gt;能管理更多的钱（即，不止自己的钱）&lt;/li&gt;
    &lt;li&gt;能长期做到好的管理成绩……&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;现在回头看，幸亏在 2013 年的时候，我意识到“巨变”可能并不是好事，开启了“自我保护”的过程 —— 用学习（一个之前不可能有机会学习的技能）作为自己逃出“巨变诅咒”的方式。&lt;/p&gt;

&lt;p&gt;五年过去，在与金钱相关的技能上，像打游戏一样终于“通关”。&lt;/p&gt;

&lt;p&gt;然而，“通关”再一次是个巨大的变化，希望之前的诀窍（尽量保持一些重要的生活部分“坚决不变”）继续生效……&lt;/p&gt;

</description>
        <pubDate>Tue, 26 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/26/when-life-turns-out-to-be-what-wasnt-expected/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/26/when-life-turns-out-to-be-what-wasnt-expected/</guid>
        
        <category>精进</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>「转载」十分钟后开始使用英语 - 李笑来</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自&lt;a href=&quot;http://lixiaolai.com/2016/06/11/makecs-appendix01/#more&quot;&gt;十分钟后开始使用英语……&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;阅读这一篇文章，最多需要十分钟而已，之后你就可以开始使用英语了。&lt;/p&gt;

&lt;p&gt;学习英语的最少必要知识是什么呢？&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;学会音标&lt;/li&gt;
    &lt;li&gt;学会查词典&lt;/li&gt;
    &lt;li&gt;学会查语法书&lt;/li&gt;
    &lt;li&gt;学会正确地提问&lt;/li&gt;
    &lt;li&gt;养成最基本语言学习习惯&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;1-学会音标&quot;&gt;1. 学会音标&lt;/h2&gt;

&lt;p&gt;音标只是一个符号系统。首先，任何人花上一下午就都可以学会。其次，千万别信那种胡说八道：“外国人都不用音标的”。先说说我们自己的母语，你什么时候见过一个受过教育的人不会用拼音的？遇到生词生字的时候，连拼音都不会的话，就算查到了，也不知道那字或词如何读。英语世界更是如此，要知道英语是目前地球上词汇量最多的语言，也就是说，在英语世界里，任何人遇到生词的概率都要大出许多许多倍 —— 只要是个正常受过教育的人，怎么可能不去查词典？怎么可能甘心于查了词典之后竟然不懂如何发音？&lt;/p&gt;

&lt;p&gt;学习音标真的很简单。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;从任何一本有文本的有声书中截取一段大约三五分钟的录音，然后把电子书的文本拷贝出来，粘贴复制到这个网站提供的工具里：http://upodn.com/phon.php ，然后你就会得到一个英语与音标对应的文本。（我是如何知道这个网站的？Google 呗 —— ‘Phonetic Transcription’……）三五分钟的语音中（大约三五百个词）一定包含了所有的音素（辅音、元音）……&lt;/li&gt;
    &lt;li&gt;一边看音标文本文件，一边反复跟读这段文本……&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;一个下午，任何一个正常成年人都能搞定。&lt;/p&gt;

&lt;h3 id=&quot;2-学会查词典&quot;&gt;2. 学会查词典&lt;/h3&gt;

&lt;p&gt;查词典，是学习语言的必需习惯 —— 正如学习是生活的必需习惯一样，也正如翻阅文档是开发者必需习惯一样，其实，哪个领域都是一样的。&lt;/p&gt;

&lt;p&gt;遇到生词就查。对，每一个。查着查着就越查越少了 —— 这是一定的。那些告诉你，“遇到生词（先）不（用）查，先猜”的人，让他们去屎。望文生义的笨蛋说的就是他们。&lt;/p&gt;

&lt;p&gt;一句话里感觉没有生词，可就是看不懂，原因可能是某个单词有另外的词义，而你却只知道最常用的词义。比如，“down”这个单词，竟然还可以做名词使用，意思是“小鸟小鸡身上的软毛”……&lt;/p&gt;

&lt;p&gt;那可能是有“你全都认识的词构成的你完全猜不到的词义”造成的，比如“purple passage”，“purple”你认识，“紫色的”，“passage”你也认识，“文章”，但“purple passage”是“辞藻过分华丽，金玉其外败絮其中的文章” —— 你可能就不知道了。&lt;/p&gt;

&lt;p&gt;还有一种情况是，语法结构弄不明白…… 比如，“as” 有很多用法，到底是哪一个呢？那就走下一步：查语法书。&lt;/p&gt;

&lt;h3 id=&quot;3-学会查语法书&quot;&gt;3. 学会查语法书&lt;/h3&gt;

&lt;p&gt;语法书是用来查的，不是用来背的 —— 你啥时候见过人们背地图？&lt;/p&gt;

&lt;p&gt;一张地图拿过来，知道“上北下南左西右东”，以及“少量标记符号”（比如，公交线长什么样，地铁线长什么样）这两个最少必要知识之后，就可以开始查地图了，不是吗？&lt;/p&gt;

&lt;p&gt;语法书也一样，除了你在初中的时候已经学过的一些基础语法概念，比如“名词”、“动词”、“形容词”、“副词”什么的之外，你还需要知道另外一个概念：“功能词”。什么叫功能词呢？就是那些在语法书的附录里，带着页码编号的词……&lt;/p&gt;

&lt;p&gt;你应该找个时间，比如一下午，大概翻翻那些功能词都有哪些，有个印象就好。&lt;/p&gt;

&lt;p&gt;然后，在遇到“没有生词、没有不了解的词义、没有不认识的词组，但就是读不懂的句子”的时候，仔细看看那句子里有没有功能词存在？有的话，去查查语法书，在附录里找到对应的页码（可能不止一个），按图索骥地查下去，一定能找到答案……&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;你以为你遇到过的英语老师啥都懂吗？不是的！他们就是比学生多一个技能：遇到问题的时候，他们懂得如何查词典，如何查语法书…… 哪个领域都是一样的 —— 你以为“高级程序员”什么都懂吗？某种意义上，他们只比那些“低级程序员”多一个技能：遇到问题的时候，他们懂得如何检索文档，如何问 Google……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;4-学会正确提问&quot;&gt;4. 学会正确提问&lt;/h3&gt;

&lt;p&gt;能问 Google 的，都不要去问别人，这是礼貌。&lt;/p&gt;

&lt;p&gt;别问人家这个单词什么意思，别问人家这句话什么意思 —— 自己动手去查！一个词典查不到，再换一个，换一个还查不到，还有 Gooogle 呢！&lt;/p&gt;

&lt;p&gt;实在查不明白，还有个办法，去 Google 那句原文，然后加上一个汉字“的”或者“了”（这两个字是中文中使用频率最高的词），这个搜索组合很可能让你找到已经有人在网上提问过……&lt;/p&gt;

&lt;p&gt;自己折腾过了，还搞不明白，再去问可能帮你的人 —— 他们也搞不定，也有可能，那就记在本子里。很神奇的事情是，大量的问题，都会在某一天自动出现解决方案的 —— 前提是，你还记得那个问题!&lt;/p&gt;

&lt;p&gt;不会正确提问，其实只不过是懒惰的表现，懒人是没救的，所以千万不能做懒人。&lt;/p&gt;

&lt;h3 id=&quot;5-养成最基本语言学习习惯&quot;&gt;5. 养成最基本语言学习习惯&lt;/h3&gt;

&lt;p&gt;朗读。天天朗读。每天朗读半小时，坚持两百天，才 100 小时…… 每天朗读一小时，坚持 100 天，也就是三个月多一点点 —— 你已经把 90% 的人甩在身后了，真的！&lt;/p&gt;

&lt;h3 id=&quot;6-阅读先行是很自然的&quot;&gt;6. 阅读先行是很自然的&lt;/h3&gt;

&lt;p&gt;口语难练，这是很正常的，因为在大多数情况下，我们读书、看电影的时候，由于面对的并不是真实的人，所以我们大脑中的“镜像神经元”很难被激发，于是学习能力处于“冬眠状态”。其实每个人都很有语言天赋的，顶多是一点点的好坏差异而已。你看，几乎任何一个人在一个新的城市里住上一周以上，口音就会发生一些微妙的变化，并且根本不是故意的（都没有刻意练习） —— 只是因为镜像神经元被激发了。&lt;/p&gt;

&lt;p&gt;可是阅读这东西，用不着镜像神经元过分活跃 —— 只是在小时候启动的时候可能需要（家长喜欢看书，孩子通常更容易喜欢看书）。所以，你要相信你的阅读能力可以很快提高的，事实上，确实如此 —— 只需要啃上一本原版书，基本上就过关了。&lt;/p&gt;

&lt;p&gt;选择原版书的时候，一定要选择自己感兴趣的领域 —— 英语教科书在这方面几乎是最差的。现在对你来说，这是个很好的机会，你不是对编程感兴趣吗？不是对成为计算机工程师感兴趣吗？那就读这个领域的原版书好了。这样的时候，你的焦点并不在于英语本，而是在于那语言文字背后的思想，这样的时候，你的大脑会很厉害，它自己会想办法穿透那层“毛玻璃”（英语），看到那玻璃背后的意义…… 不知不觉之间，那“毛玻璃”就会变成“透明玻璃” —— 就这么简单。&lt;/p&gt;

&lt;h3 id=&quot;7-刻意练习永远是必须的&quot;&gt;7. 刻意练习永远是必须的&lt;/h3&gt;

&lt;p&gt;每天都要挤出一点时间，把今天遇到过的生词复习几遍 —— 上学的时候不懂如何复习的人学习都不好，现在在成年阶段重新学习的时候，可别再吃这个亏了！而且，这个习惯是会“遗传”的：你的孩子若是看到你总是通过重复获得进步，他们也会自然而然地习惯于重复获得进步，这是真理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;没！有！别！的！了！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;任何正常人都可以上路了。如果还想让自己更心安一点，那就去读一本书《人人都能用英语》，其实只有一个字和一个感叹号：“用！”&lt;/p&gt;

&lt;p&gt;用吧用吧，不是罪。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大多数人的平庸和愚蠢，其实都是当初自己选的&lt;/strong&gt; —— 这真是一个残酷的事实。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;任务&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;今天就彻底学会音标。&lt;/li&gt;
    &lt;li&gt;从明天早上就开始坚持朗读。&lt;/li&gt;
    &lt;li&gt;配置好自己的计算机以便随时查词典，请 Google Mac Dictionary 添加词典。&lt;/li&gt;
    &lt;li&gt;请 Google 新编英语阅读手册。&lt;/li&gt;
    &lt;li&gt;请 Google 人人都能用英语。&lt;/li&gt;
    &lt;li&gt;请 Google how to ask questions，第一个就是 Eric Steven Raymond 写的 &lt;a href=&quot;http://www.catb.org/esr/faqs/smart-questions.html&quot;&gt;How to ask questions the smart way&lt;/a&gt;，必须精读。另外，还有一篇 &lt;a href=&quot;https://hbr.org/2009/05/real-leaders-ask.html&quot;&gt;HBR 的文章&lt;/a&gt;，也要细看。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 26 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/26/start-learn-en/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/26/start-learn-en/</guid>
        
        <category>精进</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>「转载」你学你的，用不着别人批准 - 李笑来</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自 &lt;a href=&quot;http://lixiaolai.com/2016/06/14/teach-yourself-without-permission/&quot;&gt;你学你的，用不着别人批准&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有一句话是这么说的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;人类一思考，上帝就发笑。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我从来没搞懂这句话什么意思，什么目的，什么意义…… 也觉得并不重要。&lt;/p&gt;

&lt;p&gt;我倒是清楚地知道另外一件事儿：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;你一说要学什么东西，人们就发笑……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;说实话，我花了很多年才琢磨清楚他们为什么要笑，他们的思路，他们的结论，他们的未来和结局。琢磨清楚了之后，才觉得，这事儿的合理解释意义对我并不大，因为我不是他们，他们和我也没什么关系 —— 只不过是各自的道路有过一次交叉而已，现在各自早就身处不一样的世界了。&lt;/p&gt;

&lt;p&gt;有一件事绝大多数人搞错了，导致了不一样的思路，不一样的结论，不一样的未来和结局：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;学习这东西，不是一定要学到大师的程度才可以拿出来开始用的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“学成归来”，是人们对大多数学习者的刻板印象，好像学不成就不要回来了似的。&lt;/p&gt;

&lt;p&gt;真实的学习过程是，学会一点最少必要知识（就是那些知道了之后就可以马上开始行动了的最少知识），然后就要马上开始实际操练…… 最终，大量的细节都是在实际操作过程中进一步学会的 —— 甚至，还有大量的细节如果不进行实际操练的话，就根本没机会学得到。&lt;/p&gt;

&lt;p&gt;在中国，每个会开车的人其实早就应该意识到这种学习方式的神奇。在中国，驾校的培训实在是太粗糙、太简单、太粗暴了…… 交了钱，进了驾校，其实前前后后在练习场上实际操作的时间少得可怜 —— 然后就冲出来上路了，虽然各自进度有些差异，但总体上来看，真正的驾驶技能几乎 100% 都来自于在真实世界里实际操作，而非驾校培训，不是吗？&lt;/p&gt;

&lt;p&gt;明明曾经靠着自己的勇气曾经学会过至少一项技能的人们，最终不知道为什么变成了另外一种人…… 真不明白为什么那么多小时候什么都学、什么都做不好却也根本没怕过的人们，长大了之后终究都成了怂货。而且怂到什么程度呢？怂到害怕别人不怂的地步……&lt;/p&gt;

&lt;p&gt;于是，绝大多数人的眼里，学习成了一条“漫长不归路” —— 听起来多可怕啊，学不成就别出来得瑟，学不成，就别回来见人！天呐。&lt;/p&gt;

&lt;p&gt;这还不算，既然在脑子里把学习这事儿类比为一条“漫长不归路”，那么“它一定是一步一步走过去的……”，于是，无论做什么事情，他们都感觉必须循序渐进，甚至，若是看到别人不循序渐进，就很生气。&lt;/p&gt;

&lt;p&gt;可是吧……&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;循序渐进坑了一代又一代的人……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其实，最有效的学习方式，真的不是从零开始，一路走到大师境地 —— 那条路上遍地尸骨訇然兽出。&lt;/p&gt;

&lt;p&gt;仔细观察一下我们的真实生活，我们从来都是这样的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;横空出世，向后钻研，向前突击……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这才是真实的世界。&lt;/p&gt;

&lt;p&gt;我们的教育体系，好像特别痴迷于把我们带到循序渐进的道路上去，父母们也觉得只有这样才放心（其实他们自己也是被弄脏了脑子自己不给自己洗脑的产物）…… 99% 的人循序渐进地从 ABCD 开始学，学英语 16 年，开口说不了，拿笔写不出…… 真不知道图个啥。&lt;/p&gt;

&lt;p&gt;最简单的编程，被抬高成“工程师”的境界 —— 可另外一个事实又明显地摆在那里：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;很多自称工程师的人，其实看到十四五岁的小黑客做的事情，也不得不心服口服 —— 若是必须、只能循序渐进才行的话，那些小黑客是不可能存在的，不是吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;小黑客们都不是靠循序渐进习得技能的。都是“横空出世”的，他们最开始做的事情，不是打基础，而是“突然有个问题要解决”，于是不管三七二十一只好“向前突破”，用尽各种方法（通常是很土的办法）先把问题解决掉…… 在这个过程中，能补的补（向后钻研），补不上的就先放在那里，留给以后…… 然后反复迂回前进。&lt;/p&gt;

&lt;p&gt;前些日子，我发了这样一条 Tweet：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;算了一下，一个普通人只要不笨，一年是可以成长为全栈工程师的。用不着一万小时。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其实我不用猜就知道，一定会有大量的人明里暗里向我吐口水了 —— 事实上，我今年 45 岁，一路就是这么过来的，我一想学点什么，人们就发笑…… 他们的口水从来没能淹死我。&lt;/p&gt;

&lt;p&gt;我一个学会计专业的怕什么啊？我大学毕业出来搞的是销售，而不是会计，不也得现学现卖吗？做了那么久批发生意，后来跑去新东方教英语，不也是跌跌撞撞先去考托福吗？离开新东方之后开留学咨询公司，也得现学如何指导申请文书；再后来结果竟然闲着没事儿跑去学习 Ruby on Rails、后来搞出来个 KnewOne；在这过程中还闲着没事儿研究比特币，再后来还要学如何做创投；现在又没啥事儿干了，就准备认真研究一下计算机领域，从一个基础的地方开始，去搞定全栈技能（时代不一样了，十年前是没戏的）…… 我学我的，他们为啥那么看不惯？好奇怪…… 其实我倒也不奇怪，我知道他们的思路。&lt;/p&gt;

&lt;p&gt;这么多年来，在学习这事儿上，除了我的父母之外，真的从来没有其他人鼓励过我。我最感激我父母的方面，就是这么一条：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;只要我说买书、只要我说报班，我要多少钱，他们就给我多少钱 —— 虽然总是补上一句，“反正钱就这么一点点，你花在那里就不能花在别的地方了……”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;他们就是这样在我小时候用行动支持我的…… 再后来我自己能赚钱了，就成了我自己用行动支持我自己。&lt;/p&gt;

&lt;p&gt;来自于亲戚、朋友的鼓励呢？说实话，真的没有，完全没有 —— 当然，我的情况特殊，我并不需要别人鼓励 —— 我自我鼓励的能力超强。风凉话呢？那就太多了，认识的不认识的都想上来泼一瓢冷水 —— 现在回头看这些年，最幸福的事情就是我也不知道为啥竟然没有被他们恶心到，也没被他们吓倒，好像完全没事儿似的……&lt;/p&gt;

&lt;p&gt;所以，我这一辈子都有个好习惯：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;鼓励身边的所有人…… 只因为，我实在是太清楚“鼓励”这东西有多么稀缺了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;老罗当年跟后来的老婆处对象的时候，据他说几乎所有人都反对，只有我一个人说，“多好啊！你那么开心……” 西乔准备考雅思的时候，我天天说的只有一句话：“没那么难的，你就弄罢……” —— 我真的没有教她什么，反正她从零基础开始一年之后考了雅思四个七分而后留学霍炬陪读最终全家移民成功。当年高雅说，“我们老师都说我数学不行……” 我只不过回了一句“让他们都去屎” —— 她到美国本科就选了数学专业，研究生选了设计…… 还有另外一个小朋友叫魏天天，第一次托福，才 82 分，当时我正在上海出差，她给我打电话，电话通了之后嚎啕大哭，我说的只不过是“哭个屁，都这样的 —— 接着考！” 后来，她考了 108 分。&lt;/p&gt;

&lt;p&gt;如果你自己是个上进的人，那你就像我一样，天天鼓励那些同道中人罢 —— 我相信这绝对是善事。&lt;/p&gt;

&lt;p&gt;还有另外一个事实是很多人曲解的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;谁说学过之后用的不够熟练，就不能用了？！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我说了个全栈工程师一年差不多了，很多人就愤怒了…… 对不起，我不是故意的。我用一两个月时间学会了，但用的不够好，部署到网上没多久就被人攻击了，甚至被“脱裤”了…… 这确实可以算作技艺不佳，可这碍着谁了呢？—— 哈哈，大家可能不知道，这事儿真的出现过，我当年学 ROR，用它写了个博客程序，然后就被“黑客”攻击了，删除了第一篇文章，然后留下几句话…… 他一定是觉得“这下我狠狠羞辱了李笑来一番”…… 偶尔挺想他的，不知道五年过去了，他现在怎么样？&lt;/p&gt;

&lt;p&gt;哦，对了，还有另外一个事儿：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;谁说没天分的人就不应该学东西了，谁说没天分的人学得不足够好就丢人了？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我学过的几乎所有东西里，都没有“我有天分”的因素…… 这一方面是破令人沮丧的事实，另一方面又是勇气的来源。我最没天分的事情，可能就是唱歌。据说小时候唱歌很好听，后来有一次出去滑冰，重摔，然后脑震荡，然后就脑残了（这可是真的脑残），应该是负责辨音的部分受伤，直接的结果就是变得五音不全，没办法准确地分辨别人的音高，无法自如地控制自己的声音…… 上初中的时候，我爹给我买了一把吉他，说，“你唱歌都跑调，将来怎么学英语呀？” —— 一副“老爹只能帮到你这里了”的表情。许多年后，我弹琴自娱自乐，偶尔唱首“山丘”让同事们开心一下…… 他们很羡慕，却不知道那吉他对我来说，这么多年来，其实一直是“脑残治疗仪”…… 我做销售，也不是因为我擅长，而是当年会计没学好，所以找不到会计的工作（也有别的原因）；我去新东方教书，你真以为我英语有多好啊？只不过是考试成绩不错而已，发音那个烂啊…… 但发音烂就要被剥夺讲英语的权利吗？我不信。后来搞投资，你真以为我能点石成金啊？投了很多烂项目、死项目，花很多钱买了很多教训之后才开始慢慢摸到一点门道……&lt;/p&gt;

&lt;p&gt;而且，我心粗，没有生气恼火的基本素质。更邪门的是，我认识很多被骂得比我惨的人…… 比如王垠，比如罗永浩，比如和菜头，比如霍炬，并且，他们之间还可能对骂呢…… 偶尔好像来气了的时候，不小心不厚道地想到他们，我就又乐了…… 唉，咋整？&lt;/p&gt;

&lt;p&gt;有一天，我在朋友圈里发过这么一句话：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我找到了捷径，可惜早已身不在起点。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;真的有很多捷径…… 比如，现在这篇文章里很多话都是“捷径”，因为你想通了，这些“捷径”就会帮你节省很多很多时间，节省很多很多精力，了却很多很多烦恼，甚至抄很多很多近路…… 捷径，不就是用来节省时间、提高效率的吗？&lt;/p&gt;

&lt;p&gt;说这么多，其实就是想说这么个事儿：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我就是想带着一群人（当然总体上其实肯定是少数人），大幅度降低对学习的恐惧，大幅度压缩学而不用的时间，大幅度地跨界 —— 跨越那些貌似无法跨越的界限 —— 因为我们能活很多辈子，七年就是一辈子，你自己算算看？。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这一定让一些人感觉不舒服，但相信我，我们真的不是故意的…… 我们没想到会是这种情况…… 我们本来只是想自己过得更开心一点而已。大家尽量相互谅解罢。&lt;/p&gt;

&lt;p&gt;另外，这事儿需要补充：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我所说的、我所理解的全栈，究竟是什么没必要在语义上争论，但，在真正工程师的生活中，coding 应该基本上只占 20% —— 因为最终代码是用来表达思想的，用来解决问题的；所以，全栈工程师是那种有真正的问题需要解决，有真正有价值的想法需要实现，有品位的设计者、创造者。就好像我们都识字，都能写字，能写漂亮钢笔字的人也很多很多，可最终写好文章、写好教程、写好小说、写好诗歌的人才是“文字工程师”，剩下的都只是“识字而已”。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 26 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/26/learn-yourself/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/26/learn-yourself/</guid>
        
        <category>精进</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>「转载」《人人都是工程师》前言 - 李笑来</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自 &lt;a href=&quot;http://lixiaolai.com/2016/06/12/makecs-preface/&quot;&gt;《人人都是工程师》前言&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1-为什么选择程序设计作为这本书的主题&quot;&gt;1. 为什么选择程序设计作为这本书的主题？&lt;/h3&gt;

&lt;p&gt;也许是因为我必然不由自主地暗藏私货，因为我一直固执地认为，不管有多少人相信：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(0) 在中国，对绝大多数人来说，&lt;code class=&quot;highlighter-rouge&quot;&gt;English + Computer Skills = Freedom&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;不过，以下理由可能更为充分：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(1) 程序设计也许是目前地球上最容易变现、最被高估、可事实上却实际上并不难以获得的技能。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;从趋势上来看，不仅目前如此，将来还会如此，并且变现容易程度与高估的幅度都会被进一步拉升 —— 不信咱就找个代驾开车坐在后座看唱本走着瞧。&lt;/p&gt;

&lt;p&gt;还有个理由是，&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(2) 程序设计的学习难度被有意无意地过分高估了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;人们向来有把学不会的技能神秘化的倾向，也许是因为只有这样心里才舒服，觉得自己学不会正常一点。但，程序设计这个领域，实在是被过份高估了（其程度比第二语言习得领域还要高出许多许多），乃至于很多人只是因为被误导了才望而却步，根本不是做不了做不好的原因。这个领域里的每一项技能，都会让习得者有这样的慨叹，“这样简单的东西竟然这么有用！” 或者 “连这么简单的东西我都没学会的话，实在是太可惜了！”&lt;/p&gt;

&lt;p&gt;最后一个理由是，&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(3) 这是个最能全方面养成、锻炼、提升个人学习能力的学习项目。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在计算机这个领域的顶尖范围里，集聚着人类的精英，他们设计了一个又一个的方法论去优化自己的工作环境，优化自己的工作流程，优化自己的产品，没完没了地改善，没完没了地更迭…… 也就是说，在计算机这个领域里，有大量的概念与方法论都是走在最前沿的。学习程序设计，并不是肤浅地学一门编程语言，设计一些函数，更重要、更本质的是学习计算机科学家们用来改变世界的思考方式、行为模式。&lt;/p&gt;

&lt;h3 id=&quot;2-这本书可能涉及的话题&quot;&gt;2. 这本书可能涉及的话题&lt;/h3&gt;

&lt;p&gt;这真是个神奇的时代。跟过去不一样了，现在很可能已经是“一门语言打天下”的时代了，学一门 javascript，就有可能什么都做了…… 这在哪怕仅仅是三五年前都是不可能的事情。不过，我们涉及的话题可能很多很多 —— 总而言之，前面有一条路通往“全栈工程师”的方向……&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;HTML, CSS, JAVASCRIPT&lt;/li&gt;
    &lt;li&gt;PUG, LESS, COFFEESCRIPT&lt;/li&gt;
    &lt;li&gt;MONGODB, RETHINKDB&lt;/li&gt;
    &lt;li&gt;NODEJS, EXPRESSJS&lt;/li&gt;
    &lt;li&gt;REACT, VUE, ANGULAR&lt;/li&gt;
    &lt;li&gt;RELUX&lt;/li&gt;
    &lt;li&gt;ELECTRON&lt;/li&gt;
    &lt;li&gt;TDD…&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;反正没有什么是不能学的……&lt;/p&gt;

&lt;h3 id=&quot;3-如何自学才能真正有效&quot;&gt;3. 如何自学才能真正有效？&lt;/h3&gt;

&lt;p&gt;学习是一种生活方式，是少数人的生活方式 —— 虽然它原本是每一个人最初的生活方式。哪儿有小朋友不学习的？他们每天都在学习（不要把学习狭隘地理解为上学、读书），可基于种种原因，绝大多数人从某一时刻开始就厌倦了学习（很可能是把学习与上学等同起来造成的），甚至干脆放弃了学习（以为离开学校就再也不用学习了）……&lt;/p&gt;

&lt;p&gt;另外一些人，不太一样，尽管他们是少数。他们甚至不认为学习只是生活内容之一，而干脆是生活方式。因为不学习的生活只能是停滞不前的，所以缺少了新鲜，缺少了刺激，由此也缺少了许许多多的乐趣。生活方式决定了生活质量，这是最基本的逻辑。&lt;/p&gt;

&lt;p&gt;再进一步，既然学习是一种他们已经选择了的生活方式，所谓的“终生学习”只是必然的结果，对他们来说并不需要“大力提倡”，他们也不需要“努力”、“坚持”、“不屈不挠”、“头悬梁锥刺股”…… 他们只是那样活着，每天进步一点点地活着，没有最好，只有更好，不需要成功，只需要不断成长。&lt;/p&gt;

&lt;h4 id=&quot;31-自学其实是一种社交活动&quot;&gt;3.1. 自学其实是一种社交活动&lt;/h4&gt;

&lt;p&gt;很多人错误地认为所谓的“自学”，就是“自己一个人（默默地）学” —— 这恰恰是绝大多数人一生学习失败的最根本原因。很多人从来没反应过来：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;学习从来都不是单独孤立的行为，而是社交行为。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;生活中，你遇到过这样的现象没有：“看见别人打针，自己先疼得受不了……” 这是因为我们的大脑中有一种神经元，叫做“镜像神经元”（Mirror Neuron），它会让我们“感同身受”，当我们看到另外一个人正在做什么的时候，镜像神经元会尽力给我们足够的刺激，让我们“体验”那个人的感受。以前人们不知道为什么喷嚏竟然会“传染”，现在科学家们很清楚了 —— 那就是镜像神经元在起作用。&lt;/p&gt;

&lt;p&gt;镜像神经元的存在，使得我们有模仿能力、有通感能力、有同情心、有同理心…… 这也是为什么人类天然有社交需求的重要原因，因为我们的大脑皮层上都有很多的镜像神经元。&lt;/p&gt;

&lt;p&gt;一般来说，物品、书籍之类非人的东西，都不大可能激活镜像神经元。只有看到人的时候，镜像神经元才会被激发。所以，你送给小朋友一把吉他，他不会有什么兴趣的。可若是你在弹琴的时候被他看见，他的镜像神经元就会因为你的行为而被出发，进而对弹奏吉他感兴趣 —— 注意，不是对吉他本身感兴趣。若是你在弹琴的时候，带着某种能够打动他的情绪，那他更容易被影响，因为情绪更能激发镜像神经元。也就是说，一切的学习起初都基于模仿，一切的模仿，都源自于看到真人的行为 —— 哪怕是在电影里看到，虽然其实只不过是影相而已，并非真人，但毕竟是真人的影相。&lt;/p&gt;

&lt;p&gt;所以，无论学什么技能，都要找到用那种技能的人，这样我们的镜像神经元才可能更容易被激发，学习效果才会好。若是能找到热爱那项技能，乃至于一使用那项技能就很开心（最好的情绪之一）的人，那就更好了。激情这东西，是少数幸运儿才长期持有的东西，大多数人小时候挺多，过了十五六岁之后就开始有意无意磨灭了激情，且并不自知。&lt;/p&gt;

&lt;p&gt;之前提到，&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;当我们看到另外一个人正在做什么的时候，镜像神经元会尽力给我们足够的刺激，让我们“体验”那个人的感受。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这句话里有个词很重要，“尽力”。因为镜像神经元只能调用我们大脑里已有的信息去模拟对方的感受，所以，它最多也就是“尽力”，无法做到“确保正确”。今天的糖尿病患者使用的皮下注射针头，已经可以做到很细，细到让使用者“无感”的地步，所以，当一个糖尿病患者给自己注射胰岛素的时候，他自己并不觉得疼，可是看的人却能“疼”到紧皱眉头的地步，为什么？因为旁观者的大脑力没有实际用那么细的针头注射胰岛素的经验，所以镜像神经元在旁观者“感同身受”时所调用的，其实是过往旁观者自己打针的体验 —— 被很粗的针头做静脉注射的痛苦体验。&lt;/p&gt;

&lt;p&gt;所以，很多人误以为他们眼里的成功者靠的是“坚持”、靠的是“毅力”，这完全是自己的镜像神经元“尽力”的结果，是“调用自己过往经验去‘感同身受’的结果”…… 事实上呢？那些“成功者”其实并不在意成功，因为到死之前成长不应该也不可能结束，因为那是他们的生活方式，学习、进步、探索、迂回，甚至折腾、挫败和迷茫，都是他们生活中必不可少的内容，这是最初不自觉的选择，谈不上什么“坚持”，谈不上什么“毅力”…… 说实话，对他们来说，不让折腾才真痛苦呢，不学习才需要坚持和毅力呢！&lt;/p&gt;

&lt;p&gt;再进一步，这也是为什么要选择朋友的原因。人与人之间有很大的差异，最大的差异来自于性格养成，大多数人会沦为表现型人格，只有少数人才会在不断调整中保持、呵护、进一步培养“进取型”人格。他们自然而然地更为乐观，更有耐心，更有承受力，更有战斗力，更能生产与体验学习与进步的乐趣。与这样的人在一起，学习会更容易 —— 只因为镜像神经元会更容易地被正确激发。说清楚了，道理其实挺简单的。&lt;/p&gt;

&lt;h4 id=&quot;32-刻意练习是必须自己完成的核心&quot;&gt;3.2. 刻意练习是必须自己完成的核心&lt;/h4&gt;

&lt;p&gt;有个很简单的诀窍：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;重复才能练就技艺。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;但不知道为什么，绝大多数人就是不信这事儿，尽管大多数人小时候一定读过那个寓意深刻的教育故事：《卖油翁》—— 每个人都记得那里面的金句：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;无它，手熟尔。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这时间绝大多数的“精湛技艺”，到最后跟那个神秘的概念“智商”没有任何关系。智商是存在的，但它不是与生俱来一成不变的，所谓的智商，其实是一个人最终积累出来的知识经验的总和 —— 若是这样理解的话，就不难理解为什么到最后人与人之间的聪明程度相差天壤。因为有一些人天天往前走啊，另外一些人早就不动了啊！&lt;/p&gt;

&lt;p&gt;所谓的刻意练习，说来也很简单，就是把那些现在做起来生疏的技能通过反复使用最终做到不假思索就可以做完且做好 —— 这与智商高低全无关系。&lt;/p&gt;

&lt;p&gt;现在大多数人都会开车。谁在刚开车的时候不生疏呢？一个方向盘都弄不明白，这会儿转多了，那会儿转少了…… 可是，没有多久（绝对用不着一万小时，一百小时都用不上）之后，那方向盘就好像已经是自己身体的一部分一样，就好像已经长在自己的手上了一样，听话起来，不假思索的情况下就可以做到转动的幅度刚刚好…… 车上油门，刹车，也是一样，没多久，就好像长在脚上一样，就好像是自己身体的一部分一样，随心所欲地被我们控制（其实是“随脑所欲”）。&lt;/p&gt;

&lt;p&gt;我们的大脑就是这样的，有强大的能力把我们常用的物体、技能“吸收”进来，就好像那些东西是我们身体的一部分一样，进而随心所欲地控制。厨艺大师手中的刀子，MBA 明星手中的篮球，都是这样的，虽然看起来是“身外之物”，实际上，对他们的大脑来说，那些东西都是他们身体的一部分，是他们可以随心所欲地控制的 —— 当然，外人看来那实在是太神奇了！&lt;/p&gt;

&lt;p&gt;每个人都有过这样的体验。你见过小朋友刚开始拿笔写字有多么笨拙吧？你自己最初的时候也那样，这是跑不了的。可仅仅是几天之后，你就已经可以自如地控制那“身外之物”了，不说写得好看不好看，起码已经能一笔一划地写了。这一代人从小就使用键盘，要知道在上一代人身上，键盘可是“神奇的计算机”的一部分，是“高档电器”的组成部分，学起来可费劲了，要专门上一个“打字培训班”…… 也不一定学的会。甚至最终相当数量的人放弃了，或者连试都不愿意试，更有甚者干脆“理直气壮”声称“用那玩意写字没感觉！”，这还不够，要写文章发表在报纸上，理论只用笔而绝对不用键盘的必要 —— 真的没感觉吗？没感觉真的那么重要吗？他们有的明显是错误的感觉啊！等那些人都死光了，那些“感觉”就再也没有人提起了。这一代人最明显的变化就是，互联网已经长在自己身上了，互联网不再是一个只有坐在桌上的台式机面前才有的一个存在。天天用天天用的结果是什么？绝大多数动作都已经化作大脑皮层表面的沟回，不再需要通过思考、检索才能产生正确的行动，而是下意识中已经做完，已经做好…… 这一代的孩子们不仅随脑所欲地使用键盘，甚至可以随脑所欲地使用虚拟键盘，哼。&lt;/p&gt;

&lt;p&gt;所以，一切看起来复杂的技艺，其实都并不难，很多人最终学不会，其实只是练不成，就是说，他们并不是不理解那道理、那原理；可理解本身并无太大用处，因为真正需要做的是通过大量的重复与实践，把那道理、那原理转化为大脑皮层表面的沟回…… 缺少了刻意训练的环节，学什么都是白搭。&lt;/p&gt;

&lt;p&gt;关键来了：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;刻意练习，必须自己完成。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;没有人帮你完成，更为重要的是，没有人有义务监督你完成 —— 除非你付钱给人家监督你。但现实中出钱请人监督自己的做法总是不太成功，因为 a) 钱出的不够高，所以请不来真正负责的人；b) 钱出的足够高，吸引来的只能是唯唯诺诺的人，不敢下手太狠…… 你看，不是没有人试过，只是试过之后发现没用而已。&lt;/p&gt;

&lt;h4 id=&quot;33-即便环境足够好也依然要靠自己&quot;&gt;3.3. 即便环境足够好也依然要靠自己&lt;/h4&gt;

&lt;p&gt;很多事情只能靠自己。学习就是吃饭，正如饭这东西没办法让别人替自己吃了一样，学习只能自己学，刻意练习只能自己练，谁都帮不上，谁都指望不上。这就是绝大多数人自学失败的最根本原因。&lt;/p&gt;

&lt;p&gt;然而，在一个恰当的环境里，在一个恰当的社交圈里，情况可能非常不同。若是你在一个表现型人格占大多数的圈子里生存，你做得好会招致嫉妒甚至陷害，你做得差会被嘲弄甚至捉弄；反过来，你若是在一个进去型人格占大多数的圈子里生存，情况会反过来，你做得好，大家会佩服你，然后模仿你，向你学习，或直接向你请教，或默默揣摩；要是你做的不好，没有人会鄙视你，没有人会捉弄你，相反会鼓励你，告诉你说大家刚开始都是这样的，看到你做的不恰当的地方，他们会告诉你，若是如此这般你也许就可能好起来…… 然而，即便是在进取型人格占大多数的社交圈里，一切的改变也都来自于自己的刻意练习，用时间浇灌的践行，才能引发真正的改变与进步。&lt;/p&gt;

&lt;p&gt;这与有一部分健身者选择去健身房锻炼也是一样的道理。&lt;/p&gt;

&lt;p&gt;难道就不能在家、在操场健身吗？能啊。去健身房锻炼就能自动长出一身腱子肉，自动甩掉一肚子肥膘吗？明显不能啊！你交了四千八百块的年费，到年底一算，单次消费八百元，因为一年下来你只去了六次…… 你会找健身房退款吗？不会的 —— 至于为什么，你可能没细想过：因为从另外一个角度来看，一年交四千八百元，是你和健身房的约定；至于去多少次，实际上是你自己与自己的约定，违约者是你自己，被约为者还是你自己，非要退费的话，你得找你自己退费……&lt;/p&gt;

&lt;p&gt;但你若是去了健身房，并且还能持续频繁地去健身房锻炼，你的身材就是会变的，而且变化还会非常大，那可是一整年啊！事实上，三个月下来，总计一百小时左右，就会发生巨大的无法忽视的变化。&lt;strong&gt;对，仅仅一百小时，在绝大多数领域里，就足矣把绝大多数人甩在身后&lt;/strong&gt; —— 对一些人来说这个事实可能是解脱；对更多另人来说，这个事实其实非常残酷，因为仅仅一百个小时，他们就已经败下阵来，别说一辈子了，别说七年就是一辈子了，他们在生生世世中，第一百个小时之前就已经死去。&lt;/p&gt;

&lt;h3 id=&quot;4-概念与方法论最少必要知识&quot;&gt;4. 概念与方法论：最少必要知识&lt;/h3&gt;

&lt;p&gt;无论学什么，都要想尽一切办法（读书、搜索）尽快获得“最少必要知识”。什么是“最少必要知识”呢？所谓“最少必要知识”，指的是为了能够实践某项技能，最起码要学会的那一点知识。&lt;/p&gt;

&lt;p&gt;我为了这个概念还专门杜撰了一个英文缩写，MAKE —— Minimal Actionable Knoweldge &amp;amp; Experience。注意这里的一个词：Actionable，“可行动的/可执行的”。&lt;/p&gt;

&lt;p&gt;比如，开车的最少必要知识是什么呢？&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;学会如何启动&lt;/li&gt;
    &lt;li&gt;学会如何制动&lt;/li&gt;
    &lt;li&gt;再加上一个字：慢&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;但，开车开得不好可能会影响别人的生命安全，所以得先去考个驾照…… 可大多数知识与技能并不会直接危及他人的生命安全，不是吗？你英语发音不漂亮，人家并不会因为这个就直接死掉；你写字写得不够帅气，但这并不意味着说你没有写字的权利；你 PPT 做得不好看，但这并不意味着说你不可能逻辑严谨地论证你的观点…… 有一本书特别好，好到什么程度呢？仅仅看书名就已经热血沸腾了，这本书叫：&lt;em&gt;Without Permission&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;学习编程的最少必要知识是什么呢？&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;你得习得几个程序员都应该有的起步方法论。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;…… 然后呢？然后你就可以开始边学习，边实践，在学习中实践，在实践中学习更多，虽然有时掉进陷阱，有时误入歧途，但，请你放心，肯定不会死人的。是谓不断进步，是谓 “路漫漫其修远兮，吾将上下而求索”。&lt;/p&gt;

&lt;h4 id=&quot;41-只使用-google&quot;&gt;4.1 只使用 Google&lt;/h4&gt;

&lt;p&gt;不论你遇到什么困难，都可以去问 Google，这是目前地球上最大的“人工智能”项目。它聪明到什么程度呢？聪明到你甚至可以问它：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How to use google effectively?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这是第一个小任务：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;了解一下在 Google 搜索的时候，＋、－、*、”、~ 这些符号的用法……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;只要花上一小点时间，了解了这些符号的用法，那么，&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;你已经比地球上的 90% 以上的人更善于使用这个最伟大的人工智能项目了；（甚至，90% 这个数字都有点保守？）&lt;/li&gt;
    &lt;li&gt;你已经入门了，最起码你已经知道跟计算机打交道的时候，其实就是综合使用用&lt;/li&gt;
    &lt;li&gt;各种各样的符号而已…… 哪怕一个字符错了，可能结果都很不一样 —— 其实好像小学数学也是如此罢？&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;既然你准备当工程师，那么，在使用 Google 的时候，除了那些常用的符号之外，还需要常用以下几个关键字：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;tutorial&lt;/li&gt;
    &lt;li&gt;example&lt;/li&gt;
    &lt;li&gt;tricks&lt;/li&gt;
    &lt;li&gt;cheatsheet&lt;/li&gt;
    &lt;li&gt;cookbook&lt;/li&gt;
    &lt;li&gt;awesome&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;以后在你想学任何语言或者专题的时候，比如 javascript，那你就 Google 这个这些组合：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;javascript cheatsheet&lt;/li&gt;
    &lt;li&gt;javascript cookbook&lt;/li&gt;
    &lt;li&gt;javascript awesome&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;放心，你自己一定会上瘾的，用不着别人督促你……&lt;/p&gt;

&lt;h4 id=&quot;42-在中国你最好买一个-vpn-服务&quot;&gt;4.2 在中国，你最好买一个 VPN 服务&lt;/h4&gt;

&lt;p&gt;别问我 VPN 是什么，我们有个原则：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;一切能问 Google 的，都不要去问人。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这个习惯最初的时候看起来麻烦，可一旦养成，就知道它会帮你节省多少时间，它会让你有多大进步…… 甚至，这个原则还会让你识别哪些人真的值得交流 —— 神奇吗？&lt;/p&gt;

&lt;p&gt;别浪费时间去寻找免费资源，能买就抓紧时间买 —— 我的意思是你必须马上买一个。这是另外一个原则：一切能节省时间的服务都值得购买，因为时间才是最宝贵、最稀缺，压根无法再生的资源，跟时间比，钱算个屁。&lt;/p&gt;

&lt;h4 id=&quot;43-只读英文文档&quot;&gt;4.3 只读英文文档&lt;/h4&gt;

&lt;p&gt;这又是很重要很重要的原则：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在计算机方面，只读英文文档。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;你可能已经打退堂鼓了…… 别怕。&lt;strong&gt;我有办法让你最多三个月就彻底解脱&lt;/strong&gt; —— 详见&lt;a href=&quot;/2019/03/26/start-learn-en/&quot;&gt;十分钟后开始使用英语&lt;/a&gt;。当然，你要是连这三个月都抗不过去，你就认了罢，选择平庸的生活去罢 —— 这个世界正在变得越来越好，在一个更好的世界里，最明显的好处就是，哪怕是笨蛋，哪怕是不进步的笨蛋，也不至于饿死。&lt;/p&gt;

&lt;p&gt;在硅谷，印度人很多很多。为什么呢？他们虽然口音浓重，但英语对他们来说基本上是母语。中国人相对吃亏一点，为什么？英语相对较差。&lt;/p&gt;

&lt;p&gt;在国内，一个程序员的水平怎么样，基本只取决于一件事儿：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;英语水平&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也许你会因此惊讶，但若是你有机会去问任何一个 IT 公司的 CTO，无论是哪一个，都一定会百分之百认同这个观点 —— 这干脆就是事实。外界并不清楚这事儿而已。我总是开玩笑说（其实只不过是事实陈述），“那些在国内学英语专业的人本科毕业去当老师或者靠研究生，真不如脱产学一年计算机呢，拿着这个优势，一下子就干掉国内 90% 的所谓程序员，年薪 60 万人民币，其实指日可待…… 尤其是那些英语系的女生，一脚踏进码农的世界，瞬间就是女神中的女神。”&lt;/p&gt;

&lt;p&gt;提高英语的最直接、最有效方式，就是从此在某个领域坚决只使用英语 —— 平时，一般人还真的很难有这个环境呢！现在机会来了，你想学习，你想学习计算机，你想成为一个工程师，你就要从今天开始在计算机领域里，只读英文文档。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;说实话，我恨不得将这本书直接写成英文版…… 可是为了普度众生，只能委屈自己，也只能委屈各位，还在写中文。&lt;strong&gt;不过，我真心希望这是你读的与计算机相关的最后一本中文书！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这个原则要恪守，要执拗地恪守，要不屈不挠地恪守。给你看个例子，这个例子很重要，乃至于我们一提到学习、一提到进步，一定反复会提及这个例子（最早这是我在《人人都能用英语》里提到的例子，其后一直反复使用）：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;请读者猜猜下图中，这个正在美国 UAB 康复中心治疗的小女孩受伤的是左臂还是右臂？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;其实她的左臂没有受伤，而之所以把左臂固定起来就是因为那是一条没有受伤的手臂，而右臂才是受伤、需要通过训练恢复的……咦？这是怎么回事儿？可是从生理上来看，大脑受损的部分是没办法恢复的，她又怎么能通过训练来让已经受伤的右臂恢复正常呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2019-03-26-everyone-engineer/1.jpg&quot;&gt;&lt;img src=&quot;/assets/img/posts/2019-03-26-everyone-engineer/1.jpg&quot; alt=&quot;1.jpg&quot; title=&quot;点击查看原图&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;大脑的神奇之处在于它可以利用其它未受损的部分重新习得受损部分的功能（学术上叫做“ remap ”、“ reroute ”、或者“ rewire ”）。之所以要把行动自如的左臂绑起来，是因为如果不这么做的话，面对任何需求，大脑中负责控制左臂的部分（或称为“左臂脑图”）都会“优先启动”；因为这部分是未受损的，而原本控制右臂的部分已经受损了。换言之，这时，大脑中尚不存在一个能够控制右臂的部分。而把左臂固定住之后，尽管负责控制左臂的大脑部分依然“优先启动”，但实际上却无法自如操纵左臂。而在这种情况下，就可以通过让大脑的其他部分慢慢专注于右臂，进而习得控制右臂的方法——即，可以通过这样的训练，慢慢使大脑未受损的某个区域“习得”原本只有那个已经受损的区域所负责的功能。没有多久，这个女孩子的右臂就恢复了，活动起来与原来没什么两样。可是她的大脑不再是原来的样子了，尽管某一部分受损且不可恢复，但她大脑的另外一个区域已经被开发，能够别无二致地完成受损区域曾经可以完成的功能。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;仅仅在 2004 年之前，这种疗法是完全不可想象的。这种最初看起来匪夷所思的疗法叫做“ CI 活动疗法”（Constraint-Induced Movement Therapy，简称“ CI ”或者“ CIMT ”）的发明者是 Edward Taub 教授。今天，这种疗法渐渐开始在全世界范围内普及，帮助无数偏瘫患者找回原来的自我和生活。可是 Taub 教授的研究经历却一波三折。为了找到偏瘫的治疗方案，他需要人为地使猴子偏瘫（故意破坏猴子大脑的某个区域），而后再想办法通过训练令那些猴子从偏瘫状态中恢复过来……上个世纪八十年代初，他被一个动物权益保护组织告上法庭，导致实验室被关闭，经费被冻结，最后甚至失去了工作，几乎所有的人都对他避之唯恐不及。接下来的六年时间里，Taub 教授的所有时间精力都被耗费在为自己辩护上——巨大的社会压力使得他甚至找不到愿意为他辩护的律师，所以他只好自己做自己的律师。案发之前，Taub 教授总计有大约 10 万美元的存款，到他最终胜诉洗清所有罪名之时，他只剩下了大约四千美元的积蓄。当然，时至今日，基于他的理论及其实践为人类创造的巨大价值，Taub教授被公认为当今全球最杰出的科学家之一。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter1.html&quot;&gt;http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter1.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;触类旁通地想想吧，如果不把你的中文使用能力锁起来，那么在这个领域里，你的英文使用能力就一定不能发展起来 —— 就犹如上面那个小女孩的左臂没有被绑起来一样，直接导致右臂永远没有办法恢复 —— 因为大脑会走捷径，于是那一部分功能永远不可能被大脑的另外一部分学会。所以啊，还是那句话：“都已经给你说清楚了，你自己选。”&lt;/p&gt;

&lt;p&gt;是不是最终会感觉这岂不是“所有人都应该使用的方法论吗？” 是啊，早就说过了：&lt;/p&gt;

&lt;p&gt;本来人人都是工程师，只不过很多人明里暗里自己放弃了而已。&lt;/p&gt;

&lt;h3 id=&quot;5-天天给自己洗脑&quot;&gt;5. 天天给自己洗脑&lt;/h3&gt;

&lt;p&gt;我们天天刷牙、洗手、洗脚、洗澡…… 我们却从来不洗脑，这岂不是咄咄怪事？&lt;/p&gt;

&lt;p&gt;在我看来，不给自己洗脑是最差的个人卫生习惯。更要命的是，很多人其实也洗脑 —— 只不过，从来不是自己给自己洗脑，而是永生永世被别人洗脑…… 这是最可怜的生活状态。&lt;/p&gt;

&lt;p&gt;晚上睡觉前，你洗澡、洗脚；早上起来，你洗脸、刷牙，然后出门。外面有风，所以有风尘，外面可能下雨，所以有泥浆，你可能要上厕所，所以想来有很多细菌，你自己做很多事情，弄不好也大汗淋漓…… 你就会觉得各种不干净，然后你怎么办？洗。不仅要洗，还要搭配各种工具，香皂、洗发露、沐浴液……&lt;/p&gt;

&lt;p&gt;一旦你开始学什么东西，你一定饱受各种打击 —— 那些不愿意学习的人，其实不仅害怕自己学不会，他们更怕的是别人竟然学得会，所以他们会提前出手，打击一切可能让自己收到打击的人或事。他们会嘲笑你（越差的人越鄙视别人），他们会泼冷水（恨不得泼的是开水），他们会鄙视你（不是靠资格，是靠自以为是），他们会疏远你（以为这样可以让你害怕）…… 更可恨的是，他们人数众多，比例上占据一定的优势。&lt;/p&gt;

&lt;p&gt;于是，你的脑子就不干净了，被他们污染了…… 怎么办？自己给自己洗干净 —— 对，就这么简单。&lt;/p&gt;

&lt;p&gt;2009 年，有一个小女孩，名字叫高雅，背着个包从大连坐火车来北京找我，说要学 TOEFL，要到国外读大学。我就给她安排了课程，她很努力，几次下来，从最初的 62 分，考到了最终的 102 分（满分 120 分）。去美国之前，她问我到了美国该学什么专业，我告诉他，本科就是学基础学科的，比如数学。她当时脱口而出：“我从小就数学不好……” 我颇不耐烦，因为我向来讨厌 “我从小 …… 就不好” 这个句型（有一类句型，是脑子被污染了的人才频繁使用的），于是就直接厉声顶了回去：“谁说的！” 我本来说的是感叹号，她却理解成了问号，声音低了好几度，头也不由自主地低了下来：“我们学校老师说的，好几个老师都这么说……” 我愣了一下，却没有软了语气，直接回了过去：“让他们都去屎！” —— 我故意用了卷舌音。&lt;/p&gt;

&lt;p&gt;后来呢？后来她去了美国，在华盛顿大学读本科，她本科读的是什么专业呢？数学。再后来在卡耐基梅隆读研究生，研究生读的是什么专业呢？设计。现在在硅谷工作。&lt;/p&gt;

&lt;p&gt;我想，我当时那一句斩钉截铁的 “让他们都去屎！”，也许是她第一次被洗脑，被洗干净，从那个脏兮兮的状态下清爽地走出来……&lt;/p&gt;

&lt;p&gt;我知道如果你告诉身边的人，你要学计算机了，你要把自己当作工程师了，那他们的反应几乎是我可以栩栩如生地想象出来的。虽然你没必要说出来那句话（“让他们去屎！”），但你自己要知道，他们的反应就跟屋外的灰尘细菌一样，是必然存在的，无法回避的，只不过，你应该回家跟洗手洗澡一样，给自己洗洗脑 —— 请务必注意个人卫生！&lt;/p&gt;

&lt;p&gt;我们每天都要给自己洗脑。可这并不是我发明的习惯啊！孔老夫子说，“吾日三省吾身”，你看看他老人家个人卫生习惯多好，不仅洗，还要天天洗，而且还是每天要给自己洗脑至少三次……&lt;/p&gt;

&lt;p&gt;以下这几句话，天天都要读给自己听，天天都要把它们当作香皂用来给自己洗脑，一遍不够就洗好几遍：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;学习其实是一种生活方式，学习本身就是最好的洗脑方式。&lt;/li&gt;
  &lt;li&gt;只要我投入时间精力，长期来看，没有什么是我学不会的。&lt;/li&gt;
  &lt;li&gt;我学会的东西越多，我再学新的东西就只能越来越快。&lt;/li&gt;
  &lt;li&gt;学习不是目的，用起来才是真的，因为价值只能通过创造去实现。&lt;/li&gt;
  &lt;li&gt;我知道我现在看起来很笨拙，但刚开始谁都是这样的，实践多了，就自然了，就自然地好起来了。&lt;/li&gt;
  &lt;li&gt;在学习这件事儿上，他们不理解我是正常的，这方面我也不需要理解，因为我是一个独立的人。&lt;/li&gt;
  &lt;li&gt;我不应该与他们争辩，因为我不想伤害他们；我也不应该被他们影响，因为我不想伤害自己。&lt;/li&gt;
  &lt;li&gt;刻意练习永远是必要的，虽然它通常并不舒适，但它的复利效应确实巨大的。&lt;/li&gt;
  &lt;li&gt;哪怕是为了下一代，我也要通过现在的努力成为学习专家，这样才有资格与我的孩子共同成长……&lt;/li&gt;
  &lt;li&gt;我的路还很长，我要健康，我要干净，尤其是我的脑子更要干净。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其实，这完全是“进取型人格宣言”，不是吗？&lt;/p&gt;

&lt;p&gt;在接下来的过程中，我们会不停地建立更多的原则。所谓的原则，就是一定要恪守的形式准则，如果不能恪守，就不能称之为原则。做个有原则的人，是很重要的原则。另外，有一本好书，就叫《原则》，一定要找时间研读。&lt;/p&gt;

&lt;h3 id=&quot;任务&quot;&gt;任务&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;真正学会如何使用 Google&lt;/li&gt;
    &lt;li&gt;用 Google 找到一个可购买的稳定的 VPN&lt;/li&gt;
    &lt;li&gt;把“进取型人格宣言”背下来&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 26 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/26/everyone-engineer/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/26/everyone-engineer/</guid>
        
        <category>精进</category>
        
        <category>转载</category>
        
        
      </item>
    
      <item>
        <title>「Swoole」Process 进程</title>
        <description>&lt;h3 id=&quot;接口&quot;&gt;接口&lt;/h3&gt;

&lt;h5 id=&quot;构造-__construct&quot;&gt;构造 __construct&lt;/h5&gt;

&lt;p&gt;创建子进程&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callable&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$redirect_stdin_stdout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pipe_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$enable_coroutine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$function&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;子进程创建成功后要执行的函数，底层会自动将函数保存到对象的&lt;code class=&quot;highlighter-rouge&quot;&gt;callback&lt;/code&gt;属性上。如果希望更改执行的函数，可赋值新的函数到对象的&lt;code class=&quot;highlighter-rouge&quot;&gt;callback&lt;/code&gt;属性&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$redirect_stdin_stdout&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;重定向子进程的标准输入和输出。启用此选项后，在子进程内输出内容将不是打印屏幕，而是写入到主进程管道。读取键盘输入将变为从管道中读取数据。默认为阻塞读取。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$pipe_type&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;管道类型：&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;：不创建管道启用&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;：创建&lt;code class=&quot;highlighter-rouge&quot;&gt;SOCK_STREAM(TCP)&lt;/code&gt;类型管道&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;：创建&lt;code class=&quot;highlighter-rouge&quot;&gt;SOCK_DGRAM(UDP)&lt;/code&gt;类型管道&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$redirect_stdin_stdout&lt;/code&gt;后，此选项将忽略用户参数，强制为&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;。如果子进程内没有进程间通信，可以设置为&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$enable_coroutine&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，在&lt;code class=&quot;highlighter-rouge&quot;&gt;callback function&lt;/code&gt;中启用协程，开启后可以直接在子进程的函数中使用协程&lt;code class=&quot;highlighter-rouge&quot;&gt;API&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;启动-start&quot;&gt;启动 start&lt;/h5&gt;

&lt;p&gt;执行&lt;code class=&quot;highlighter-rouge&quot;&gt;fork&lt;/code&gt;系统调用，启动进程。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swoole_process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;创建成功返回子进程的&lt;code class=&quot;highlighter-rouge&quot;&gt;PID&lt;/code&gt;，创建失败返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;。&lt;br /&gt;可使用&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_errno&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_strerror&lt;/code&gt;得到错误码和错误信息。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;子进程启动后会自动清除父进程中swoole_timer_tick创建的定时器、swoole_process::signal监听的信号和swoole_event_add添加的事件监听&lt;/li&gt;
    &lt;li&gt;子进程会继承父进程创建的$redis连接对象，父子进程使用的连接是同一个&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;命名-name&quot;&gt;命名 name&lt;/h5&gt;

&lt;p&gt;修改进程名称。此函数是&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_set_process_name&lt;/code&gt;的别名。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php server.php: worker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;执行外部程序-exec&quot;&gt;执行外部程序 exec&lt;/h5&gt;

&lt;p&gt;执行一个外部程序，此函数是exec系统调用的封装。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$execfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$execfile&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定可执行文件的绝对路径，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;/usr/bin/python&quot;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$args&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;是一个数组，是exec的参数列表，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;array('test.py', 123)&lt;/code&gt;，相当于&lt;code class=&quot;highlighter-rouge&quot;&gt;python test.py 123&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;$execfile必须使用绝对路径，否则会报文件不存在错误&lt;/li&gt;
    &lt;li&gt;由于exec系统调用会使用指定的程序覆盖当前程序，子进程需要读写标准输出与父进程进行通信&lt;/li&gt;
    &lt;li&gt;如果未指定redirect_stdin_stdout = true，执行exec后子进程与父进程无法通信&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;向管道写数据-write&quot;&gt;向管道写数据 write&lt;/h5&gt;

&lt;p&gt;向管道内写入数据。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$data&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;写入的数据。它的长度在&lt;code class=&quot;highlighter-rouge&quot;&gt;Linux&lt;/code&gt;系统下最大不超过&lt;code class=&quot;highlighter-rouge&quot;&gt;8K&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;MacOS/FreeBSD&lt;/code&gt;下最大不超过&lt;code class=&quot;highlighter-rouge&quot;&gt;2K&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;在子进程内调用write，父进程可以调用read接收此数据&lt;/li&gt;
    &lt;li&gt;在父进程内调用write，子进程可以调用read接收此数据&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;从管道读取数据-read&quot;&gt;从管道读取数据 read&lt;/h5&gt;

&lt;p&gt;从管道中读取数据。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$buffer_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8192&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$buffer_size&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;缓冲区的大小，默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;8192&lt;/code&gt;，最大不超过&lt;code class=&quot;highlighter-rouge&quot;&gt;64K&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功返回二进制数据字符串，读取失败返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;管道类型为&lt;code class=&quot;highlighter-rouge&quot;&gt;DGRAM&lt;/code&gt;数据报时，&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;可以读取完整的一个数据包&lt;/li&gt;
    &lt;li&gt;管道类型为&lt;code class=&quot;highlighter-rouge&quot;&gt;STREAM&lt;/code&gt;时，&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;是流式的，需要自行处理包完整性问题&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;管道读写超时-settimeout&quot;&gt;管道读写超时 setTimeout&lt;/h5&gt;

&lt;p&gt;设置管道读写操作的超时时间。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$timeout&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;单位为秒，支持浮点型，如&lt;code class=&quot;highlighter-rouge&quot;&gt;1.5&lt;/code&gt;表示&lt;code class=&quot;highlighter-rouge&quot;&gt;1s+500ms&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;，失败返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，可使用&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_errno&lt;/code&gt;获取错误码&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;阻塞模式-setblocking&quot;&gt;阻塞模式 setBlocking&lt;/h5&gt;

&lt;p&gt;设置管道是否为阻塞模式。默认&lt;code class=&quot;highlighter-rouge&quot;&gt;Process&lt;/code&gt;的管道为同步阻塞。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBlocking&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$blocking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$blocking&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;布尔型，默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;，设置为&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;时管道为非阻塞模式&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;非阻塞模式&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在异步程序中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_event_add&lt;/code&gt;添加管道事件监听时底层会自动将管道设置为非阻塞&lt;/li&gt;
  &lt;li&gt;在异步程序中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_event_write&lt;/code&gt;异步写入数据时底层会自动将管道设置为非阻塞&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;启用消息队列-usequeue&quot;&gt;启用消息队列 useQueue&lt;/h5&gt;

&lt;p&gt;启用消息队列作为进程间通信。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;useQueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$msgkey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$msgkey&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;消息队列的key，默认会使用&lt;code class=&quot;highlighter-rouge&quot;&gt;ftok(__FILE__, 1)&lt;/code&gt;作为&lt;code class=&quot;highlighter-rouge&quot;&gt;KEY&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$mode&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;通信模式，默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;，表示争抢模式，所有创建的子进程都会从队列中取数据&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;创建消息队列失败，会返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，反之，返回成功。可使用&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_strerror(swoole_errno())&lt;/code&gt;得到错误码和错误信息。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;非阻塞&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;1.9.2&lt;/code&gt;或更高版本中增加了&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_process::IPC_NOWAIT&lt;/code&gt;的支持，可将队列设置为非阻塞。在非阻塞模式下，队列已满调用&lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;方法、队列已空调用&lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt;方法时将不再阻塞立即返回。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//设置为非阻塞模式&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;useQueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IPC_NOWAIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;消息队列状态-statqueue&quot;&gt;消息队列状态 statQueue&lt;/h5&gt;

&lt;p&gt;查看消息队列状态。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;statQueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回一个数组，包括2项信息&lt;br /&gt;* &lt;code class=&quot;highlighter-rouge&quot;&gt;queue_num&lt;/code&gt; 队列中的任务数量&lt;br /&gt; * &lt;code class=&quot;highlighter-rouge&quot;&gt;queue_bytes&lt;/code&gt; 队列数据的总字节数&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;删除消息队列-freequeue&quot;&gt;删除消息队列 freeQueue&lt;/h5&gt;

&lt;p&gt;删除队列。此方法与&lt;code class=&quot;highlighter-rouge&quot;&gt;useQueue&lt;/code&gt;成对使用，&lt;code class=&quot;highlighter-rouge&quot;&gt;useQueue&lt;/code&gt;创建队列，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;freeQueue&lt;/code&gt;销毁队列。销毁队列后队列中的数据会被清空。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swoole_process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;freeQueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果程序中只调用了&lt;code class=&quot;highlighter-rouge&quot;&gt;useQueue&lt;/code&gt;方法，未调用&lt;code class=&quot;highlighter-rouge&quot;&gt;freeQueue&lt;/code&gt;在程序结束时并不会清除数据。重新运行程序时可以继续读取上次运行时留下的数据。&lt;/p&gt;

&lt;p&gt;系统重启时消息队列中的数据会被丢弃。&lt;/p&gt;

&lt;h5 id=&quot;推送消息队列-push&quot;&gt;推送消息队列 push&lt;/h5&gt;

&lt;p&gt;投递数据到消息队列中。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$data&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;要投递的数据，长度受限与操作系统内核参数的限制。默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;8192&lt;/code&gt;，最大不超过&lt;code class=&quot;highlighter-rouge&quot;&gt;65536&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;操作失败会返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，成功返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;默认模式下（阻塞模式），如果队列已满，push方法会阻塞等待&lt;/li&gt;
    &lt;li&gt;非阻塞模式下，如果队列已满，push方法会立即返回false&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;拉取消息队列-pop&quot;&gt;拉取消息队列 pop&lt;/h5&gt;

&lt;p&gt;从队列中提取数据。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$maxsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8192&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$maxsize&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;表示获取数据的最大尺寸，默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;8192&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;操作失败会返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，成功返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;默认模式下，如果队列中没有数据，&lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt;方法会阻塞等待&lt;/li&gt;
    &lt;li&gt;非阻塞模式下，如果队列中没有数据，&lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt;方法会立即返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，并设置错误码为&lt;code class=&quot;highlighter-rouge&quot;&gt;ENOMSG&lt;/code&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;关闭管道-close&quot;&gt;关闭管道 close&lt;/h5&gt;

&lt;p&gt;用于关闭创建的好的管道。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$which&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定关闭哪一个管道:&lt;br /&gt;0:同时关闭读和写(默认)&lt;br /&gt;1:关闭写&lt;br /&gt;2:关闭读&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;操作失败会返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，成功返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;退出&quot;&gt;退出&lt;/h5&gt;

&lt;p&gt;退出子进程&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$status&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;退出进程的状态码。&lt;br /&gt;如果为&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;表示正常结束，会继续执行&lt;code class=&quot;highlighter-rouge&quot;&gt;PHP&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown_function&lt;/code&gt;，其他扩展的清理工作。&lt;br /&gt;如果不为&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;，表示异常退出，会立即终止进程。不再执行&lt;code class=&quot;highlighter-rouge&quot;&gt;PHP&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown_function&lt;/code&gt;，其他扩展的清理工作。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;未完待续！&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/25/swoole-process/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/25/swoole-process/</guid>
        
        <category>php</category>
        
        
      </item>
    
      <item>
        <title>linux 信号字典</title>
        <description>&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;信号&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;值&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;处理动作&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;发出信号的原因&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGHUP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;终端挂起或者控制进程终止&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGINT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;键盘中断（如break键被按下）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGQUIT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;键盘的退出键被按下&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGILL&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;非法指令&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGABRT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;由abort(3)发出的退出指令&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGFPE&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;浮点异常&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGKILL&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;9&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;AEF&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Kill信号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGSEGV&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;无效的内存引用&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGPIPE&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;13&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;管道破裂: 写一个没有读端口的管道&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGALRM&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;由alarm(2)发出的信号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGTERM&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;15&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;终止信号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGUSR1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;30,10,16&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;用户自定义信号1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGUSR2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;31,12,17&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;用户自定义信号2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGCHLD&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;20,17,18&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;B&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;子进程结束信号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGCONT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;19,18,25&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;进程继续（曾被停止的进程）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGSTOP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;17,19,23&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;DEF&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;终止进程&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGTSTP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;18,20,24&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;D&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;控制终端（tty）上按下停止键&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGTTIN&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;21,21,26&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;D&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;后台进程企图从控制终端读&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SIGTTOU&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22,22,27&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;D&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;后台进程企图从控制终端写&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
        <pubDate>Mon, 25 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/25/linux-sign/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/25/linux-sign/</guid>
        
        <category>操作系统</category>
        
        
      </item>
    
      <item>
        <title>「Swoole」Table 内存表</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;swoole_table一个基于共享内存和锁实现的超高性能，并发数据结构。用于解决多进程/多线程数据共享和同步加锁问题。  &lt;br /&gt;
基于行锁，所以单次set/get/del在多线程/多进程的环境下是安全的。  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;set/get/del&lt;/code&gt;等方法是原子操作，用户代码中不需要担心数据加锁和同步的问题。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;优势&quot;&gt;优势&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;性能强悍，单线程每秒可读写200万次&lt;/li&gt;
  &lt;li&gt;应用代码无需加锁，&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_table&lt;/code&gt;内置行锁自旋锁，所有操作均是多线程/多进程安全。用户层完全不需要考虑数据同步问题。&lt;/li&gt;
  &lt;li&gt;支持多进程，&lt;code class=&quot;highlighter-rouge&quot;&gt;swoole_table&lt;/code&gt;可以用于多进程之间共享数据&lt;/li&gt;
  &lt;li&gt;使用行锁，而不是全局锁，仅当2个进程在同一CPU时间，并发读取同一条数据才会进行发生抢锁&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;接口&quot;&gt;接口&lt;/h3&gt;

&lt;h5 id=&quot;构造-__construct&quot;&gt;构造 __construct&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$conflict_proportion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$size&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;参数指定表格的最大行数，如果$size不是为2的N次方，如1024、8192,65536等，底层会自动调整为接近的一个数字，如果小于1024则默认成1024，即1024是最小值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$conflict_proportion&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;是哈希冲突的最大比例，超过这个比例，共享内存表就不允许再添加新的行元素&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;增加列-column&quot;&gt;增加列 column&lt;/h5&gt;

&lt;p&gt;内存表增加一列&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$name&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定字段的名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$type&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定字段类型，支持3种类型，&lt;code class=&quot;highlighter-rouge&quot;&gt;Table::TYPE_INT&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Table::TYPE_FLOAT&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Table::TYPE_STRING&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$size&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定字符串字段的最大长度，单位为字节。字符串类型的字段必须指定&lt;code class=&quot;highlighter-rouge&quot;&gt;$size&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;类型&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Table::TYPE_INT&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;默认为4个字节，可以设置1，2，4，8一共4种长度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Table::TYPE_STRING&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;设置后，设置的字符串不能超过此长度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Table::TYPE_FLOAT&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;会占用8个字节的内存&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;创建-create&quot;&gt;创建 create&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;创建内存表。  &lt;br /&gt;
执行&lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt;向操作系统申请内存&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;系统内存不足，申请失败返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，反之，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Table&lt;/code&gt;使用共享内存来保存数据，在创建子进程前，务必要执行&lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Server&lt;/code&gt;中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Table&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt;必须在&lt;code class=&quot;highlighter-rouge&quot;&gt;Server-&amp;gt;start()&lt;/code&gt;前执行&lt;/p&gt;

&lt;p&gt;获取实际占用内存的尺寸使用&lt;code class=&quot;highlighter-rouge&quot;&gt;$table-&amp;gt;memorySize&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;设置值-set&quot;&gt;设置值 set&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;设置行的数据&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;Table&lt;/code&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;k-v&lt;/code&gt;的方式来访问数据。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;void&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;数据的&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;，相同的&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;对应同一行数据，如果&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;同一个&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;，会覆盖上一次的数据&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$value&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;必须是一个数组，必须与字段定义的&lt;code class=&quot;highlighter-rouge&quot;&gt;$name&lt;/code&gt;完全相同&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;如果传入字符串长度超过了列定义时设定的最大尺寸，底层会自动截断。&lt;/p&gt;

&lt;h5 id=&quot;自增-incr&quot;&gt;自增 incr&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;原子自增操作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;incr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mixed&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$incrby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定数据的&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;，如果&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;对应的行不存在，默认列的值为&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$column&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定列名，仅支持浮点型和整型字段&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$incrby&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;增量，默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;。如果列为整形，&lt;code class=&quot;highlighter-rouge&quot;&gt;$incrby&lt;/code&gt;必须为&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;型，如果列为浮点型，&lt;code class=&quot;highlighter-rouge&quot;&gt;$incrby&lt;/code&gt;必须为&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回最终的结果数值&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;自减-decr&quot;&gt;自减 decr&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;原子自减操作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mixed&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$decrby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定数据的&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;，如果&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;对应的行不存在，底层会首先将该行数据初始化为&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$column&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定列名，仅支持浮点型和整型字段&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$decrby&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;减量，默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;。如果列为整形，&lt;code class=&quot;highlighter-rouge&quot;&gt;$decrby&lt;/code&gt;必须为&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;型，如果列为浮点型，&lt;code class=&quot;highlighter-rouge&quot;&gt;$decrby&lt;/code&gt;必须为&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回最终的结果数值&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;获取值-get&quot;&gt;获取值 get&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;获取一行数据&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定查询数据行的KEY，必须为字符串类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$field&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当设置该值仅返回该字段的值，而不是整个记录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;不存在，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，反之，返回结果&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;key是否存在-exist&quot;&gt;key是否存在 exist&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;检查table中是否存在某一个key。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定查询数据行的KEY，必须为字符串类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;不存在，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，反之，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;获取总数-count&quot;&gt;获取总数 count&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;返回table中存在的条目数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;删除-del&quot;&gt;删除 del&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;删除数据&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;del&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$key&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指定查询数据行的KEY，必须为字符串类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;不存在，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，反之，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;实例&quot;&gt;实例&lt;/h3&gt;

&lt;h5 id=&quot;数组&quot;&gt;数组&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_STRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'num'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_FLOAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;145&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'iPhone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'num'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1415&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'google'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;358&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AlphaGo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'num'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1415&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'microsoft'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Windows&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'microsoft'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'num'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1997.03'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'microsoft'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'google'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'num'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;500.90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'google'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;web-socket&quot;&gt;web-socket&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'from_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_STRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9501&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dispatch_mode'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'connect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$from_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connection_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;INFO: fd=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, from_id=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$from_id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, addr=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'remote_ip'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'remote_port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'receive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$from_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;explode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//get&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'get'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//get self&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$get_fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;intval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$get_fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;var_export&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//set&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'set'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'from_id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fd'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ERROR&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OK&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;command error.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$serv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 20 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/20/swoole-table/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/20/swoole-table/</guid>
        
        <category>php</category>
        
        
      </item>
    
      <item>
        <title>「Swoole」Lock 锁</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;创建一个锁，用来实现数据同步。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;支持五种类型锁：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;文件锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_FILELOCK&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;读写锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_RWLOCK&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;信号量 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_SEM&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;互斥锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_MUTEX&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;自旋锁 &lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_SPINLOCK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;请勿在&lt;code class=&quot;highlighter-rouge&quot;&gt;onReceive&lt;/code&gt;等回调函数中创建锁，否则底层的&lt;code class=&quot;highlighter-rouge&quot;&gt;GlobalMemory&lt;/code&gt;内存会持续增长，造成内存泄漏。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不要循环创建/销毁锁的对象，否则会发生内存泄漏&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;接口&quot;&gt;接口&lt;/h3&gt;

&lt;h5 id=&quot;构造方法-__construct&quot;&gt;构造方法 __construct&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;swoole_lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lockfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$type&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;锁的类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$lockfile&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当类型为&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_FILELOCK&lt;/code&gt;时必须传入，指定文件锁的路径&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加锁阻塞-lock&quot;&gt;加锁（阻塞） lock&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;加锁操作。如果有其他进程持有锁，那这里将进入阻塞，直到持有锁的进程&lt;code class=&quot;highlighter-rouge&quot;&gt;unlock&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加锁非阻塞-trylock&quot;&gt;加锁（非阻塞） trylock&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;加锁操作。与&lt;code class=&quot;highlighter-rouge&quot;&gt;lock&lt;/code&gt;方法不同的是，&lt;code class=&quot;highlighter-rouge&quot;&gt;trylock&lt;/code&gt;不会阻塞，它会立即返回。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trylock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;释放锁-unlock&quot;&gt;释放锁 unlock&lt;/h5&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加读锁阻塞-lock_read&quot;&gt;加读锁（阻塞） lock_read&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;只读加锁。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加读锁非阻塞-trylock_read&quot;&gt;加读锁（非阻塞） trylock_read&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;只读加锁。此方法与&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_read&lt;/code&gt;相同，但是非阻塞的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trylock_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;加锁等待-lockwait&quot;&gt;加锁等待 lockwait&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;加锁操作，作用与swoole_lock-&amp;gt;lock一致，但lockwait可以设置超时时间。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swoole_lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lockwait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;参数&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$timeout&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;传入超时时间，默认为1秒&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;返回&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;成功&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 失败&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;注意点&quot;&gt;注意点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;只有&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_RWLOCK&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_FILELOCK&lt;/code&gt;支持&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_read&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOlE_SEM&lt;/code&gt;不支持&lt;code class=&quot;highlighter-rouge&quot;&gt;trylock&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lock&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;trylock&lt;/code&gt;属于独占锁&lt;/li&gt;
  &lt;li&gt;只有&lt;code class=&quot;highlighter-rouge&quot;&gt;SWOOLE_MUTEX&lt;/code&gt;支持lockwait&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;实例&quot;&gt;实例&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**
 * SWOOLE_MUTEX 互斥锁
 * SWOOLE_FILELOCK 文件锁，需要在第二个参数传入一个锁文件
 * SWOOLE_SPINLOCK 自旋锁(请查看swoole扩展信息，检测是否支持)
 * SWOOLE_SEM 信号量
 * SWOOLE_RWLOCK 读写锁
 */&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swoole_lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SWOOLE_MUTEX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Master]create lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pcntl_fork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Child] Wait Lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Child] Get Lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[Child] exit&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Master]release lock&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Master]exit&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 20 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/03/20/swoole-lock/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/20/swoole-lock/</guid>
        
        <category>php</category>
        
        
      </item>
    
  </channel>
</rss>
